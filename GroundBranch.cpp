/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    Ground_Branch               |
 * | Version: 10.09.2025                  |
 * | Date:    09/10/2025                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/GroundBranch_ENUMS.h"
#include "Headers/GroundBranch_UGBAbilityTask_CharacterWalkTo.h"
#include "Headers/GroundBranch_UGBAbilityTask_Tick.h"
#include "Headers/GroundBranch_UGBAbilityTask_WaitAbilityEnded.h"
#include "Headers/GroundBranch_UGBAbilityTask_WaitActionPress.h"
#include "Headers/GroundBranch_UGBAbilityTask_WaitActionRelease.h"
#include "Headers/GroundBranch_UGBAbilityTask_WaitForNextTick.h"
#include "Headers/GroundBranch_AGBAIBarkManager.h"
#include "Headers/GroundBranch_UGBAIBehaviorBase.h"
#include "Headers/GroundBranch_UGBAIBehaviorSelectionComponent.h"
#include "Headers/GroundBranch_AGBAIController.h"
#include "Headers/GroundBranch_UGBAICoordinatorSubsystem.h"
#include "Headers/GroundBranch_AGBAIDirector.h"
#include "Headers/GroundBranch_AGBAISpawnManager.h"
#include "Headers/GroundBranch_AGBAISpawnPoint.h"
#include "Headers/GroundBranch_AGBAISquad.h"
#include "Headers/GroundBranch_AGBInvItem.h"
#include "Headers/GroundBranch_AGBPouch.h"
#include "Headers/GroundBranch_AGBAIGuardPoint.h"
#include "Headers/GroundBranch_AGBMissionVolume.h"
#include "Headers/GroundBranch_AGBAIHotspot.h"
#include "Headers/GroundBranch_UGBAIObjectiveBase.h"
#include "Headers/GroundBranch_UGBAIObjectiveGeneratorBase.h"
#include "Headers/GroundBranch_UGBAIExtensionComponent.h"
#include "Headers/GroundBranch_UGBAIFunctionLibrary.h"
#include "Headers/GroundBranch_UGBBulletMovementComponent.h"
#include "Headers/GroundBranch_AGBBulletProjectile.h"
#include "Headers/GroundBranch_UGBCameraModifier.h"
#include "Headers/GroundBranch_UGBCampaignSettings.h"
#include "Headers/GroundBranch_AGBCharacter.h"
#include "Headers/GroundBranch_UGBCharacterMovement.h"
#include "Headers/GroundBranch_UGBCharacterProneIK.h"
#include "Headers/GroundBranch_UGBCharAnimInstance.h"
#include "Headers/GroundBranch_UGBCharAnimInstanceLayer.h"
#include "Headers/GroundBranch_UGBCharEmoteData.h"
#include "Headers/GroundBranch_UGBCharVoiceData.h"
#include "Headers/GroundBranch_UGBAnimNotifyState_BlendRagdoll.h"
#include "Headers/GroundBranch_UGBAssetManager.h"
#include "Headers/GroundBranch_UGBAssetManagerFunctionLibrary.h"
#include "Headers/GroundBranch_UGBAssetManagerSettings.h"
#include "Headers/GroundBranch_AGBAudioGeo.h"
#include "Headers/GroundBranch_UGBExternalMagazineComponent.h"
#include "Headers/GroundBranch_AGBGameTrigger.h"
#include "Headers/GroundBranch_AGBExtractionPoint.h"
#include "Headers/GroundBranch_AGBFirearm.h"
#include "Headers/GroundBranch_UGBFirearmAnimInstance.h"
#include "Headers/GroundBranch_UGBItemCameraModifier.h"
#include "Headers/GroundBranch_UGBFirearmCameraModifier.h"
#include "Headers/GroundBranch_UGBFirearmGameplayAbility_Shoot.h"
#include "Headers/GroundBranch_UGBFocusCameraModifier.h"
#include "Headers/GroundBranch_UGBFoliageBlastComponent.h"
#include "Headers/GroundBranch_UGBFoliageInstancedStaticMeshComponent.h"
#include "Headers/GroundBranch_UGBBarrelComponent.h"
#include "Headers/GroundBranch_AGBBenchmarker.h"
#include "Headers/GroundBranch_UGBBTTask_MoveToCover.h"
#include "Headers/GroundBranch_UGBGameUserSettings.h"
#include "Headers/GroundBranch_UGBGameplayAbility_FreezeActions.h"
#include "Headers/GroundBranch_UGBGameplayAbility_ReadyRoom.h"
#include "Headers/GroundBranch_AGBAIPatrolRoute.h"
#include "Headers/GroundBranch_UGBAISense_Hearing.h"
#include "Headers/GroundBranch_UGBAISense_Sight.h"
#include "Headers/GroundBranch_UGBAISenseConfig_Hearing.h"
#include "Headers/GroundBranch_UGBAISenseConfig_Sight.h"
#include "Headers/GroundBranch_UGBAISenseEvent_Hearing.h"
#include "Headers/GroundBranch_UGBGameplayAbilitySet.h"
#include "Headers/GroundBranch_UGBGameplayEffect_BlockHostileActions.h"
#include "Headers/GroundBranch_UGBBTTask_WaitBlackboardTime.h"
#include "Headers/GroundBranch_AGBBulletItem.h"
#include "Headers/GroundBranch_IGBKytAIInterface.h"
#include "Headers/GroundBranch_AGBPlayerController.h"
#include "Headers/GroundBranch_UGBCheatManager.h"
#include "Headers/GroundBranch_UGBClimatePreset.h"
#include "Headers/GroundBranch_AGBClothing.h"
#include "Headers/GroundBranch_UGBColourBlindnessCameraModifier.h"
#include "Headers/GroundBranch_UGBCrowdFollowingComponent.h"
#include "Headers/GroundBranch_UGBInvItemAudioEventSet.h"
#include "Headers/GroundBranch_UGBInvItemDragDropOperation.h"
#include "Headers/GroundBranch_UGBInvItemEffectSet.h"
#include "Headers/GroundBranch_UGBInvItemMontageSet.h"
#include "Headers/GroundBranch_UGBInvItemPickupComponent.h"
#include "Headers/GroundBranch_UGBInvItemPickupWidget.h"
#include "Headers/GroundBranch_UGBInvItemSkin.h"
#include "Headers/GroundBranch_UGBInvItemSkinInfo.h"
#include "Headers/GroundBranch_UGBItemBeamComponent.h"
#include "Headers/GroundBranch_UGBItemMeshByTagsUserData.h"
#include "Headers/GroundBranch_UGBItemMorphByTagsUserData.h"
#include "Headers/GroundBranch_AGBItemProjectile.h"
#include "Headers/GroundBranch_UGBItemProjectileMovementComponent.h"
#include "Headers/GroundBranch_UGBItemViewOverlayWidget.h"
#include "Headers/GroundBranch_UGBKitFunctionLibrary.h"
#include "Headers/GroundBranch_AGBKitInfo.h"
#include "Headers/GroundBranch_UGBLuaInventoryPackage.h"
#include "Headers/GroundBranch_UGBLuaMathPackage.h"
#include "Headers/GroundBranch_UGBLuaPlayerPackage.h"
#include "Headers/GroundBranch_UGBLuaStaticsLibrary.h"
#include "Headers/GroundBranch_UGBLuaTimerPackage.h"
#include "Headers/GroundBranch_UGBLuaVectorPackage.h"
#include "Headers/GroundBranch_UGBLXRDetectionComponent.h"
#include "Headers/GroundBranch_UGBAISettings.h"
#include "Headers/GroundBranch_IGBAISightTargetInterface.h"
#include "Headers/GroundBranch_UGBGameViewportClient.h"
#include "Headers/GroundBranch_UGBGlobalAbilitySystem.h"
#include "Headers/GroundBranch_AGBGrenade.h"
#include "Headers/GroundBranch_AGBHair.h"
#include "Headers/GroundBranch_AGBHead.h"
#include "Headers/GroundBranch_AGBHolster.h"
#include "Headers/GroundBranch_UGBHotspotDataAsset.h"
#include "Headers/GroundBranch_AGBHUD.h"
#include "Headers/GroundBranch_UGBIngameMapWidget.h"
#include "Headers/GroundBranch_IGBInputOverrideInterface.h"
#include "Headers/GroundBranch_AGBInsertionPoint.h"
#include "Headers/GroundBranch_UGBInternalMagazineComponent.h"
#include "Headers/GroundBranch_AGBInvItemAttachment_SocketTag.h"
#include "Headers/GroundBranch_AGBMagazine.h"
#include "Headers/GroundBranch_AGBMinimap.h"
#include "Headers/GroundBranch_UGBMissionData.h"
#include "Headers/GroundBranch_AGBMissionObjective.h"
#include "Headers/GroundBranch_AGBMuzzleDevice.h"
#include "Headers/GroundBranch_UGBCustomListView.h"
#include "Headers/GroundBranch_UGBCustomTileView.h"
#include "Headers/GroundBranch_AGBKytController.h"
#include "Headers/GroundBranch_AGBKytDetectableActor.h"
#include "Headers/GroundBranch_AGBKytFriendlyController.h"
#include "Headers/GroundBranch_AGBKytFriendlySpawn.h"
#include "Headers/GroundBranch_AGBPlatform.h"
#include "Headers/GroundBranch_AGBPlayerCameraManager.h"
#include "Headers/GroundBranch_UGBPlayerCommandComponent.h"
#include "Headers/GroundBranch_UGBPlayerInput.h"
#include "Headers/GroundBranch_UGBPlayerLoadingScreenComponent.h"
#include "Headers/GroundBranch_AGBPlayerNightVisionStatus.h"
#include "Headers/GroundBranch_UGBPlayerSettings.h"
#include "Headers/GroundBranch_AGBAmmoPouch.h"
#include "Headers/GroundBranch_UGBInvItemDragDropPayloadBase.h"
#include "Headers/GroundBranch_UGBInvItemDragDropPayload.h"
#include "Headers/GroundBranch_UGBPouchDragDropPayload.h"
#include "Headers/GroundBranch_UGBAmmoPouchDragDropPayload.h"
#include "Headers/GroundBranch_UGBKytStatics.h"
#include "Headers/GroundBranch_AGBLadder.h"
#include "Headers/GroundBranch_UGBLadderComponent.h"
#include "Headers/GroundBranch_UGBLevelSummary.h"
#include "Headers/GroundBranch_UGBLocalPlayer.h"
#include "Headers/GroundBranch_UGBLuaActorPackage.h"
#include "Headers/GroundBranch_UGBLuaAIPackage.h"
#include "Headers/GroundBranch_UGBLuaComponent.h"
#include "Headers/GroundBranch_AGBPlayerStart.h"
#include "Headers/GroundBranch_AGBPlayerStateBase.h"
#include "Headers/GroundBranch_AGBPlayerState.h"
#include "Headers/GroundBranch_AGBPortalSystemManager.h"
#include "Headers/GroundBranch_UGBPostProcessCameraModifier.h"
#include "Headers/GroundBranch_UGBRadialMenuElementWidget.h"
#include "Headers/GroundBranch_UGBRadialMenuWidget.h"
#include "Headers/GroundBranch_AGBRailAttachment.h"
#include "Headers/GroundBranch_UGBRailComponent.h"
#include "Headers/GroundBranch_UGBRailMountComponent.h"
#include "Headers/GroundBranch_UGBFoliageVisibilityAssetData.h"
#include "Headers/GroundBranch_UGBFrontSightPostComponent.h"
#include "Headers/GroundBranch_UGBFunctionLibrary.h"
#include "Headers/GroundBranch_UGBGameEngine.h"
#include "Headers/GroundBranch_UGBLuaGameModePackage.h"
#include "Headers/GroundBranch_UGBLuaGameplayStaticsPackage.h"
#include "Headers/GroundBranch_IGBLuaInterface.h"
#include "Headers/GroundBranch_AGBSpectatorPawn.h"
#include "Headers/GroundBranch_AGBSquad.h"
#include "Headers/GroundBranch_AGBSquadState.h"
#include "Headers/GroundBranch_UGBTaggedMontages.h"
#include "Headers/GroundBranch_UGBTimeOfDayAlarmComponent.h"
#include "Headers/GroundBranch_UGBTubeMagComponent.h"
#include "Headers/GroundBranch_UGBTypes.h"
#include "Headers/GroundBranch_UGBNavArea_UseActorNavLink.h"
#include "Headers/GroundBranch_AGBNavBlocker.h"
#include "Headers/GroundBranch_AGBNavLinkProxy.h"
#include "Headers/GroundBranch_AGBNavLinkProxy_Door.h"
#include "Headers/GroundBranch_AGBNavLinkProxy_Ladder.h"
#include "Headers/GroundBranch_UGBNavLinkUseActorComponent.h"
#include "Headers/GroundBranch_AGBObjectiveMarker.h"
#include "Headers/GroundBranch_UGBOperatorDataAsset.h"
#include "Headers/GroundBranch_AGBPatch.h"
#include "Headers/GroundBranch_UGBPatchGeneratorWidget.h"
#include "Headers/GroundBranch_UGBPhysicalMaterial.h"
#include "Headers/GroundBranch_UGBGameplayEffect_CeaseFireAndHold.h"
#include "Headers/GroundBranch_UGBGameplayEffect_FreezeActions.h"
#include "Headers/GroundBranch_AGBReadyRoomPlayerStart.h"
#include "Headers/GroundBranch_AGBRestraint.h"
#include "Headers/GroundBranch_AGBRestrictedAreaVolume.h"
#include "Headers/GroundBranch_UGBUIFunctionLibrary.h"
#include "Headers/GroundBranch_IGBUseInterface.h"
#include "Headers/GroundBranch_UGBVOIPAudioComponent.h"
#include "Headers/GroundBranch_UGBGameInstance.h"
#include "Headers/GroundBranch_AGBGameMode.h"
#include "Headers/GroundBranch_IGBGameModeActorInterface.h"
#include "Headers/GroundBranch_UGBGameModeFunctionLibrary.h"
#include "Headers/GroundBranch_UGBGameModeLuaState.h"
#include "Headers/GroundBranch_UGBGameplayAbility_BlockHostileActions.h"
#include "Headers/GroundBranch_UGBAbilitySystemBlueprintLibrary.h"
#include "Headers/GroundBranch_UGBAbilitySystemComponent.h"
#include "Headers/GroundBranch_UGBAbilityTagRelationshipMapping.h"
#include "Headers/GroundBranch_UGBPhysicsCollisionHandler.h"
#include "Headers/GroundBranch_UGBGameplayEffect_RestrictedArea.h"
#include "Headers/GroundBranch_UGBGameplayEffect_SpawnAreaWarning.h"
#include "Headers/GroundBranch_UGBVOIPManager.h"
#include "Headers/GroundBranch_AGBWaterVolume.h"
#include "Headers/GroundBranch_AGBWeatherInfo.h"
#include "Headers/GroundBranch_AGBWorldSettings.h"
#include "Headers/GroundBranch_UJoyColorWheel.h"
#include "Headers/GroundBranch_UTKMathFunctionLibrary.h"
#include "Headers/GroundBranch_UYourGameGauntletController.h"
#include "Headers/GroundBranch_UGBRestrictionEntryLibrary.h"
#include "Headers/GroundBranch_AGBSearchableProp.h"
#include "Headers/GroundBranch_AGBSequencerEvent.h"
#include "Headers/GroundBranch_UGBSightComponent.h"
#include "Headers/GroundBranch_AGBSky.h"
#include "Headers/GroundBranch_AGBSmartTriggerVolumeBase.h"
#include "Headers/GroundBranch_AGBSkylightOverrideVolume.h"
#include "Headers/GroundBranch_AGBSpatialAudioVolume.h"
#include "Headers/GroundBranch_AGBSpawnProtectionVolume.h"
#include "Headers/GroundBranch_AGBAmmunition.h"
#include "Headers/GroundBranch_UGBAmmunitionFeedComponent.h"
#include "Headers/GroundBranch_UGBAnimFunctionLibrary.h"
#include "Headers/GroundBranch_UGBAnimNotify_PlayCameraAnim.h"
#include "Headers/GroundBranch_UGBAnimNotify_TriggerRagdoll.h"
#include "Headers/GroundBranch_UGBGameplayEffect_SpawnProtection.h"
#include "Headers/GroundBranch_UGBGameplayStatics.h"
#include "Headers/GroundBranch_AGBGameSession.h"
#include "Headers/GroundBranch_AGBGameState.h"
#include "Headers/GroundBranch_AGBGameTriggerBase.h"
#include "Headers/GroundBranch_UGBGameplayAbility_BlockMovement.h"
#include "Headers/GroundBranch_AGBDebugCameraController.h"
#include "Headers/GroundBranch_UGBDialogWidget.h"
#include "Headers/GroundBranch_UGBGameplayAbility_Death.h"
#include "Headers/GroundBranch_AGBDirectionalSunlight.h"
#include "Headers/GroundBranch_AGBDoorSwinging.h"
#include "Headers/GroundBranch_AGBDroppedInvItem.h"
#include "Headers/GroundBranch_UGBEjectComponent.h"
#include "Headers/GroundBranch_UGBGameplayAbility.h"
#include "Headers/GroundBranch_UGBEquippedGameplayAbility.h"
#include "Headers/GroundBranch_AGBEvent.h"
#include "Headers/GroundBranch_AGBEventManager.h"
#include "Headers/GroundBranch_UGBEventSpawnBehavior.h"
#include "Headers/GroundBranch_UGBExistingInvItemDragDropPayload.h"
#include "Headers/GroundBranch_IGBAnimNotifyInterface.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GroundBranch
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_CharacterWalkTo.CharacterWalkTo
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TaskInstanceName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              RotationRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxFailedMoveTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_CharacterWalkTo*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_CharacterWalkTo* UGBAbilityTask_CharacterWalkTo::CharacterWalkTo(GameplayAbilities::UGameplayAbility* OwningAbility, const BasicTypes::FName& TaskInstanceName, const CoreUObject::FVector& Location, float Radius, const CoreUObject::FRotator& Rotation, float RotationRate, float MaxFailedMoveTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_CharacterWalkTo.CharacterWalkTo");
        
        UGBAbilityTask_CharacterWalkTo_CharacterWalkTo_Params params {};
        params.OwningAbility = OwningAbility;
        params.TaskInstanceName = TaskInstanceName;
        params.Location = Location;
        params.Radius = Radius;
        params.Rotation = Rotation;
        params.RotationRate = RotationRate;
        params.MaxFailedMoveTime = MaxFailedMoveTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_Tick.Tick
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TaskInstanceName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_Tick*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_Tick* UGBAbilityTask_Tick::Tick(GameplayAbilities::UGameplayAbility* OwningAbility, const BasicTypes::FName& TaskInstanceName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_Tick.Tick");
        
        UGBAbilityTask_Tick_Tick_Params params {};
        params.OwningAbility = OwningAbility;
        params.TaskInstanceName = TaskInstanceName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.WaitForAbilityEndedWithTagRequirements
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::FGameplayTagRequirements        TagRequirements                                            (Parm, NativeAccessSpecifierPublic)
     *         bool                                               IncludeTriggeredAbilities                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               TriggerOnce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_WaitAbilityEnded*     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_WaitAbilityEnded* UGBAbilityTask_WaitAbilityEnded::WaitForAbilityEndedWithTagRequirements(GameplayAbilities::UGameplayAbility* OwningAbility, const GameplayAbilities::FGameplayTagRequirements& TagRequirements, bool IncludeTriggeredAbilities, bool TriggerOnce)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.WaitForAbilityEndedWithTagRequirements");
        
        UGBAbilityTask_WaitAbilityEnded_WaitForAbilityEndedWithTagRequirements_Params params {};
        params.OwningAbility = OwningAbility;
        params.TagRequirements = TagRequirements;
        params.IncludeTriggeredAbilities = IncludeTriggeredAbilities;
        params.TriggerOnce = TriggerOnce;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.WaitForAbilityEnded_Query
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagQuery                    Query                                                      (Parm, NativeAccessSpecifierPublic)
     *         bool                                               IncludeTriggeredAbilities                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               TriggerOnce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_WaitAbilityEnded*     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_WaitAbilityEnded* UGBAbilityTask_WaitAbilityEnded::WaitForAbilityEnded_Query(GameplayAbilities::UGameplayAbility* OwningAbility, const GameplayTags::FGameplayTagQuery& Query, bool IncludeTriggeredAbilities, bool TriggerOnce)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.WaitForAbilityEnded_Query");
        
        UGBAbilityTask_WaitAbilityEnded_WaitForAbilityEnded_Query_Params params {};
        params.OwningAbility = OwningAbility;
        params.Query = Query;
        params.IncludeTriggeredAbilities = IncludeTriggeredAbilities;
        params.TriggerOnce = TriggerOnce;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.WaitForAbilityEnded
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         WithTag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         WithoutTag                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               IncludeTriggeredAbilities                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               TriggerOnce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_WaitAbilityEnded*     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_WaitAbilityEnded* UGBAbilityTask_WaitAbilityEnded::WaitForAbilityEnded(GameplayAbilities::UGameplayAbility* OwningAbility, const GameplayTags::FGameplayTag& WithTag, const GameplayTags::FGameplayTag& WithoutTag, bool IncludeTriggeredAbilities, bool TriggerOnce)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.WaitForAbilityEnded");
        
        UGBAbilityTask_WaitAbilityEnded_WaitForAbilityEnded_Params params {};
        params.OwningAbility = OwningAbility;
        params.WithTag = WithTag;
        params.WithoutTag = WithoutTag;
        params.IncludeTriggeredAbilities = IncludeTriggeredAbilities;
        params.TriggerOnce = TriggerOnce;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.OnAbilityEnded
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               EndedAbility                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilityTask_WaitAbilityEnded::OnAbilityEnded(GameplayAbilities::UGameplayAbility* EndedAbility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitAbilityEnded.OnAbilityEnded");
        
        UGBAbilityTask_WaitAbilityEnded_OnAbilityEnded_Params params {};
        params.EndedAbility = EndedAbility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitActionPress.WaitActionPress
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestAlreadyPressed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_WaitActionPress*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_WaitActionPress* UGBAbilityTask_WaitActionPress::WaitActionPress(GameplayAbilities::UGameplayAbility* OwningAbility, const BasicTypes::FName& ActionName, bool bTestAlreadyPressed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitActionPress.WaitActionPress");
        
        UGBAbilityTask_WaitActionPress_WaitActionPress_Params params {};
        params.OwningAbility = OwningAbility;
        params.ActionName = ActionName;
        params.bTestAlreadyPressed = bTestAlreadyPressed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitActionPress.OnPressCallback
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAbilityTask_WaitActionPress::OnPressCallback()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitActionPress.OnPressCallback");
        
        UGBAbilityTask_WaitActionPress_OnPressCallback_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitActionRelease.WaitActionRelease
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestAlreadyReleased                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_WaitActionRelease*    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_WaitActionRelease* UGBAbilityTask_WaitActionRelease::WaitActionRelease(GameplayAbilities::UGameplayAbility* OwningAbility, const BasicTypes::FName& ActionName, bool bTestAlreadyReleased)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitActionRelease.WaitActionRelease");
        
        UGBAbilityTask_WaitActionRelease_WaitActionRelease_Params params {};
        params.OwningAbility = OwningAbility;
        params.ActionName = ActionName;
        params.bTestAlreadyReleased = bTestAlreadyReleased;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitActionRelease.OnReleaseCallback
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAbilityTask_WaitActionRelease::OnReleaseCallback()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitActionRelease.OnReleaseCallback");
        
        UGBAbilityTask_WaitActionRelease_OnReleaseCallback_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilityTask_WaitForNextTick.WaitForNextTick
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               OwningAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAbilityTask_WaitForNextTick*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAbilityTask_WaitForNextTick* UGBAbilityTask_WaitForNextTick::WaitForNextTick(GameplayAbilities::UGameplayAbility* OwningAbility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilityTask_WaitForNextTick.WaitForNextTick");
        
        UGBAbilityTask_WaitForNextTick_WaitForNextTick_Params params {};
        params.OwningAbility = OwningAbility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBarkManager.Bark
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BarkType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BarkKey                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIBarkManager::Bark(GroundBranch::AGBKytController* AIController, const BasicTypes::FName& BarkType, const BasicTypes::FName& BarkKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBarkManager.Bark");
        
        AGBAIBarkManager_Bark_Params params {};
        params.AIController = AIController;
        params.BarkType = BarkType;
        params.BarkKey = BarkKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.TryGetCurrentObjective
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIObjectiveBase*                  ObjectiveClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAIObjectiveBase*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAIObjectiveBase* UGBAIBehaviorBase::TryGetCurrentObjective(GroundBranch::UGBAIObjectiveBase* ObjectiveClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.TryGetCurrentObjective");
        
        UGBAIBehaviorBase_TryGetCurrentObjective_Params params {};
        params.ObjectiveClass = ObjectiveClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.TickState
     *         Flags  -> ()
     * Parameters:
     *         float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorBase::TickState(float DeltaTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.TickState");
        
        UGBAIBehaviorBase_TickState_Params params {};
        params.DeltaTime = DeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.PreCondition
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAIBehaviorBase::PreCondition()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.PreCondition");
        
        UGBAIBehaviorBase_PreCondition_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.OnExitState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorBase::OnExitState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.OnExitState");
        
        UGBAIBehaviorBase_OnExitState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.OnEnterState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorBase::OnEnterState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.OnEnterState");
        
        UGBAIBehaviorBase_OnEnterState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.GetScore
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBAIBehaviorBase::GetScore()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.GetScore");
        
        UGBAIBehaviorBase_GetScore_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.GetCommonBlackboard
     *         Flags  -> ()
     * Parameters:
     *         KytheraPlugin::UKytBlackboard*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    KytheraPlugin::UKytBlackboard* UGBAIBehaviorBase::GetCommonBlackboard()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.GetCommonBlackboard");
        
        UGBAIBehaviorBase_GetCommonBlackboard_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorBase.GetCommandBlackboard
     *         Flags  -> ()
     * Parameters:
     *         KytheraPlugin::UKytBlackboard*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    KytheraPlugin::UKytBlackboard* UGBAIBehaviorBase::GetCommandBlackboard()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorBase.GetCommandBlackboard");
        
        UGBAIBehaviorBase_GetCommandBlackboard_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.TryGetCurrentObjective
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIObjectiveBase*                  ObjectiveClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAIObjectiveBase*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAIObjectiveBase* UGBAIBehaviorSelectionComponent::TryGetCurrentObjective(GroundBranch::UGBAIObjectiveBase* ObjectiveClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.TryGetCurrentObjective");
        
        UGBAIBehaviorSelectionComponent_TryGetCurrentObjective_Params params {};
        params.ObjectiveClass = ObjectiveClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.SetObjectiveGenerator
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIObjectiveGeneratorBase*         Generator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorSelectionComponent::SetObjectiveGenerator(GroundBranch::UGBAIObjectiveGeneratorBase* Generator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.SetObjectiveGenerator");
        
        UGBAIBehaviorSelectionComponent_SetObjectiveGenerator_Params params {};
        params.Generator = Generator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.SetCurrentBehavior
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIBehaviorBase*                   NewBehavior                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorSelectionComponent::SetCurrentBehavior(GroundBranch::UGBAIBehaviorBase* NewBehavior)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.SetCurrentBehavior");
        
        UGBAIBehaviorSelectionComponent_SetCurrentBehavior_Params params {};
        params.NewBehavior = NewBehavior;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.GetCurrentBehavior
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIBehaviorBase*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAIBehaviorBase* UGBAIBehaviorSelectionComponent::GetCurrentBehavior()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.GetCurrentBehavior");
        
        UGBAIBehaviorSelectionComponent_GetCurrentBehavior_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.GetBehaviors
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::UGBAIBehaviorBase*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::UGBAIBehaviorBase*> UGBAIBehaviorSelectionComponent::GetBehaviors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.GetBehaviors");
        
        UGBAIBehaviorSelectionComponent_GetBehaviors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.AddObjective
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIObjectiveBase*                  Objective                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorSelectionComponent::AddObjective(GroundBranch::UGBAIObjectiveBase* Objective)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.AddObjective");
        
        UGBAIBehaviorSelectionComponent_AddObjective_Params params {};
        params.Objective = Objective;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.AddBehavior
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAIBehaviorBase*                   Behavior                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIBehaviorSelectionComponent::AddBehavior(GroundBranch::UGBAIBehaviorBase* Behavior)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIBehaviorSelectionComponent.AddBehavior");
        
        UGBAIBehaviorSelectionComponent_AddBehavior_Params params {};
        params.Behavior = Behavior;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.UpdateEquippedType
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::UpdateEquippedType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.UpdateEquippedType");
        
        AGBAIController_UpdateEquippedType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.UnFreeze
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::UnFreeze()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.UnFreeze");
        
        AGBAIController_UnFreeze_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.StopFiring
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::StopFiring()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.StopFiring");
        
        AGBAIController_StopFiring_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.StartFiring
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::StartFiring()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.StartFiring");
        
        AGBAIController_StartFiring_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.ShowDebugInfoEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::ShowDebugInfoEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.ShowDebugInfoEvent");
        
        AGBAIController_ShowDebugInfoEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetViewRotation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              NewRotation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetViewRotation(const CoreUObject::FRotator& NewRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetViewRotation");
        
        AGBAIController_SetViewRotation_Params params {};
        params.NewRotation = NewRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorUseWaitLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorUseWaitLocation(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorUseWaitLocation");
        
        AGBAIController_SetUsableActorUseWaitLocation_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorUseStart
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorUseStart(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorUseStart");
        
        AGBAIController_SetUsableActorUseStart_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorUseEnd
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorUseEnd(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorUseEnd");
        
        AGBAIController_SetUsableActorUseEnd_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewUsableActorType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorType(const BasicTypes::FName& NewUsableActorType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorType");
        
        AGBAIController_SetUsableActorType_Params params {};
        params.NewUsableActorType = NewUsableActorType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAIUsableActorState                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorState(GroundBranch::EGBAIUsableActorState NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorState");
        
        AGBAIController_SetUsableActorState_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorNavStart
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorNavStart(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorNavStart");
        
        AGBAIController_SetUsableActorNavStart_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorNavEnd
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorNavEnd(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorNavEnd");
        
        AGBAIController_SetUsableActorNavEnd_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActorNavDir
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActorNavDir(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActorNavDir");
        
        AGBAIController_SetUsableActorNavDir_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetUsableActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    NewUsableActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetUsableActor(Engine::AActor* NewUsableActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetUsableActor");
        
        AGBAIController_SetUsableActor_Params params {};
        params.NewUsableActor = NewUsableActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetSquad
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAISquad*                          NewSquad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetSquad(GroundBranch::AGBAISquad* NewSquad)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetSquad");
        
        AGBAIController_SetSquad_Params params {};
        params.NewSquad = NewSquad;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetSearchTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetSearchTime(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetSearchTime");
        
        AGBAIController_SetSearchTime_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetIdleSuspicionSightThreshold
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewIdleSuspicionSightThreshold                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetIdleSuspicionSightThreshold(float NewIdleSuspicionSightThreshold)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetIdleSuspicionSightThreshold");
        
        AGBAIController_SetIdleSuspicionSightThreshold_Params params {};
        params.NewIdleSuspicionSightThreshold = NewIdleSuspicionSightThreshold;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetIdleHearingThreshold
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewIdleHearingThreshold                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetIdleHearingThreshold(float NewIdleHearingThreshold)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetIdleHearingThreshold");
        
        AGBAIController_SetIdleHearingThreshold_Params params {};
        params.NewIdleHearingThreshold = NewIdleHearingThreshold;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetIdleAffiliationSightThreshold
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewIdleAffiliationSightThreshold                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetIdleAffiliationSightThreshold(float NewIdleAffiliationSightThreshold)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetIdleAffiliationSightThreshold");
        
        AGBAIController_SetIdleAffiliationSightThreshold_Params params {};
        params.NewIdleAffiliationSightThreshold = NewIdleAffiliationSightThreshold;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyPartSeen
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewEnemyPartSeen                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyPartSeen(const BasicTypes::FName& NewEnemyPartSeen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyPartSeen");
        
        AGBAIController_SetEnemyPartSeen_Params params {};
        params.NewEnemyPartSeen = NewEnemyPartSeen;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyLOS
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyLOS(bool bNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyLOS");
        
        AGBAIController_SetEnemyLOS_Params params {};
        params.bNewValue = bNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyLastStimulusTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyLastStimulusTime(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyLastStimulusTime");
        
        AGBAIController_SetEnemyLastStimulusTime_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyLastSeen
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyLastSeen(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyLastSeen");
        
        AGBAIController_SetEnemyLastSeen_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyLastKnownLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyLastKnownLocation(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyLastKnownLocation");
        
        AGBAIController_SetEnemyLastKnownLocation_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyLastKnownDirection
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyLastKnownDirection(const CoreUObject::FVector& NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyLastKnownDirection");
        
        AGBAIController_SetEnemyLastKnownDirection_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyLastHeard
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyLastHeard(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyLastHeard");
        
        AGBAIController_SetEnemyLastHeard_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemyDistance
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemyDistance(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemyDistance");
        
        AGBAIController_SetEnemyDistance_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetEnemy
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        NewEnemy                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetEnemy(GroundBranch::AGBCharacter* NewEnemy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetEnemy");
        
        AGBAIController_SetEnemy_Params params {};
        params.NewEnemy = NewEnemy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetDesiredViewRotationOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              NewRotation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetDesiredViewRotationOffset(const CoreUObject::FRotator& NewRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetDesiredViewRotationOffset");
        
        AGBAIController_SetDesiredViewRotationOffset_Params params {};
        params.NewRotation = NewRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetDesiredAimRotationOverride
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              NewRotation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              NewRate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetDesiredAimRotationOverride(const CoreUObject::FRotator& NewRotation, float NewRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetDesiredAimRotationOverride");
        
        AGBAIController_SetDesiredAimRotationOverride_Params params {};
        params.NewRotation = NewRotation;
        params.NewRate = NewRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetAlertSuspicionSightThreshold
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewAlertSuspicionSightThreshold                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetAlertSuspicionSightThreshold(float NewAlertSuspicionSightThreshold)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetAlertSuspicionSightThreshold");
        
        AGBAIController_SetAlertSuspicionSightThreshold_Params params {};
        params.NewAlertSuspicionSightThreshold = NewAlertSuspicionSightThreshold;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetAlertHearingThreshold
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewAlertHearingThreshold                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetAlertHearingThreshold(float NewAlertHearingThreshold)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetAlertHearingThreshold");
        
        AGBAIController_SetAlertHearingThreshold_Params params {};
        params.NewAlertHearingThreshold = NewAlertHearingThreshold;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetAlertAffiliationSightThreshold
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewAlertAffiliationSightThreshold                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetAlertAffiliationSightThreshold(float NewAlertAffiliationSightThreshold)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetAlertAffiliationSightThreshold");
        
        AGBAIController_SetAlertAffiliationSightThreshold_Params params {};
        params.NewAlertAffiliationSightThreshold = NewAlertAffiliationSightThreshold;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.SetAIState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAIState                           NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::SetAIState(GroundBranch::EGBAIState NewState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.SetAIState");
        
        AGBAIController_SetAIState_Params params {};
        params.NewState = NewState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.Reload
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::Reload()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.Reload");
        
        AGBAIController_Reload_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.OnTargetPerceptionUpdated
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FAIStimulus                              Stimulus                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::OnTargetPerceptionUpdated(Engine::AActor* Actor, const AIModule::FAIStimulus& Stimulus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.OnTargetPerceptionUpdated");
        
        AGBAIController_OnTargetPerceptionUpdated_Params params {};
        params.Actor = Actor;
        params.Stimulus = Stimulus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.OnSensingNewEnemyEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bHasLineOfSight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::OnSensingNewEnemyEvent(bool bHasLineOfSight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.OnSensingNewEnemyEvent");
        
        AGBAIController_OnSensingNewEnemyEvent_Params params {};
        params.bHasLineOfSight = bHasLineOfSight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.OnSensingEnemyDeathEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::OnSensingEnemyDeathEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.OnSensingEnemyDeathEvent");
        
        AGBAIController_OnSensingEnemyDeathEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.OnNoLongerSensingEnemyEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::OnNoLongerSensingEnemyEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.OnNoLongerSensingEnemyEvent");
        
        AGBAIController_OnNoLongerSensingEnemyEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.OnLoadoutApplied
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::OnLoadoutApplied()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.OnLoadoutApplied");
        
        AGBAIController_OnLoadoutApplied_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.NotifyWalkingOffLedge
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::NotifyWalkingOffLedge()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.NotifyWalkingOffLedge");
        
        AGBAIController_NotifyWalkingOffLedge_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.NotifyTakeHit
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               InstigatedBy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Momentum                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FDamageEvent                               DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::NotifyTakeHit(Engine::AController* InstigatedBy, int32_t Damage, const CoreUObject::FVector& Momentum, const Engine::FDamageEvent& DamageEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.NotifyTakeHit");
        
        AGBAIController_NotifyTakeHit_Params params {};
        params.InstigatedBy = InstigatedBy;
        params.Damage = Damage;
        params.Momentum = Momentum;
        params.DamageEvent = DamageEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.NotifyBump
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    SelfActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::NotifyBump(Engine::AActor* SelfActor, Engine::AActor* OtherActor, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.NotifyBump");
        
        AGBAIController_NotifyBump_Params params {};
        params.SelfActor = SelfActor;
        params.OtherActor = OtherActor;
        params.NormalImpulse = NormalImpulse;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.NeedsReload
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::NeedsReload()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.NeedsReload");
        
        AGBAIController_NeedsReload_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.IsFrozen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::IsFrozen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.IsFrozen");
        
        AGBAIController_IsFrozen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.IsAlive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::IsAlive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.IsAlive");
        
        AGBAIController_IsAlive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetViewRotationOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBAIController::GetViewRotationOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetViewRotationOffset");
        
        AGBAIController_GetViewRotationOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetViewRotation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBAIController::GetViewRotation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetViewRotation");
        
        AGBAIController_GetViewRotation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorUseWaitLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetUsableActorUseWaitLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorUseWaitLocation");
        
        AGBAIController_GetUsableActorUseWaitLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorUseStart
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetUsableActorUseStart()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorUseStart");
        
        AGBAIController_GetUsableActorUseStart_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorUseEnd
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetUsableActorUseEnd()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorUseEnd");
        
        AGBAIController_GetUsableActorUseEnd_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBAIController::GetUsableActorType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorType");
        
        AGBAIController_GetUsableActorType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAIUsableActorState                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBAIUsableActorState AGBAIController::GetUsableActorState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorState");
        
        AGBAIController_GetUsableActorState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorNavStart
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetUsableActorNavStart()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorNavStart");
        
        AGBAIController_GetUsableActorNavStart_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorNavEnd
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetUsableActorNavEnd()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorNavEnd");
        
        AGBAIController_GetUsableActorNavEnd_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActorNavDir
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetUsableActorNavDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActorNavDir");
        
        AGBAIController_GetUsableActorNavDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetUsableActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AGBAIController::GetUsableActor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetUsableActor");
        
        AGBAIController_GetUsableActor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetSquad
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAISquad*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAISquad* AGBAIController::GetSquad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetSquad");
        
        AGBAIController_GetSquad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetSearchTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetSearchTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetSearchTime");
        
        AGBAIController_GetSearchTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetReactionTimeRandom
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetReactionTimeRandom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetReactionTimeRandom");
        
        AGBAIController_GetReactionTimeRandom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetReactionTimeBase
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetReactionTimeBase()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetReactionTimeBase");
        
        AGBAIController_GetReactionTimeBase_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetPathCorridorPoints
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> AGBAIController::GetPathCorridorPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetPathCorridorPoints");
        
        AGBAIController_GetPathCorridorPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetOnTarget
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::GetOnTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetOnTarget");
        
        AGBAIController_GetOnTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetNextPathLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetNextPathLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetNextPathLocation");
        
        AGBAIController_GetNextPathLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetNextPathCorridorPoint
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetNextPathCorridorPoint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetNextPathCorridorPoint");
        
        AGBAIController_GetNextPathCorridorPoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetNavLinkPoints
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            CorridorIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinkStart                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinkEnd                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::GetNavLinkPoints(int32_t CorridorIndex, CoreUObject::FVector* LinkStart, CoreUObject::FVector* LinkEnd)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetNavLinkPoints");
        
        AGBAIController_GetNavLinkPoints_Params params {};
        params.CorridorIndex = CorridorIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LinkStart != nullptr)
            *LinkStart = params.LinkStart;
        if (LinkEnd != nullptr)
            *LinkEnd = params.LinkEnd;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetMinFullAutoBurst
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBAIController::GetMinFullAutoBurst()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetMinFullAutoBurst");
        
        AGBAIController_GetMinFullAutoBurst_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetMinDelayBetweenBursts
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetMinDelayBetweenBursts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetMinDelayBetweenBursts");
        
        AGBAIController_GetMinDelayBetweenBursts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetMaxSemiAutoBurst
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBAIController::GetMaxSemiAutoBurst()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetMaxSemiAutoBurst");
        
        AGBAIController_GetMaxSemiAutoBurst_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetMaxFullAutoBurst
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBAIController::GetMaxFullAutoBurst()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetMaxFullAutoBurst");
        
        AGBAIController_GetMaxFullAutoBurst_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetMaxDelayBetweenBursts
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetMaxDelayBetweenBursts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetMaxDelayBetweenBursts");
        
        AGBAIController_GetMaxDelayBetweenBursts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetLastBark
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FAIBark                              ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FAIBark AGBAIController::GetLastBark()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetLastBark");
        
        AGBAIController_GetLastBark_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetGBCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBAIController::GetGBCharacter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetGBCharacter");
        
        AGBAIController_GetGBCharacter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyPartSeen
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBAIController::GetEnemyPartSeen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyPartSeen");
        
        AGBAIController_GetEnemyPartSeen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyLOS
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::GetEnemyLOS()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyLOS");
        
        AGBAIController_GetEnemyLOS_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyLastStimulusTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetEnemyLastStimulusTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyLastStimulusTime");
        
        AGBAIController_GetEnemyLastStimulusTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyLastSeen
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetEnemyLastSeen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyLastSeen");
        
        AGBAIController_GetEnemyLastSeen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyLastKnownLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetEnemyLastKnownLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyLastKnownLocation");
        
        AGBAIController_GetEnemyLastKnownLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyLastKnownDirection
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAIController::GetEnemyLastKnownDirection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyLastKnownDirection");
        
        AGBAIController_GetEnemyLastKnownDirection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyLastHeard
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetEnemyLastHeard()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyLastHeard");
        
        AGBAIController_GetEnemyLastHeard_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemyDistance
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::GetEnemyDistance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemyDistance");
        
        AGBAIController_GetEnemyDistance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetEnemy
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBAIController::GetEnemy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetEnemy");
        
        AGBAIController_GetEnemy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetCurrentPathCorridorIndex
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            CorridorIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::GetCurrentPathCorridorIndex(int32_t* CorridorIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetCurrentPathCorridorIndex");
        
        AGBAIController_GetCurrentPathCorridorIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (CorridorIndex != nullptr)
            *CorridorIndex = params.CorridorIndex;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetCanSuppressEnemy
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAIController::GetCanSuppressEnemy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetCanSuppressEnemy");
        
        AGBAIController_GetCanSuppressEnemy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetBehaviorComp
     *         Flags  -> ()
     * Parameters:
     *         AIModule::UBehaviorTreeComponent*                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UBehaviorTreeComponent* AGBAIController::GetBehaviorComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetBehaviorComp");
        
        AGBAIController_GetBehaviorComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.GetAIState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAIState                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBAIState AGBAIController::GetAIState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.GetAIState");
        
        AGBAIController_GetAIState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.FrozenTimeLeft
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIController::FrozenTimeLeft()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.FrozenTimeLeft");
        
        AGBAIController_FrozenTimeLeft_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.Freeze
     *         Flags  -> ()
     * Parameters:
     *         float                                              FreezeTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::Freeze(float FreezeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.Freeze");
        
        AGBAIController_Freeze_Params params {};
        params.FreezeTime = FreezeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.DebugFreeze
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bShouldFreeze                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::DebugFreeze(bool bShouldFreeze)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.DebugFreeze");
        
        AGBAIController_DebugFreeze_Params params {};
        params.bShouldFreeze = bShouldFreeze;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.ClearUsableActor
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::ClearUsableActor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.ClearUsableActor");
        
        AGBAIController_ClearUsableActor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.ClearSquad
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::ClearSquad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.ClearSquad");
        
        AGBAIController_ClearSquad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.ClearDesiredViewRotationOffset
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::ClearDesiredViewRotationOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.ClearDesiredViewRotationOffset");
        
        AGBAIController_ClearDesiredViewRotationOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.ClearDesiredAimRotationOverride
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIController::ClearDesiredAimRotationOverride()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.ClearDesiredAimRotationOverride");
        
        AGBAIController_ClearDesiredAimRotationOverride_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.BulletWarn
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Bullet                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSubSonic                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::BulletWarn(Engine::AActor* Bullet, bool bSubSonic)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.BulletWarn");
        
        AGBAIController_BulletWarn_Params params {};
        params.Bullet = Bullet;
        params.bSubSonic = bSubSonic;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIController.Bark
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Key                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Timeout                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIController::Bark(const BasicTypes::FName& Key, int32_t Priority, float Timeout, bool bIsRadioMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIController.Bark");
        
        AGBAIController_Bark_Params params {};
        params.Key = Key;
        params.Priority = Priority;
        params.Timeout = Timeout;
        params.bIsRadioMessage = bIsRadioMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAICoordinatorSubsystem.TriggerFleeState
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               FleeFromLoc                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAICoordinatorSubsystem::TriggerFleeState(const CoreUObject::FVector& FleeFromLoc)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAICoordinatorSubsystem.TriggerFleeState");
        
        UGBAICoordinatorSubsystem_TriggerFleeState_Params params {};
        params.FleeFromLoc = FleeFromLoc;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAICoordinatorSubsystem.RemoveTargetingData
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    TargetingAI                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAICoordinatorSubsystem::RemoveTargetingData(GroundBranch::AGBKytController* TargetingAI)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAICoordinatorSubsystem.RemoveTargetingData");
        
        UGBAICoordinatorSubsystem_RemoveTargetingData_Params params {};
        params.TargetingAI = TargetingAI;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAICoordinatorSubsystem.GetCountForTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBAICoordinatorSubsystem::GetCountForTarget(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAICoordinatorSubsystem.GetCountForTarget");
        
        UGBAICoordinatorSubsystem_GetCountForTarget_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAICoordinatorSubsystem.DisableFleeState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAICoordinatorSubsystem::DisableFleeState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAICoordinatorSubsystem.DisableFleeState");
        
        UGBAICoordinatorSubsystem_DisableFleeState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAICoordinatorSubsystem.AddTargetingData
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKytController*                    TargetingAI                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAICoordinatorSubsystem::AddTargetingData(Engine::AActor* Target, GroundBranch::AGBKytController* TargetingAI)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAICoordinatorSubsystem.AddTargetingData");
        
        UGBAICoordinatorSubsystem_AddTargetingData_Params params {};
        params.Target = Target;
        params.TargetingAI = TargetingAI;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> DelegateFunction /Script/GroundBranch.GBAISpawnManager.OnAIControllerChange__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISpawnManager::OnAIControllerChange__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GroundBranch.GBAISpawnManager.OnAIControllerChange__DelegateSignature");
        
        AGBAISpawnManager_OnAIControllerChange__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnManager.KillAI
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnManager::KillAI(GroundBranch::AGBKytController* AIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnManager.KillAI");
        
        AGBAISpawnManager_KillAI_Params params {};
        params.AIController = AIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnManager.GetGenericAIControllers
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               ControllerClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AController*>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::AController*> AGBAISpawnManager::GetGenericAIControllers(Engine::AController* ControllerClass, const BasicTypes::FName& Tag, uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnManager.GetGenericAIControllers");
        
        AGBAISpawnManager_GetGenericAIControllers_Params params {};
        params.ControllerClass = ControllerClass;
        params.Tag = Tag;
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnManager.GetAIControllers
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    ControllerClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            SquadId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBKytController*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBKytController*> AGBAISpawnManager::GetAIControllers(GroundBranch::AGBKytController* ControllerClass, const BasicTypes::FName& Tag, uint8_t TeamId, uint8_t SquadId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnManager.GetAIControllers");
        
        AGBAISpawnManager_GetAIControllers_Params params {};
        params.ControllerClass = ControllerClass;
        params.Tag = Tag;
        params.TeamId = TeamId;
        params.SquadId = SquadId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnManager.CreateOverDurationTimer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISpawnManager::CreateOverDurationTimer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnManager.CreateOverDurationTimer");
        
        AGBAISpawnManager_CreateOverDurationTimer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnManager.CreateAIOverDuration
     *         Flags  -> ()
     * Parameters:
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBAISpawnPoint*> OrderedSpawnPoints                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnManager::CreateAIOverDuration(float Duration, int32_t Count, BasicTypes::TArray<GroundBranch::AGBAISpawnPoint*> OrderedSpawnPoints, const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnManager.CreateAIOverDuration");
        
        AGBAISpawnManager_CreateAIOverDuration_Params params {};
        params.Duration = Duration;
        params.Count = Count;
        params.OrderedSpawnPoints = OrderedSpawnPoints;
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnManager.CleanUpAI
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  AIControllerTag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnManager::CleanUpAI(const BasicTypes::FName& AIControllerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnManager.CleanUpAI");
        
        AGBAISpawnManager_CleanUpAI_Params params {};
        params.AIControllerTag = AIControllerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.UpdateShapeColour
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::UpdateShapeColour()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.UpdateShapeColour");
        
        AGBAISpawnPoint_UpdateShapeColour_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.SetSquadOrders
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewSquadOrders                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::SetSquadOrders(const BasicTypes::FName& NewSquadOrders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.SetSquadOrders");
        
        AGBAISpawnPoint_SetSquadOrders_Params params {};
        params.NewSquadOrders = NewSquadOrders;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.SetSquadId
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewSquadId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::SetSquadId(int32_t NewSquadId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.SetSquadId");
        
        AGBAISpawnPoint_SetSquadId_Params params {};
        params.NewSquadId = NewSquadId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.SetLoadoutFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewLoadoutFileName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::SetLoadoutFileName(const BasicTypes::FString& NewLoadoutFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.SetLoadoutFileName");
        
        AGBAISpawnPoint_SetLoadoutFileName_Params params {};
        params.NewLoadoutFileName = NewLoadoutFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.OnInitialTimeOfDayChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBSky*                              SkyActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::OnInitialTimeOfDayChanged(GroundBranch::AGBSky* SkyActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.OnInitialTimeOfDayChanged");
        
        AGBAISpawnPoint_OnInitialTimeOfDayChanged_Params params {};
        params.SkyActor = SkyActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.OnAIInitializedHandler
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    NewAIController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::OnAIInitializedHandler(GroundBranch::AGBKytController* NewAIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.OnAIInitializedHandler");
        
        AGBAISpawnPoint_OnAIInitializedHandler_Params params {};
        params.NewAIController = NewAIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetSquadOrders
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBAISpawnPoint::GetSquadOrders()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetSquadOrders");
        
        AGBAISpawnPoint_GetSquadOrders_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetSquadId
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBAISpawnPoint::GetSquadId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetSquadId");
        
        AGBAISpawnPoint_GetSquadId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* AGBAISpawnPoint::GetLoadoutInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetLoadoutInfo");
        
        AGBAISpawnPoint_GetLoadoutInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetLoadoutFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBAISpawnPoint::GetLoadoutFileName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetLoadoutFileName");
        
        AGBAISpawnPoint_GetLoadoutFileName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetIsNightSpawn
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAISpawnPoint::GetIsNightSpawn()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetIsNightSpawn");
        
        AGBAISpawnPoint_GetIsNightSpawn_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetIsDaySpawn
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAISpawnPoint::GetIsDaySpawn()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetIsDaySpawn");
        
        AGBAISpawnPoint_GetIsDaySpawn_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetIsActiveAtCurrentTimeOfDay
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAISpawnPoint::GetIsActiveAtCurrentTimeOfDay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetIsActiveAtCurrentTimeOfDay");
        
        AGBAISpawnPoint_GetIsActiveAtCurrentTimeOfDay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.GetAIControllerClass
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftClassPtr<GroundBranch::AGBKytController> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftClassPtr<GroundBranch::AGBKytController> AGBAISpawnPoint::GetAIControllerClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.GetAIControllerClass");
        
        AGBAISpawnPoint_GetAIControllerClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.EnsureCharacterClassesLoaded
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::EnsureCharacterClassesLoaded()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.EnsureCharacterClassesLoaded");
        
        AGBAISpawnPoint_EnsureCharacterClassesLoaded_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.CreateCharacter
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftClassPtr<GroundBranch::AGBCharacter> DesiredCharacterClass                                      (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBAISpawnPoint::CreateCharacter(BasicTypes::TSoftClassPtr<GroundBranch::AGBCharacter> DesiredCharacterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.CreateCharacter");
        
        AGBAISpawnPoint_CreateCharacter_Params params {};
        params.DesiredCharacterClass = DesiredCharacterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.CreateAI
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::CreateAI(const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.CreateAI");
        
        AGBAISpawnPoint_CreateAI_Params params {};
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISpawnPoint.ApplyAITagsToCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        NewCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISpawnPoint::ApplyAITagsToCharacter(GroundBranch::AGBCharacter* NewCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISpawnPoint.ApplyAITagsToCharacter");
        
        AGBAISpawnPoint_ApplyAITagsToCharacter_Params params {};
        params.NewCharacter = NewCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.UpdateSquadObjective
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISquad::UpdateSquadObjective()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.UpdateSquadObjective");
        
        AGBAISquad_UpdateSquadObjective_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetSquadOrdersTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    NewTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::SetSquadOrdersTarget(Engine::AActor* NewTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetSquadOrdersTarget");
        
        AGBAISquad_SetSquadOrdersTarget_Params params {};
        params.NewTarget = NewTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetSquadOrders
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewOrders                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::SetSquadOrders(const BasicTypes::FName& NewOrders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetSquadOrders");
        
        AGBAISquad_SetSquadOrders_Params params {};
        params.NewOrders = NewOrders;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetSquadLeader
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::SetSquadLeader(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetSquadLeader");
        
        AGBAISquad_SetSquadLeader_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetSquadId
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewSquadId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::SetSquadId(uint8_t NewSquadId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetSquadId");
        
        AGBAISquad_SetSquadId_Params params {};
        params.NewSquadId = NewSquadId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetPatrolRoute
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAIPatrolRoute*                    NewPatrolRoute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::SetPatrolRoute(GroundBranch::AGBAIPatrolRoute* NewPatrolRoute)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetPatrolRoute");
        
        AGBAISquad_SetPatrolRoute_Params params {};
        params.NewPatrolRoute = NewPatrolRoute;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetGuardPointVisitedBy
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAIGuardPoint*                     GuardPoint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKytController*                    AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::SetGuardPointVisitedBy(GroundBranch::AGBAIGuardPoint* GuardPoint, GroundBranch::AGBKytController* AIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetGuardPointVisitedBy");
        
        AGBAISquad_SetGuardPointVisitedBy_Params params {};
        params.GuardPoint = GuardPoint;
        params.AIController = AIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.SetAIStateBySquadOrders
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAISquad::SetAIStateBySquadOrders(GroundBranch::AGBKytController* AIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.SetAIStateBySquadOrders");
        
        AGBAISquad_SetAIStateBySquadOrders_Params params {};
        params.AIController = AIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.RemoveSquadMember
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::RemoveSquadMember(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.RemoveSquadMember");
        
        AGBAISquad_RemoveSquadMember_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.IsSquadMember
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAISquad::IsSquadMember(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.IsSquadMember");
        
        AGBAISquad_IsSquadMember_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.InternalUpdateSquadSeparationWeights
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISquad::InternalUpdateSquadSeparationWeights()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.InternalUpdateSquadSeparationWeights");
        
        AGBAISquad_InternalUpdateSquadSeparationWeights_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSquadSize
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBAISquad::GetSquadSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSquadSize");
        
        AGBAISquad_GetSquadSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSquadOrdersTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AGBAISquad::GetSquadOrdersTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSquadOrdersTarget");
        
        AGBAISquad_GetSquadOrdersTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSquadOrders
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBAISquad::GetSquadOrders()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSquadOrders");
        
        AGBAISquad_GetSquadOrders_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSquadMembers
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<Engine::AController*>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::AController*> AGBAISquad::GetSquadMembers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSquadMembers");
        
        AGBAISquad_GetSquadMembers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSquadLeader
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AController* AGBAISquad::GetSquadLeader()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSquadLeader");
        
        AGBAISquad_GetSquadLeader_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSquadId
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBAISquad::GetSquadId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSquadId");
        
        AGBAISquad_GetSquadId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetSearchedLocations
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> AGBAISquad::GetSearchedLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetSearchedLocations");
        
        AGBAISquad_GetSearchedLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetPatrolRoute
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAIPatrolRoute*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAIPatrolRoute* AGBAISquad::GetPatrolRoute()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetPatrolRoute");
        
        AGBAISquad_GetPatrolRoute_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetNextPatrolPosition
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBAISquad::GetNextPatrolPosition(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetNextPatrolPosition");
        
        AGBAISquad_GetNextPatrolPosition_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.GetNextGuardPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBAIGuardPoint*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAIGuardPoint* AGBAISquad::GetNextGuardPoint(GroundBranch::AGBKytController* AIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.GetNextGuardPoint");
        
        AGBAISquad_GetNextGuardPoint_Params params {};
        params.AIController = AIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.FindNearestPatrolRoute
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBAIPatrolRoute*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAIPatrolRoute* AGBAISquad::FindNearestPatrolRoute(const CoreUObject::FVector& Location)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.FindNearestPatrolRoute");
        
        AGBAISquad_FindNearestPatrolRoute_Params params {};
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.EmptySquad
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISquad::EmptySquad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.EmptySquad");
        
        AGBAISquad_EmptySquad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.ClearSearchedLocations
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAISquad::ClearSearchedLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.ClearSearchedLocations");
        
        AGBAISquad_ClearSearchedLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.AddSquadMember
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::AddSquadMember(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.AddSquadMember");
        
        AGBAISquad_AddSquadMember_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISquad.AddSearchedLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAISquad::AddSearchedLocation(const CoreUObject::FVector& NewLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISquad.AddSearchedLocation");
        
        AGBAISquad_AddSearchedLocation_Params params {};
        params.NewLocation = NewLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ValidateDecodedItem
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                OutFailureReason                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::ValidateDecodedItem(BasicTypes::FString* OutFailureReason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ValidateDecodedItem");
        
        AGBInvItem_ValidateDecodedItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFailureReason != nullptr)
            *OutFailureReason = params.OutFailureReason;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.UsesGameplayAbilityByClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBGameplayAbility*                  GameplayAbilityClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::UsesGameplayAbilityByClass(GroundBranch::UGBGameplayAbility* GameplayAbilityClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.UsesGameplayAbilityByClass");
        
        AGBInvItem_UsesGameplayAbilityByClass_Params params {};
        params.GameplayAbilityClass = GameplayAbilityClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.UpdateWetness
     *         Flags  -> ()
     * Parameters:
     *         float                                              InRadius                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::UpdateWetness(float InRadius, const CoreUObject::FVector& InLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.UpdateWetness");
        
        AGBInvItem_UpdateWetness_Params params {};
        params.InRadius = InRadius;
        params.InLocation = InLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.UpdatePatches
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::UpdatePatches()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.UpdatePatches");
        
        AGBInvItem_UpdatePatches_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.UpdateAudioValues
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::UpdateAudioValues()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.UpdateAudioValues");
        
        AGBInvItem_UpdateAudioValues_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.TryActivateItemAbilityByTagWithPayload
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::FGameplayEventData              Payload                                                    (Parm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::TryActivateItemAbilityByTagWithPayload(const GameplayTags::FGameplayTag& GameplayTag, const GameplayAbilities::FGameplayEventData& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.TryActivateItemAbilityByTagWithPayload");
        
        AGBInvItem_TryActivateItemAbilityByTagWithPayload_Params params {};
        params.GameplayTag = GameplayTag;
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.TryActivateItemAbilityByTag
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::TryActivateItemAbilityByTag(const GameplayTags::FGameplayTag& GameplayTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.TryActivateItemAbilityByTag");
        
        AGBInvItem_TryActivateItemAbilityByTag_Params params {};
        params.GameplayTag = GameplayTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.SyncMontageWithOtherItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          OtherItem                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::SyncMontageWithOtherItem(GroundBranch::AGBInvItem* OtherItem, const BasicTypes::FName& MontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.SyncMontageWithOtherItem");
        
        AGBInvItem_SyncMontageWithOtherItem_Params params {};
        params.OtherItem = OtherItem;
        params.MontageName = MontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.SpawnInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItemClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    InvItemOwner                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::SpawnInvItem(GroundBranch::AGBInvItem* InvItemClass, Engine::AActor* InvItemOwner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.SpawnInvItem");
        
        AGBInvItem_SpawnInvItem_Params params {};
        params.InvItemClass = InvItemClass;
        params.InvItemOwner = InvItemOwner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.SetupSightComponents
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::SetupSightComponents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.SetupSightComponents");
        
        AGBInvItem_SetupSightComponents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.SetInvItemSkinId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewInvItemSkinId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::SetInvItemSkinId(const CoreUObject::FPrimaryAssetId& NewInvItemSkinId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.SetInvItemSkinId");
        
        AGBInvItem_SetInvItemSkinId_Params params {};
        params.NewInvItemSkinId = NewInvItemSkinId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.RemoveItemCameraModifier
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBItemCameraModifier*               ItemCameraModifierToRemove                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::RemoveItemCameraModifier(GroundBranch::UGBItemCameraModifier* ItemCameraModifierToRemove)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.RemoveItemCameraModifier");
        
        AGBInvItem_RemoveItemCameraModifier_Params params {};
        params.ItemCameraModifierToRemove = ItemCameraModifierToRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.RemoveFromSkinnedDecalSampler
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::RemoveFromSkinnedDecalSampler(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.RemoveFromSkinnedDecalSampler");
        
        AGBInvItem_RemoveFromSkinnedDecalSampler_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.RemoveFromInventory
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::RemoveFromInventory(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.RemoveFromInventory");
        
        AGBInvItem_RemoveFromInventory_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.RemovedFromItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          OldParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           OldParentComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OldParentSocket                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::RemovedFromItem(GroundBranch::AGBInvItem* OldParentItem, Engine::USceneComponent* OldParentComp, const BasicTypes::FName& OldParentSocket)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.RemovedFromItem");
        
        AGBInvItem_RemovedFromItem_Params params {};
        params.OldParentItem = OldParentItem;
        params.OldParentComp = OldParentComp;
        params.OldParentSocket = OldParentSocket;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.RemovedFromCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        OldParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OldSocketName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::RemovedFromCharacter(GroundBranch::AGBCharacter* OldParentCharacter, const BasicTypes::FName& OldSocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.RemovedFromCharacter");
        
        AGBInvItem_RemovedFromCharacter_Params params {};
        params.OldParentCharacter = OldParentCharacter;
        params.OldSocketName = OldSocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.Refill
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::Refill()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.Refill");
        
        AGBInvItem_Refill_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.PreEncodeCheck
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::PreEncodeCheck()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.PreEncodeCheck");
        
        AGBInvItem_PreEncodeCheck_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.PostDecode
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::PostDecode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.PostDecode");
        
        AGBInvItem_PostDecode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.PositionTransitionBegins
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::PositionTransitionBegins()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.PositionTransitionBegins");
        
        AGBInvItem_PositionTransitionBegins_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.PositionAlphaMet
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::PositionAlphaMet()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.PositionAlphaMet");
        
        AGBInvItem_PositionAlphaMet_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.PlaceAt
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              InRotation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBDroppedInvItem*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBDroppedInvItem* AGBInvItem::PlaceAt(const CoreUObject::FVector& InLocation, const CoreUObject::FRotator& InRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.PlaceAt");
        
        AGBInvItem_PlaceAt_Params params {};
        params.InLocation = InLocation;
        params.InRotation = InRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OtherTagsSatisfied
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InCosmeticTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::OtherTagsSatisfied(const GameplayTags::FGameplayTagContainer& InCosmeticTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OtherTagsSatisfied");
        
        AGBInvItem_OtherTagsSatisfied_Params params {};
        params.InCosmeticTags = InCosmeticTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnRep_InvItemSkinId
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnRep_InvItemSkinId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnRep_InvItemSkinId");
        
        AGBInvItem_OnRep_InvItemSkinId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnRemovingChild
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          RemovedChild                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnRemovingChild(GroundBranch::AGBInvItem* RemovedChild)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnRemovingChild");
        
        AGBInvItem_OnRemovingChild_Params params {};
        params.RemovedChild = RemovedChild;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnRemovedFromItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          OldParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           OldParentComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OldParentSocket                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnRemovedFromItem(GroundBranch::AGBInvItem* OldParentItem, Engine::USceneComponent* OldParentComp, const BasicTypes::FName& OldParentSocket)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnRemovedFromItem");
        
        AGBInvItem_OnRemovedFromItem_Params params {};
        params.OldParentItem = OldParentItem;
        params.OldParentComp = OldParentComp;
        params.OldParentSocket = OldParentSocket;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnRemovedFromInventoryEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnRemovedFromInventoryEvent(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnRemovedFromInventoryEvent");
        
        AGBInvItem_OnRemovedFromInventoryEvent_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnRemovedFromCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        OldParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OldSocketName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnRemovedFromCharacter(GroundBranch::AGBCharacter* OldParentCharacter, const BasicTypes::FName& OldSocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnRemovedFromCharacter");
        
        AGBInvItem_OnRemovedFromCharacter_Params params {};
        params.OldParentCharacter = OldParentCharacter;
        params.OldSocketName = OldSocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnForceLoadGameplayAbilitiesComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnForceLoadGameplayAbilitiesComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnForceLoadGameplayAbilitiesComplete");
        
        AGBInvItem_OnForceLoadGameplayAbilitiesComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnCosmeticTagsUpdated
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InCosmeticTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnCosmeticTagsUpdated(const GameplayTags::FGameplayTagContainer& InCosmeticTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnCosmeticTagsUpdated");
        
        AGBInvItem_OnCosmeticTagsUpdated_Params params {};
        params.InCosmeticTags = InCosmeticTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnClientsideProxyCreatedEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          Proxy                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnClientsideProxyCreatedEvent(GroundBranch::AGBInvItem* Proxy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnClientsideProxyCreatedEvent");
        
        AGBInvItem_OnClientsideProxyCreatedEvent_Params params {};
        params.Proxy = Proxy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnBeingUnequipped
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnBeingUnequipped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnBeingUnequipped");
        
        AGBInvItem_OnBeingUnequipped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnBeingEquipped
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnBeingEquipped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnBeingEquipped");
        
        AGBInvItem_OnBeingEquipped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnBeingDropped
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnBeingDropped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnBeingDropped");
        
        AGBInvItem_OnBeingDropped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnAddingChild
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          AddedChild                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnAddingChild(GroundBranch::AGBInvItem* AddedChild)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnAddingChild");
        
        AGBInvItem_OnAddingChild_Params params {};
        params.AddedChild = AddedChild;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnAddedToItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          NewParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnAddedToItem(GroundBranch::AGBInvItem* NewParentItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnAddedToItem");
        
        AGBInvItem_OnAddedToItem_Params params {};
        params.NewParentItem = NewParentItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnAddedToInventoryEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnAddedToInventoryEvent(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnAddedToInventoryEvent");
        
        AGBInvItem_OnAddedToInventoryEvent_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.OnAddedToCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        NewParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::OnAddedToCharacter(GroundBranch::AGBCharacter* NewParentCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.OnAddedToCharacter");
        
        AGBInvItem_OnAddedToCharacter_Params params {};
        params.NewParentCharacter = NewParentCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.MarkAsClientsideProxy
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::MarkAsClientsideProxy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.MarkAsClientsideProxy");
        
        AGBInvItem_MarkAsClientsideProxy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.IsEquipped
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::IsEquipped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.IsEquipped");
        
        AGBInvItem_IsEquipped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.IsClientsideProxy
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::IsClientsideProxy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.IsClientsideProxy");
        
        AGBInvItem_IsClientsideProxy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetWeaponsPositionTransitionTime
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBWeaponPosition                    FromPosition                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBWeaponPosition                    ToPosition                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBInvItem::GetWeaponsPositionTransitionTime(GroundBranch::EGBWeaponPosition FromPosition, GroundBranch::EGBWeaponPosition ToPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetWeaponsPositionTransitionTime");
        
        AGBInvItem_GetWeaponsPositionTransitionTime_Params params {};
        params.FromPosition = FromPosition;
        params.ToPosition = ToPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetUnequipMontageSection
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBChangeEquippedInfo                ChangeEquippedInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBUnequipInfo                       LeftUnequipInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBUnequipInfo                       RightUnequipInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBInvItem::GetUnequipMontageSection(GroundBranch::EHand TargetHand, const GroundBranch::FGBChangeEquippedInfo& ChangeEquippedInfo, const GroundBranch::FGBUnequipInfo& LeftUnequipInfo, const GroundBranch::FGBUnequipInfo& RightUnequipInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetUnequipMontageSection");
        
        AGBInvItem_GetUnequipMontageSection_Params params {};
        params.TargetHand = TargetHand;
        params.ChangeEquippedInfo = ChangeEquippedInfo;
        params.LeftUnequipInfo = LeftUnequipInfo;
        params.RightUnequipInfo = RightUnequipInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetUnequipInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBUnequipInfo                       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBUnequipInfo AGBInvItem::GetUnequipInfo(GroundBranch::EHand TargetHand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetUnequipInfo");
        
        AGBInvItem_GetUnequipInfo_Params params {};
        params.TargetHand = TargetHand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetStatKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBInvItem::GetStatKey()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetStatKey");
        
        AGBInvItem_GetStatKey_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetStaticMeshPatchMaterial
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<Engine::UMaterialInterface> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<Engine::UMaterialInterface> AGBInvItem::GetStaticMeshPatchMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetStaticMeshPatchMaterial");
        
        AGBInvItem_GetStaticMeshPatchMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetStaminaMultipliers
     *         Flags  -> ()
     * Parameters:
     *         float                                              RecoveryMultiplier                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ExhaustionMultiplier                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::GetStaminaMultipliers(float* RecoveryMultiplier, float* ExhaustionMultiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetStaminaMultipliers");
        
        AGBInvItem_GetStaminaMultipliers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RecoveryMultiplier != nullptr)
            *RecoveryMultiplier = params.RecoveryMultiplier;
        if (ExhaustionMultiplier != nullptr)
            *ExhaustionMultiplier = params.ExhaustionMultiplier;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetSound
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SoundName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkAudioEvent* AGBInvItem::GetSound(const BasicTypes::FName& SoundName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetSound");
        
        AGBInvItem_GetSound_Params params {};
        params.SoundName = SoundName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetPositionAlphaTargets
     *         Flags  -> ()
     * Parameters:
     *         float                                              TargetEngagedAlpha                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TargetOffTargetAlpha                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutTargetEngagedAlpha                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutTargetOffTargetAlpha                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutOffTargetInterpSpeed                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::GetPositionAlphaTargets(float TargetEngagedAlpha, float TargetOffTargetAlpha, float* OutTargetEngagedAlpha, float* OutTargetOffTargetAlpha, float* OutOffTargetInterpSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetPositionAlphaTargets");
        
        AGBInvItem_GetPositionAlphaTargets_Params params {};
        params.TargetEngagedAlpha = TargetEngagedAlpha;
        params.TargetOffTargetAlpha = TargetOffTargetAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTargetEngagedAlpha != nullptr)
            *OutTargetEngagedAlpha = params.OutTargetEngagedAlpha;
        if (OutTargetOffTargetAlpha != nullptr)
            *OutTargetOffTargetAlpha = params.OutTargetOffTargetAlpha;
        if (OutOffTargetInterpSpeed != nullptr)
            *OutOffTargetInterpSpeed = params.OutOffTargetInterpSpeed;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetPatchSocketNameMap
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneComponent*                           SceneComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TMap<BasicTypes::FName, GameplayTags::FGameplayTag> OutSocketToPatchNameTagMap                                 (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::GetPatchSocketNameMap(Engine::USceneComponent* SceneComp, BasicTypes::TMap<BasicTypes::FName, GameplayTags::FGameplayTag>* OutSocketToPatchNameTagMap)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetPatchSocketNameMap");
        
        AGBInvItem_GetPatchSocketNameMap_Params params {};
        params.SceneComp = SceneComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSocketToPatchNameTagMap != nullptr)
            *OutSocketToPatchNameTagMap = params.OutSocketToPatchNameTagMap;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetParentItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::GetParentItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetParentItem");
        
        AGBInvItem_GetParentItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetMontage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* AGBInvItem::GetMontage(const BasicTypes::FName& MontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetMontage");
        
        AGBInvItem_GetMontage_Params params {};
        params.MontageName = MontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetItemWeight
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBInvItem::GetItemWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetItemWeight");
        
        AGBInvItem_GetItemWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetInvItemTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer AGBInvItem::GetInvItemTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetInvItemTags");
        
        AGBInvItem_GetInvItemTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetInvItemSkinId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId AGBInvItem::GetInvItemSkinId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetInvItemSkinId");
        
        AGBInvItem_GetInvItemSkinId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetInventorySlotWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBInvItem::GetInventorySlotWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetInventorySlotWidget");
        
        AGBInvItem_GetInventorySlotWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetInventorySlot
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBInvItem::GetInventorySlot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetInventorySlot");
        
        AGBInvItem_GetInventorySlot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetIcon
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<Engine::UTexture2D>     ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<Engine::UTexture2D> AGBInvItem::GetIcon()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetIcon");
        
        AGBInvItem_GetIcon_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetHiddenComponents
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<Engine::UPrimitiveComponent*>   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::UPrimitiveComponent*> AGBInvItem::GetHiddenComponents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetHiddenComponents");
        
        AGBInvItem_GetHiddenComponents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetHandEnum
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EHand AGBInvItem::GetHandEnum()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetHandEnum");
        
        AGBInvItem_GetHandEnum_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetGBInstigator
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBInvItem::GetGBInstigator()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetGBInstigator");
        
        AGBInvItem_GetGBInstigator_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetGameplayAbilitySpecHandles
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GameplayAbilities::FGameplayAbilitySpecHandle> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GameplayAbilities::FGameplayAbilitySpecHandle> AGBInvItem::GetGameplayAbilitySpecHandles()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetGameplayAbilitySpecHandles");
        
        AGBInvItem_GetGameplayAbilitySpecHandles_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetFirstChildInvItemWithTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                WithTags                                                   (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllChildren                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::GetFirstChildInvItemWithTags(const GameplayTags::FGameplayTagContainer& WithTags, bool bExactMatch, bool bAllChildren)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetFirstChildInvItemWithTags");
        
        AGBInvItem_GetFirstChildInvItemWithTags_Params params {};
        params.WithTags = WithTags;
        params.bExactMatch = bExactMatch;
        params.bAllChildren = bAllChildren;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetFirstChildInvItemOfClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItemClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllChildren                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::GetFirstChildInvItemOfClass(GroundBranch::AGBInvItem* InvItemClass, bool bAllChildren)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetFirstChildInvItemOfClass");
        
        AGBInvItem_GetFirstChildInvItemOfClass_Params params {};
        params.InvItemClass = InvItemClass;
        params.bAllChildren = bAllChildren;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetFirstChildInvItemAttachedTo
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneComponent*                           Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::GetFirstChildInvItemAttachedTo(Engine::USceneComponent* Component, const BasicTypes::FName& SocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetFirstChildInvItemAttachedTo");
        
        AGBInvItem_GetFirstChildInvItemAttachedTo_Params params {};
        params.Component = Component;
        params.SocketName = SocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetEquipMontageSection
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBChangeEquippedInfo                ChangeEquippedInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBInvItem::GetEquipMontageSection(GroundBranch::EHand TargetHand, const GroundBranch::FGBChangeEquippedInfo& ChangeEquippedInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetEquipMontageSection");
        
        AGBInvItem_GetEquipMontageSection_Params params {};
        params.TargetHand = TargetHand;
        params.ChangeEquippedInfo = ChangeEquippedInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetEffect
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  EffectName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Niagara::UNiagaraSystem*                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Niagara::UNiagaraSystem* AGBInvItem::GetEffect(const BasicTypes::FName& EffectName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetEffect");
        
        AGBInvItem_GetEffect_Params params {};
        params.EffectName = EffectName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetDragDropOperation
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                DragOpTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBInvItemDragDropOperation*         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBInvItemDragDropOperation* AGBInvItem::GetDragDropOperation(const GameplayTags::FGameplayTagContainer& DragOpTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetDragDropOperation");
        
        AGBInvItem_GetDragDropOperation_Params params {};
        params.DragOpTags = DragOpTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetDisplayName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText AGBInvItem::GetDisplayName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetDisplayName");
        
        AGBInvItem_GetDisplayName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetCustomisationWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBInvItem::GetCustomisationWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetCustomisationWidget");
        
        AGBInvItem_GetCustomisationWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetCurrentSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBSightComponent* AGBInvItem::GetCurrentSight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetCurrentSight");
        
        AGBInvItem_GetCurrentSight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetCosmeticTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer AGBInvItem::GetCosmeticTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetCosmeticTags");
        
        AGBInvItem_GetCosmeticTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetChildInvItemsWithTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                WithTags                                                   (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllChildren                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBInvItem::GetChildInvItemsWithTags(const GameplayTags::FGameplayTagContainer& WithTags, bool bExactMatch, bool bAllChildren)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetChildInvItemsWithTags");
        
        AGBInvItem_GetChildInvItemsWithTags_Params params {};
        params.WithTags = WithTags;
        params.bExactMatch = bExactMatch;
        params.bAllChildren = bAllChildren;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetChildInvItemsOfClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItemClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllChildren                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBInvItem::GetChildInvItemsOfClass(GroundBranch::AGBInvItem* InvItemClass, bool bAllChildren)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetChildInvItemsOfClass");
        
        AGBInvItem_GetChildInvItemsOfClass_Params params {};
        params.InvItemClass = InvItemClass;
        params.bAllChildren = bAllChildren;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetChildInvItemsAttachedTo
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneComponent*                           Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBInvItem::GetChildInvItemsAttachedTo(Engine::USceneComponent* Component, const BasicTypes::FName& SocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetChildInvItemsAttachedTo");
        
        AGBInvItem_GetChildInvItemsAttachedTo_Params params {};
        params.Component = Component;
        params.SocketName = SocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetChildInvItems
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bAllChildren                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBInvItem::GetChildInvItems(bool bAllChildren)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetChildInvItems");
        
        AGBInvItem_GetChildInvItems_Params params {};
        params.bAllChildren = bAllChildren;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetCharMontage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* AGBInvItem::GetCharMontage(const BasicTypes::FName& MontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetCharMontage");
        
        AGBInvItem_GetCharMontage_Params params {};
        params.MontageName = MontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetBaseItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::GetBaseItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetBaseItem");
        
        AGBInvItem_GetBaseItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.GetAnimLayerClassRef
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimInstance* AGBInvItem::GetAnimLayerClassRef()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.GetAnimLayerClassRef");
        
        AGBInvItem_GetAnimLayerClassRef_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ForceLODZero
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::ForceLODZero()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ForceLODZero");
        
        AGBInvItem_ForceLODZero_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ForceLoadGameplayAbilities
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::ForceLoadGameplayAbilities()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ForceLoadGameplayAbilities");
        
        AGBInvItem_ForceLoadGameplayAbilities_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ForceCreateMIDs
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::ForceCreateMIDs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ForceCreateMIDs");
        
        AGBInvItem_ForceCreateMIDs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.FindParentItems
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBInvItem::FindParentItems(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.FindParentItems");
        
        AGBInvItem_FindParentItems_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.EncodeKit
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         ItemAsJson                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::EncodeKit(VaRest::UVaRestJsonObject* ItemAsJson)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.EncodeKit");
        
        AGBInvItem_EncodeKit_Params params {};
        params.ItemAsJson = ItemAsJson;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.EditItemSetup
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        UICharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::EditItemSetup(GroundBranch::AGBCharacter* UICharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.EditItemSetup");
        
        AGBInvItem_EditItemSetup_Params params {};
        params.UICharacter = UICharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.DoDropFrom
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              InRotation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InAngularVelocity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBDroppedInvItem*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBDroppedInvItem* AGBInvItem::DoDropFrom(const CoreUObject::FVector& InLocation, const CoreUObject::FRotator& InRotation, const CoreUObject::FVector& InVelocity, const CoreUObject::FVector& InAngularVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.DoDropFrom");
        
        AGBInvItem_DoDropFrom_Params params {};
        params.InLocation = InLocation;
        params.InRotation = InRotation;
        params.InVelocity = InVelocity;
        params.InAngularVelocity = InAngularVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.DenyUnequip
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::DenyUnequip()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.DenyUnequip");
        
        AGBInvItem_DenyUnequip_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.DenyDrop
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::DenyDrop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.DenyDrop");
        
        AGBInvItem_DenyDrop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.DecodeKit
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         ItemAsJson                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    DecodedOwner                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          DecodedParentItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::DecodeKit(VaRest::UVaRestJsonObject* ItemAsJson, Engine::AActor* DecodedOwner, GroundBranch::AGBInvItem* DecodedParentItem, const BasicTypes::FName& ProfileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.DecodeKit");
        
        AGBInvItem_DecodeKit_Params params {};
        params.ItemAsJson = ItemAsJson;
        params.DecodedOwner = DecodedOwner;
        params.DecodedParentItem = DecodedParentItem;
        params.ProfileName = ProfileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CreateMIDsEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::CreateMIDsEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CreateMIDsEvent");
        
        AGBInvItem_CreateMIDsEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CreateMIDs
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::CreateMIDs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CreateMIDs");
        
        AGBInvItem_CreateMIDs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CreateClientsideProxy
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBInvItem::CreateClientsideProxy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CreateClientsideProxy");
        
        AGBInvItem_CreateClientsideProxy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ClientRemoveFromInventory
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::ClientRemoveFromInventory(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ClientRemoveFromInventory");
        
        AGBInvItem_ClientRemoveFromInventory_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ClientForceDestroy
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInvItem::ClientForceDestroy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ClientForceDestroy");
        
        AGBInvItem_ClientForceDestroy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ClientAddToInventory
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::ClientAddToInventory(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ClientAddToInventory");
        
        AGBInvItem_ClientAddToInventory_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CharacterDestroyed
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::CharacterDestroyed(Engine::AActor* DestroyedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CharacterDestroyed");
        
        AGBInvItem_CharacterDestroyed_Params params {};
        params.DestroyedActor = DestroyedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ChangeOwnerOnlyRelevancy
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bOnlyOwner                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::ChangeOwnerOnlyRelevancy(bool bOnlyOwner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ChangeOwnerOnlyRelevancy");
        
        AGBInvItem_ChangeOwnerOnlyRelevancy_Params params {};
        params.bOnlyOwner = bOnlyOwner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CanBeAddedAsChild
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          PotentialParent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::CanBeAddedAsChild(GroundBranch::AGBInvItem* PotentialParent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CanBeAddedAsChild");
        
        AGBInvItem_CanBeAddedAsChild_Params params {};
        params.PotentialParent = PotentialParent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CanAddToCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::CanAddToCharacter(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CanAddToCharacter");
        
        AGBInvItem_CanAddToCharacter_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.CanAddChild
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          PotentialChild                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::CanAddChild(GroundBranch::AGBInvItem* PotentialChild)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.CanAddChild");
        
        AGBInvItem_CanAddChild_Params params {};
        params.PotentialChild = PotentialChild;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.BP_DetachItemFrom
     *         Flags  -> ()
     * Parameters:
     *         Engine::EDetachmentRule                            LocationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EDetachmentRule                            RotationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::BP_DetachItemFrom(Engine::EDetachmentRule LocationRule, Engine::EDetachmentRule RotationRule)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.BP_DetachItemFrom");
        
        AGBInvItem_BP_DetachItemFrom_Params params {};
        params.LocationRule = LocationRule;
        params.RotationRule = RotationRule;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.BP_AttachItemTo
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneComponent*                           Parent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAttachmentRule                            LocationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAttachmentRule                            RotationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::BP_AttachItemTo(Engine::USceneComponent* Parent, const BasicTypes::FName& SocketName, Engine::EAttachmentRule LocationRule, Engine::EAttachmentRule RotationRule)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.BP_AttachItemTo");
        
        AGBInvItem_BP_AttachItemTo_Params params {};
        params.Parent = Parent;
        params.SocketName = SocketName;
        params.LocationRule = LocationRule;
        params.RotationRule = RotationRule;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.ApplyPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   GBPlayerSettings                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::ApplyPlayerSettings(GroundBranch::UGBPlayerSettings* GBPlayerSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.ApplyPlayerSettings");
        
        AGBInvItem_ApplyPlayerSettings_Params params {};
        params.GBPlayerSettings = GBPlayerSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.AllowUsageWhileAttached
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInvItem::AllowUsageWhileAttached()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.AllowUsageWhileAttached");
        
        AGBInvItem_AllowUsageWhileAttached_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.AddToInventory
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::AddToInventory(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.AddToInventory");
        
        AGBInvItem_AddToInventory_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.AddNewItemCameraModifier
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBItemCameraModifier*               ItemCameraModifierClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBItemCameraModifier*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBItemCameraModifier* AGBInvItem::AddNewItemCameraModifier(GroundBranch::UGBItemCameraModifier* ItemCameraModifierClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.AddNewItemCameraModifier");
        
        AGBInvItem_AddNewItemCameraModifier_Params params {};
        params.ItemCameraModifierClass = ItemCameraModifierClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.AddedToItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          NewParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::AddedToItem(GroundBranch::AGBInvItem* NewParentItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.AddedToItem");
        
        AGBInvItem_AddedToItem_Params params {};
        params.NewParentItem = NewParentItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.AddedToCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        NewParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::AddedToCharacter(GroundBranch::AGBCharacter* NewParentCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.AddedToCharacter");
        
        AGBInvItem_AddedToCharacter_Params params {};
        params.NewParentCharacter = NewParentCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItem.AddAttachedUseMenuEntries
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  UsageMenu                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInvItem::AddAttachedUseMenuEntries(UMG::UUserWidget* UsageMenu)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItem.AddAttachedUseMenuEntries");
        
        AGBInvItem_AddAttachedUseMenuEntries_Params params {};
        params.UsageMenu = UsageMenu;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPouch.GetFillCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPouch::GetFillCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPouch.GetFillCount");
        
        AGBPouch_GetFillCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPouch.FillWith
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       InvItemId                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       InvSkinId                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPouch::FillWith(const CoreUObject::FPrimaryAssetId& InvItemId, const CoreUObject::FPrimaryAssetId& InvSkinId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPouch.FillWith");
        
        AGBPouch_FillWith_Params params {};
        params.InvItemId = InvItemId;
        params.InvSkinId = InvSkinId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.UpdateGuardPointRadiusSphere
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bHideSphere                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIGuardPoint::UpdateGuardPointRadiusSphere(bool bHideSphere)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.UpdateGuardPointRadiusSphere");
        
        AGBAIGuardPoint_UpdateGuardPointRadiusSphere_Params params {};
        params.bHideSphere = bHideSphere;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetTurnRate
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetTurnRate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetTurnRate");
        
        AGBAIGuardPoint_GetTurnRate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetSweepAngle
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetSweepAngle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetSweepAngle");
        
        AGBAIGuardPoint_GetSweepAngle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetScanDuration
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetScanDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetScanDuration");
        
        AGBAIGuardPoint_GetScanDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetMovementRadius
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetMovementRadius()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetMovementRadius");
        
        AGBAIGuardPoint_GetMovementRadius_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetHoldTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetHoldTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetHoldTime");
        
        AGBAIGuardPoint_GetHoldTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetHoldDeviation
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetHoldDeviation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetHoldDeviation");
        
        AGBAIGuardPoint_GetHoldDeviation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetGuardPointType
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBGuardPointType                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBGuardPointType AGBAIGuardPoint::GetGuardPointType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetGuardPointType");
        
        AGBAIGuardPoint_GetGuardPointType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetGroupName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBAIGuardPoint::GetGroupName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetGroupName");
        
        AGBAIGuardPoint_GetGroupName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetDeviation
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBAIGuardPoint::GetDeviation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetDeviation");
        
        AGBAIGuardPoint_GetDeviation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIGuardPoint.GetBaseViewRoation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBAIGuardPoint::GetBaseViewRoation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIGuardPoint.GetBaseViewRoation");
        
        AGBAIGuardPoint_GetBaseViewRoation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIHotspot.SetHotspotName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewHotspotName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIHotspot::SetHotspotName(const BasicTypes::FName& NewHotspotName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIHotspot.SetHotspotName");
        
        AGBAIHotspot_SetHotspotName_Params params {};
        params.NewHotspotName = NewHotspotName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIHotspot.GetHotspotName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBAIHotspot::GetHotspotName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIHotspot.GetHotspotName");
        
        AGBAIHotspot_GetHotspotName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIObjectiveBase.GetObjectiveDescription
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBAIObjectiveBase::GetObjectiveDescription()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIObjectiveBase.GetObjectiveDescription");
        
        UGBAIObjectiveBase_GetObjectiveDescription_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIObjectiveBase.EvaluateObjective
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAIObjectiveBase::EvaluateObjective()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIObjectiveBase.EvaluateObjective");
        
        UGBAIObjectiveBase_EvaluateObjective_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIObjectiveGeneratorBase.GenerateObjectives
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::UGBAIObjectiveBase*> Objectives                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIObjectiveGeneratorBase::GenerateObjectives(BasicTypes::TArray<GroundBranch::UGBAIObjectiveBase*>* Objectives)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIObjectiveGeneratorBase.GenerateObjectives");
        
        UGBAIObjectiveGeneratorBase_GenerateObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Objectives != nullptr)
            *Objectives = params.Objectives;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIExtensionComponent.InitAI
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  AIControllerTag                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIExtensionComponent::InitAI(const BasicTypes::FName& AIControllerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIExtensionComponent.InitAI");
        
        UGBAIExtensionComponent_InitAI_Params params {};
        params.AIControllerTag = AIControllerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIExtensionComponent.FindPawnExtensionComponent
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBAIExtensionComponent*             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBAIExtensionComponent* UGBAIExtensionComponent::FindPawnExtensionComponent(Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIExtensionComponent.FindPawnExtensionComponent");
        
        UGBAIExtensionComponent_FindPawnExtensionComponent_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> SparseDelegateFunction /Script/GroundBranch.GBAIExtensionComponent.AIInitializedSignature__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIExtensionComponent::AIInitializedSignature__DelegateSignature(GroundBranch::AGBKytController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("SparseDelegateFunction /Script/GroundBranch.GBAIExtensionComponent.AIInitializedSignature__DelegateSignature");
        
        UGBAIExtensionComponent_AIInitializedSignature__DelegateSignature_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIFunctionLibrary.SpawnDefaultKytAI
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SpawnLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              SpawnRotation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TSoftClassPtr<GroundBranch::AGBKytController> ControllerOverride                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* UGBAIFunctionLibrary::SpawnDefaultKytAI(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& SpawnLocation, const CoreUObject::FRotator& SpawnRotation, CoreUObject::UObject* Class, BasicTypes::TSoftClassPtr<GroundBranch::AGBKytController> ControllerOverride)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIFunctionLibrary.SpawnDefaultKytAI");
        
        UGBAIFunctionLibrary_SpawnDefaultKytAI_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SpawnLocation = SpawnLocation;
        params.SpawnRotation = SpawnRotation;
        params.Class = Class;
        params.ControllerOverride = ControllerOverride;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsLocation
     *         Flags  -> ()
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UGBAIFunctionLibrary::GetBlackboardValueAsLocation(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsLocation");
        
        UGBAIFunctionLibrary_GetBlackboardValueAsLocation_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsDirection
     *         Flags  -> ()
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bAs2d                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UGBAIFunctionLibrary::GetBlackboardValueAsDirection(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, bool bAs2d)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsDirection");
        
        UGBAIFunctionLibrary_GetBlackboardValueAsDirection_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.bAs2d = bAs2d;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIFunctionLibrary.GetAIControllersOfClass
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::AAIController*                           AIControllerClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AIModule::AAIController*>       OutAIControllers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIFunctionLibrary::GetAIControllersOfClass(CoreUObject::UObject* WorldContextObject, AIModule::AAIController* AIControllerClass, BasicTypes::TArray<AIModule::AAIController*>* OutAIControllers)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIFunctionLibrary.GetAIControllersOfClass");
        
        UGBAIFunctionLibrary_GetAIControllersOfClass_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AIControllerClass = AIControllerClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAIControllers != nullptr)
            *OutAIControllers = params.OutAIControllers;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIFunctionLibrary.ForgetAll
     *         Flags  -> ()
     * Parameters:
     *         AIModule::UAIPerceptionComponent*                  PerceptionComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAIFunctionLibrary::ForgetAll(AIModule::UAIPerceptionComponent* PerceptionComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIFunctionLibrary.ForgetAll");
        
        UGBAIFunctionLibrary_ForgetAll_Params params {};
        params.PerceptionComponent = PerceptionComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletMovementComponent.GetDragCoefficient
     *         Flags  -> ()
     * Parameters:
     *         float                                              Speed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBBulletMovementComponent::GetDragCoefficient(float Speed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletMovementComponent.GetDragCoefficient");
        
        UGBBulletMovementComponent_GetDragCoefficient_Params params {};
        params.Speed = Speed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SpawnBullet
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    BulletOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBBulletProjectile*                 BulletClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ShotDirection                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              VelocityModifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSimulated                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* AGBBulletProjectile::SpawnBullet(Engine::AActor* BulletOwner, GroundBranch::AGBBulletProjectile* BulletClass, const CoreUObject::FVector& SpawnLocation, const CoreUObject::FVector& ShotDirection, float VelocityModifier, bool bSimulated)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SpawnBullet");
        
        AGBBulletProjectile_SpawnBullet_Params params {};
        params.BulletOwner = BulletOwner;
        params.BulletClass = BulletClass;
        params.SpawnLocation = SpawnLocation;
        params.ShotDirection = ShotDirection;
        params.VelocityModifier = VelocityModifier;
        params.bSimulated = bSimulated;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SimulateTrajectory
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FTransform                            SimTM                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              SimTime                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SimTimeStep                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxDistance                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           OutTrajectoryPoints                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bOutSimulatedImpact                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SimulateTrajectory(const CoreUObject::FTransform& SimTM, float SimTime, float SimTimeStep, float MaxDistance, BasicTypes::TArray<CoreUObject::FVector>* OutTrajectoryPoints, bool* bOutSimulatedImpact)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SimulateTrajectory");
        
        AGBBulletProjectile_SimulateTrajectory_Params params {};
        params.SimTM = SimTM;
        params.SimTime = SimTime;
        params.SimTimeStep = SimTimeStep;
        params.MaxDistance = MaxDistance;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTrajectoryPoints != nullptr)
            *OutTrajectoryPoints = params.OutTrajectoryPoints;
        if (bOutSimulatedImpact != nullptr)
            *bOutSimulatedImpact = params.bOutSimulatedImpact;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetTracerColourIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewTracerColourIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetTracerColourIndex(uint8_t NewTracerColourIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetTracerColourIndex");
        
        AGBBulletProjectile_SetTracerColourIndex_Params params {};
        params.NewTracerColourIndex = NewTracerColourIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetStatKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewStatKey                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetStatKey(const BasicTypes::FString& NewStatKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetStatKey");
        
        AGBBulletProjectile_SetStatKey_Params params {};
        params.NewStatKey = NewStatKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetParentBullet
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 NewParentBullet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetParentBullet(GroundBranch::AGBBulletProjectile* NewParentBullet)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetParentBullet");
        
        AGBBulletProjectile_SetParentBullet_Params params {};
        params.NewParentBullet = NewParentBullet;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetDumpedKEToDamageScaleDeviation
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetDumpedKEToDamageScaleDeviation(int32_t NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetDumpedKEToDamageScaleDeviation");
        
        AGBBulletProjectile_SetDumpedKEToDamageScaleDeviation_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetDumpedKEToDamageScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetDumpedKEToDamageScale(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetDumpedKEToDamageScale");
        
        AGBBulletProjectile_SetDumpedKEToDamageScale_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetDragCoefficientOverride
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetDragCoefficientOverride(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetDragCoefficientOverride");
        
        AGBBulletProjectile_SetDragCoefficientOverride_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.SetBulletIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewBulletIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::SetBulletIndex(uint8_t NewBulletIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.SetBulletIndex");
        
        AGBBulletProjectile_SetBulletIndex_Params params {};
        params.NewBulletIndex = NewBulletIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnStopEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnStopEvent(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnStopEvent");
        
        AGBBulletProjectile_OnStopEvent_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnStop
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnStop(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnStop");
        
        AGBBulletProjectile_OnStop_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnRep_BulletReplicatedMovement
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnRep_BulletReplicatedMovement()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnRep_BulletReplicatedMovement");
        
        AGBBulletProjectile_OnRep_BulletReplicatedMovement_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnImpact
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnImpact(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnImpact");
        
        AGBBulletProjectile_OnImpact_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnExitEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnExitEvent(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnExitEvent");
        
        AGBBulletProjectile_OnExitEvent_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnExit
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnExit(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnExit");
        
        AGBBulletProjectile_OnExit_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.OnBulletWarnSphereEndOverlap
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::OnBulletWarnSphereEndOverlap(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.OnBulletWarnSphereEndOverlap");
        
        AGBBulletProjectile_OnBulletWarnSphereEndOverlap_Params params {};
        params.OverlappedComponent = OverlappedComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.OtherBodyIndex = OtherBodyIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.IsSimulatedOnly
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBBulletProjectile::IsSimulatedOnly()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.IsSimulatedOnly");
        
        AGBBulletProjectile_IsSimulatedOnly_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.IsDebuggingBullets
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBBulletProjectile::IsDebuggingBullets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.IsDebuggingBullets");
        
        AGBBulletProjectile_IsDebuggingBullets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.InitForSimulatedTrajectory
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::InitForSimulatedTrajectory()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.InitForSimulatedTrajectory");
        
        AGBBulletProjectile_InitForSimulatedTrajectory_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.ImpactEffect
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               bExiting                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::ImpactEffect(const Engine::FHitResult& HitResult, bool bExiting)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.ImpactEffect");
        
        AGBBulletProjectile_ImpactEffect_Params params {};
        params.HitResult = HitResult;
        params.bExiting = bExiting;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.ImpactDamage
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::ImpactDamage(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.ImpactDamage");
        
        AGBBulletProjectile_ImpactDamage_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetTracerColourIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBBulletProjectile::GetTracerColourIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetTracerColourIndex");
        
        AGBBulletProjectile_GetTracerColourIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetStatKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBBulletProjectile::GetStatKey()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetStatKey");
        
        AGBBulletProjectile_GetStatKey_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetImpactComp
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* AGBBulletProjectile::GetImpactComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetImpactComp");
        
        AGBBulletProjectile_GetImpactComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetDumpedKEToDamageScaleDeviation
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBBulletProjectile::GetDumpedKEToDamageScaleDeviation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetDumpedKEToDamageScaleDeviation");
        
        AGBBulletProjectile_GetDumpedKEToDamageScaleDeviation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetDumpedKEToDamageScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBBulletProjectile::GetDumpedKEToDamageScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetDumpedKEToDamageScale");
        
        AGBBulletProjectile_GetDumpedKEToDamageScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetBulletMovementComp
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBBulletMovementComponent*          ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBBulletMovementComponent* AGBBulletProjectile::GetBulletMovementComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetBulletMovementComp");
        
        AGBBulletProjectile_GetBulletMovementComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.GetBulletIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBBulletProjectile::GetBulletIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.GetBulletIndex");
        
        AGBBulletProjectile_GetBulletIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.CreateTracerEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::CreateTracerEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.CreateTracerEvent");
        
        AGBBulletProjectile_CreateTracerEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletProjectile.CharacterImpact
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBulletProjectile::CharacterImpact(GroundBranch::AGBCharacter* Character, const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletProjectile.CharacterImpact");
        
        AGBBulletProjectile_CharacterImpact_Params params {};
        params.Character = Character;
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.OnModifierEnabledEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::OnModifierEnabledEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.OnModifierEnabledEvent");
        
        UGBCameraModifier_OnModifierEnabledEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.OnModifierDisabledEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::OnModifierDisabledEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.OnModifierDisabledEvent");
        
        UGBCameraModifier_OnModifierDisabledEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.OnCameraStyleChangedEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  OldCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  NewCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::OnCameraStyleChangedEvent(const BasicTypes::FName& OldCameraStyle, const BasicTypes::FName& NewCameraStyle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.OnCameraStyleChangedEvent");
        
        UGBCameraModifier_OnCameraStyleChangedEvent_Params params {};
        params.OldCameraStyle = OldCameraStyle;
        params.NewCameraStyle = NewCameraStyle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.OnCameraStyleChanged
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  OldCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  NewCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::OnCameraStyleChanged(const BasicTypes::FName& OldCameraStyle, const BasicTypes::FName& NewCameraStyle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.OnCameraStyleChanged");
        
        UGBCameraModifier_OnCameraStyleChanged_Params params {};
        params.OldCameraStyle = OldCameraStyle;
        params.NewCameraStyle = NewCameraStyle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.GetGBPlayerController
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerController* UGBCameraModifier::GetGBPlayerController()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.GetGBPlayerController");
        
        UGBCameraModifier_GetGBPlayerController_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.GetGBPlayerCameraManager
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerCameraManager*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerCameraManager* UGBCameraModifier::GetGBPlayerCameraManager()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.GetGBPlayerCameraManager");
        
        UGBCameraModifier_GetGBPlayerCameraManager_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.BlueprintRemovedFromCamera
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerCameraManager*              GBPlayerCameraManager                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::BlueprintRemovedFromCamera(GroundBranch::AGBPlayerCameraManager* GBPlayerCameraManager)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.BlueprintRemovedFromCamera");
        
        UGBCameraModifier_BlueprintRemovedFromCamera_Params params {};
        params.GBPlayerCameraManager = GBPlayerCameraManager;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.BlueprintProcessViewRotation
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ViewTarget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              OutViewRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              OutDeltaRot                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCameraModifier::BlueprintProcessViewRotation(Engine::AActor* ViewTarget, float DeltaTime, CoreUObject::FRotator* OutViewRotation, CoreUObject::FRotator* OutDeltaRot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.BlueprintProcessViewRotation");
        
        UGBCameraModifier_BlueprintProcessViewRotation_Params params {};
        params.ViewTarget = ViewTarget;
        params.DeltaTime = DeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutViewRotation != nullptr)
            *OutViewRotation = params.OutViewRotation;
        if (OutDeltaRot != nullptr)
            *OutDeltaRot = params.OutDeltaRot;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.BlueprintPreApplyCameraModifier
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerCameraManager*              GBPlayerCameraManager                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::BlueprintPreApplyCameraModifier(GroundBranch::AGBPlayerCameraManager* GBPlayerCameraManager, float DeltaTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.BlueprintPreApplyCameraModifier");
        
        UGBCameraModifier_BlueprintPreApplyCameraModifier_Params params {};
        params.GBPlayerCameraManager = GBPlayerCameraManager;
        params.DeltaTime = DeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCameraModifier.BlueprintAddedToCamera
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerCameraManager*              GBPlayerCameraManager                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCameraModifier::BlueprintAddedToCamera(GroundBranch::AGBPlayerCameraManager* GBPlayerCameraManager)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCameraModifier.BlueprintAddedToCamera");
        
        UGBCameraModifier_BlueprintAddedToCamera_Params params {};
        params.GBPlayerCameraManager = GBPlayerCameraManager;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.SetCompletionDetailsForMission
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSinglePlayer                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CompletionAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::SetCompletionDetailsForMission(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, bool bSinglePlayer, float CompletionAmount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.SetCompletionDetailsForMission");
        
        UGBCampaignSettings_SetCompletionDetailsForMission_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.bSinglePlayer = bSinglePlayer;
        params.CompletionAmount = CompletionAmount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.ResetCompletionDetailsForMission
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::ResetCompletionDetailsForMission(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.ResetCompletionDetailsForMission");
        
        UGBCampaignSettings_ResetCompletionDetailsForMission_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.ResetCompletionDetailsForHotspot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::ResetCompletionDetailsForHotspot(const BasicTypes::FName& InHotspotCodename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.ResetCompletionDetailsForHotspot");
        
        UGBCampaignSettings_ResetCompletionDetailsForHotspot_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.ResetCampaign
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::ResetCampaign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.ResetCampaign");
        
        UGBCampaignSettings_ResetCampaign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.MarkOperatorKIA
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBOperatorDetails                   OperatorDetails                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::MarkOperatorKIA(const GroundBranch::FGBOperatorDetails& OperatorDetails)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.MarkOperatorKIA");
        
        UGBCampaignSettings_MarkOperatorKIA_Params params {};
        params.OperatorDetails = OperatorDetails;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetOperatorRoster
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBOperatorDetails> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBOperatorDetails> UGBCampaignSettings::GetOperatorRoster()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetOperatorRoster");
        
        UGBCampaignSettings_GetOperatorRoster_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetNewOperator
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBOperatorDetails                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBOperatorDetails UGBCampaignSettings::GetNewOperator()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetNewOperator");
        
        UGBCampaignSettings_GetNewOperator_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetKIAList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBOperatorDetails> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBOperatorDetails> UGBCampaignSettings::GetKIAList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetKIAList");
        
        UGBCampaignSettings_GetKIAList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetIndexInOperatorDetailsList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBOperatorDetails> OperatorList                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBOperatorDetails                   OperatorDetails                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBCampaignSettings::GetIndexInOperatorDetailsList(BasicTypes::TArray<GroundBranch::FGBOperatorDetails> OperatorList, const GroundBranch::FGBOperatorDetails& OperatorDetails)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetIndexInOperatorDetailsList");
        
        UGBCampaignSettings_GetIndexInOperatorDetailsList_Params params {};
        params.OperatorList = OperatorList;
        params.OperatorDetails = OperatorDetails;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetCompletionForHotspot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutSinglePlayerCompletion                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutCoopCompletion                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::GetCompletionForHotspot(const BasicTypes::FName& InHotspotCodename, float* OutSinglePlayerCompletion, float* OutCoopCompletion)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetCompletionForHotspot");
        
        UGBCampaignSettings_GetCompletionForHotspot_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSinglePlayerCompletion != nullptr)
            *OutSinglePlayerCompletion = params.OutSinglePlayerCompletion;
        if (OutCoopCompletion != nullptr)
            *OutCoopCompletion = params.OutCoopCompletion;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetCompletionDetailsForMission
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBMissionCompletionDetails          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBMissionCompletionDetails UGBCampaignSettings::GetCompletionDetailsForMission(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetCompletionDetailsForMission");
        
        UGBCampaignSettings_GetCompletionDetailsForMission_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GetAvailableCodenames
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UGBCampaignSettings::GetAvailableCodenames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GetAvailableCodenames");
        
        UGBCampaignSettings_GetAvailableCodenames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.Get
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBCampaignSettings*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBCampaignSettings* UGBCampaignSettings::Get()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.Get");
        
        UGBCampaignSettings_Get_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.GenerateAvailableCodenames
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::GenerateAvailableCodenames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.GenerateAvailableCodenames");
        
        UGBCampaignSettings_GenerateAvailableCodenames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.FillRoster
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::FillRoster()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.FillRoster");
        
        UGBCampaignSettings_FillRoster_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCampaignSettings.AddOperatorToRoster
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBOperatorDetails                   OperatorDetails                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bUpdateConfig                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCampaignSettings::AddOperatorToRoster(const GroundBranch::FGBOperatorDetails& OperatorDetails, bool bUpdateConfig)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCampaignSettings.AddOperatorToRoster");
        
        UGBCampaignSettings_AddOperatorToRoster_Params params {};
        params.OperatorDetails = OperatorDetails;
        params.bUpdateConfig = bUpdateConfig;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.WantsToSprint
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::WantsToSprint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.WantsToSprint");
        
        AGBCharacter_WantsToSprint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.WantsToRun
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::WantsToRun()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.WantsToRun");
        
        AGBCharacter_WantsToRun_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.WantsToLeanRight
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::WantsToLeanRight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.WantsToLeanRight");
        
        AGBCharacter_WantsToLeanRight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.WantsToLeanLeft
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::WantsToLeanLeft()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.WantsToLeanLeft");
        
        AGBCharacter_WantsToLeanLeft_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.WantsToLean
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::WantsToLean()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.WantsToLean");
        
        AGBCharacter_WantsToLean_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.UpdateSway
     *         Flags  -> ()
     * Parameters:
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::UpdateSway(float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.UpdateSway");
        
        AGBCharacter_UpdateSway_Params params {};
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.UpdateStamina
     *         Flags  -> ()
     * Parameters:
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::UpdateStamina(float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.UpdateStamina");
        
        AGBCharacter_UpdateStamina_Params params {};
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.UpdateLean
     *         Flags  -> ()
     * Parameters:
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::UpdateLean(float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.UpdateLean");
        
        AGBCharacter_UpdateLean_Params params {};
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.UnsetPlayerInteractions
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::UnsetPlayerInteractions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.UnsetPlayerInteractions");
        
        AGBCharacter_UnsetPlayerInteractions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.UnProne
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bToCrouch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bClientSimulation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::UnProne(bool bToCrouch, bool bClientSimulation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.UnProne");
        
        AGBCharacter_UnProne_Params params {};
        params.bToCrouch = bToCrouch;
        params.bClientSimulation = bClientSimulation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.UnarmedLayerSync
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::UnarmedLayerSync()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.UnarmedLayerSync");
        
        AGBCharacter_UnarmedLayerSync_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.TriggerRagdoll
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::TriggerRagdoll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.TriggerRagdoll");
        
        AGBCharacter_TriggerRagdoll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ToggleNightVision
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::ToggleNightVision()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ToggleNightVision");
        
        AGBCharacter_ToggleNightVision_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.TakeFallingDamage
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         float                                              FallingSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::TakeFallingDamage(const Engine::FHitResult& Hit, float FallingSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.TakeFallingDamage");
        
        AGBCharacter_TakeFallingDamage_Params params {};
        params.Hit = Hit;
        params.FallingSpeed = FallingSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.StopVoice
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::StopVoice()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.StopVoice");
        
        AGBCharacter_StopVoice_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.StopNetworkedMontage
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimMontage*                              AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::StopNetworkedMontage(Engine::UAnimMontage* AnimMontage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.StopNetworkedMontage");
        
        AGBCharacter_StopNetworkedMontage_Params params {};
        params.AnimMontage = AnimMontage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetWantsToSprint
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewWantsToSprint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetWantsToSprint(bool bNewWantsToSprint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetWantsToSprint");
        
        AGBCharacter_SetWantsToSprint_Params params {};
        params.bNewWantsToSprint = bNewWantsToSprint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetWantsToRun
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewWantsToRun                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetWantsToRun(bool bNewWantsToRun)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetWantsToRun");
        
        AGBCharacter_SetWantsToRun_Params params {};
        params.bNewWantsToRun = bNewWantsToRun;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetRemoteHeadOffset
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetRemoteHeadOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetRemoteHeadOffset");
        
        AGBCharacter_SetRemoteHeadOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetRecoilCount
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewRecoilCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetRecoilCount(uint8_t NewRecoilCount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetRecoilCount");
        
        AGBCharacter_SetRecoilCount_Params params {};
        params.NewRecoilCount = NewRecoilCount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetRagdollPhysics
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetRagdollPhysics()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetRagdollPhysics");
        
        AGBCharacter_SetRagdollPhysics_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetNetworkedMontageNextSection
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimMontage*                              AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SectionNameToChange                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetNetworkedMontageNextSection(Engine::UAnimMontage* AnimMontage, const BasicTypes::FName& SectionNameToChange, const BasicTypes::FName& NextSection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetNetworkedMontageNextSection");
        
        AGBCharacter_SetNetworkedMontageNextSection_Params params {};
        params.AnimMontage = AnimMontage;
        params.SectionNameToChange = SectionNameToChange;
        params.NextSection = NextSection;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetMinLightLevel
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Type                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetMinLightLevel(const BasicTypes::FName& Type, float Alpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetMinLightLevel");
        
        AGBCharacter_SetMinLightLevel_Params params {};
        params.Type = Type;
        params.Alpha = Alpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetMaxStamina
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMaxStamina                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetMaxStamina(float NewMaxStamina)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetMaxStamina");
        
        AGBCharacter_SetMaxStamina_Params params {};
        params.NewMaxStamina = NewMaxStamina;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetMaxArmStrength
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMaxArmStrength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetMaxArmStrength(float NewMaxArmStrength)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetMaxArmStrength");
        
        AGBCharacter_SetMaxArmStrength_Params params {};
        params.NewMaxArmStrength = NewMaxArmStrength;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKitInfo*                          NewLoadoutInfo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetLoadoutInfo(GroundBranch::AGBKitInfo* NewLoadoutInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetLoadoutInfo");
        
        AGBCharacter_SetLoadoutInfo_Params params {};
        params.NewLoadoutInfo = NewLoadoutInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetLightLevel
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Type                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetLightLevel(const BasicTypes::FName& Type, float Alpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetLightLevel");
        
        AGBCharacter_SetLightLevel_Params params {};
        params.Type = Type;
        params.Alpha = Alpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetEquipped
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          NewEquipped                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          LastEquipped                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetEquipped(GroundBranch::EHand TargetHand, GroundBranch::AGBInvItem* NewEquipped, GroundBranch::AGBInvItem* LastEquipped)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetEquipped");
        
        AGBCharacter_SetEquipped_Params params {};
        params.TargetHand = TargetHand;
        params.NewEquipped = NewEquipped;
        params.LastEquipped = LastEquipped;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetDesiredOffTargetAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewDesiredOffTargetAlpha                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetDesiredOffTargetAlpha(float NewDesiredOffTargetAlpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetDesiredOffTargetAlpha");
        
        AGBCharacter_SetDesiredOffTargetAlpha_Params params {};
        params.NewDesiredOffTargetAlpha = NewDesiredOffTargetAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetDesiredLeanAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetDesiredLeanAlpha(float Alpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetDesiredLeanAlpha");
        
        AGBCharacter_SetDesiredLeanAlpha_Params params {};
        params.Alpha = Alpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetDesiredEngagedAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewDesiredEngagedAlpha                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetDesiredEngagedAlpha(float NewDesiredEngagedAlpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetDesiredEngagedAlpha");
        
        AGBCharacter_SetDesiredEngagedAlpha_Params params {};
        params.NewDesiredEngagedAlpha = NewDesiredEngagedAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetCurrentHand
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                NewHand                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetCurrentHand(GroundBranch::EHand NewHand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetCurrentHand");
        
        AGBCharacter_SetCurrentHand_Params params {};
        params.NewHand = NewHand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetCurrentAnimLayerClass
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             NewAnimLayerClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetCurrentAnimLayerClass(Engine::UAnimInstance* NewAnimLayerClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetCurrentAnimLayerClass");
        
        AGBCharacter_SetCurrentAnimLayerClass_Params params {};
        params.NewAnimLayerClass = NewAnimLayerClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetCharVoiceInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewCharVoiceDataId                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            NewVoiceActorIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetCharVoiceInfo(const CoreUObject::FPrimaryAssetId& NewCharVoiceDataId, uint8_t NewVoiceActorIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetCharVoiceInfo");
        
        AGBCharacter_SetCharVoiceInfo_Params params {};
        params.NewCharVoiceDataId = NewCharVoiceDataId;
        params.NewVoiceActorIndex = NewVoiceActorIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SetBraceInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewBraceLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::SetBraceInfo(const CoreUObject::FVector& NewBraceLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SetBraceInfo");
        
        AGBCharacter_SetBraceInfo_Params params {};
        params.NewBraceLocation = NewBraceLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetWantsToSprint
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewWantsToSprint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetWantsToSprint(bool bNewWantsToSprint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetWantsToSprint");
        
        AGBCharacter_ServerSetWantsToSprint_Params params {};
        params.bNewWantsToSprint = bNewWantsToSprint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetWantsToRun
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewWantsToRun                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetWantsToRun(bool bNewWantsToRun)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetWantsToRun");
        
        AGBCharacter_ServerSetWantsToRun_Params params {};
        params.bNewWantsToRun = bNewWantsToRun;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetRemoteHeadOffset
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewRemoteHeadPitchDif                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            NewRemoteHeadYawDif                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetRemoteHeadOffset(uint8_t NewRemoteHeadPitchDif, uint8_t NewRemoteHeadYawDif)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetRemoteHeadOffset");
        
        AGBCharacter_ServerSetRemoteHeadOffset_Params params {};
        params.NewRemoteHeadPitchDif = NewRemoteHeadPitchDif;
        params.NewRemoteHeadYawDif = NewRemoteHeadYawDif;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetMinLightLevel
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Type                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetMinLightLevel(const BasicTypes::FName& Type, float Alpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetMinLightLevel");
        
        AGBCharacter_ServerSetMinLightLevel_Params params {};
        params.Type = Type;
        params.Alpha = Alpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetLightLevel
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Type                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetLightLevel(const BasicTypes::FName& Type, float Alpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetLightLevel");
        
        AGBCharacter_ServerSetLightLevel_Params params {};
        params.Type = Type;
        params.Alpha = Alpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetDesiredOffTargetAlpha
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            AlphaAsByte                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetDesiredOffTargetAlpha(uint8_t AlphaAsByte)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetDesiredOffTargetAlpha");
        
        AGBCharacter_ServerSetDesiredOffTargetAlpha_Params params {};
        params.AlphaAsByte = AlphaAsByte;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetDesiredLeanAlpha
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            AlphaAsByte                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetDesiredLeanAlpha(uint8_t AlphaAsByte)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetDesiredLeanAlpha");
        
        AGBCharacter_ServerSetDesiredLeanAlpha_Params params {};
        params.AlphaAsByte = AlphaAsByte;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetDesiredEngagedAlpha
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            AlphaAsByte                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetDesiredEngagedAlpha(uint8_t AlphaAsByte)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetDesiredEngagedAlpha");
        
        AGBCharacter_ServerSetDesiredEngagedAlpha_Params params {};
        params.AlphaAsByte = AlphaAsByte;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerSetBraceLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewBraceLocation                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerSetBraceLocation(const CoreUObject::FVector& NewBraceLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerSetBraceLocation");
        
        AGBCharacter_ServerSetBraceLocation_Params params {};
        params.NewBraceLocation = NewBraceLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ServerClearBraceInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::ServerClearBraceInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ServerClearBraceInfo");
        
        AGBCharacter_ServerClearBraceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.SeededFRandRange
     *         Flags  -> ()
     * Parameters:
     *         float                                              InMin                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InMax                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::SeededFRandRange(float InMin, float InMax)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.SeededFRandRange");
        
        AGBCharacter_SeededFRandRange_Params params {};
        params.InMin = InMin;
        params.InMax = InMax;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ResetSkinnedDecalSampler
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::ResetSkinnedDecalSampler()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ResetSkinnedDecalSampler");
        
        AGBCharacter_ResetSkinnedDecalSampler_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.RemoveMeshComponentFromSkinnedDecalSampler
     *         Flags  -> ()
     * Parameters:
     *         Engine::USkeletalMeshComponent*                    MeshToRemove                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::RemoveMeshComponentFromSkinnedDecalSampler(Engine::USkeletalMeshComponent* MeshToRemove)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.RemoveMeshComponentFromSkinnedDecalSampler");
        
        AGBCharacter_RemoveMeshComponentFromSkinnedDecalSampler_Params params {};
        params.MeshToRemove = MeshToRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.Prone
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bClientSimulation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::Prone(bool bClientSimulation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.Prone");
        
        AGBCharacter_Prone_Params params {};
        params.bClientSimulation = bClientSimulation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.PlayVoice
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::PlayVoice(const BasicTypes::FName& Key, bool bIsRadioMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.PlayVoice");
        
        AGBCharacter_PlayVoice_Params params {};
        params.Key = Key;
        params.bIsRadioMessage = bIsRadioMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.PlayTakeHitEffects
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::PlayTakeHitEffects()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.PlayTakeHitEffects");
        
        AGBCharacter_PlayTakeHitEffects_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.PlayNetworkedMontage
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimMontage*                              AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SyncName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  StartSectionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimInstance*                             AnimLayerClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bReplicateToOwner                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::PlayNetworkedMontage(Engine::UAnimMontage* AnimMontage, const BasicTypes::FName& SyncName, float PlayRate, const BasicTypes::FName& StartSectionName, Engine::UAnimInstance* AnimLayerClass, bool bReplicateToOwner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.PlayNetworkedMontage");
        
        AGBCharacter_PlayNetworkedMontage_Params params {};
        params.AnimMontage = AnimMontage;
        params.SyncName = SyncName;
        params.PlayRate = PlayRate;
        params.StartSectionName = StartSectionName;
        params.AnimLayerClass = AnimLayerClass;
        params.bReplicateToOwner = bReplicateToOwner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.PlayDamageEffects
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::PlayDamageEffects()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.PlayDamageEffects");
        
        AGBCharacter_PlayDamageEffects_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OptOut
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OptOut()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OptOut");
        
        AGBCharacter_OptOut_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnStopVoiceEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnStopVoiceEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnStopVoiceEvent");
        
        AGBCharacter_OnStopVoiceEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnStartProneEvent
     *         Flags  -> ()
     * Parameters:
     *         float                                              HalfHeightAdjust                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ScaledHalfHeightAdjust                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnStartProneEvent(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnStartProneEvent");
        
        AGBCharacter_OnStartProneEvent_Params params {};
        params.HalfHeightAdjust = HalfHeightAdjust;
        params.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnStaminaChangedEvent
     *         Flags  -> ()
     * Parameters:
     *         float                                              OldStamina                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnStaminaChangedEvent(float OldStamina)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnStaminaChangedEvent");
        
        AGBCharacter_OnStaminaChangedEvent_Params params {};
        params.OldStamina = OldStamina;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_RNGSeed
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_RNGSeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_RNGSeed");
        
        AGBCharacter_OnRep_RNGSeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_RemoteDesiredOffTargetAlpha
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_RemoteDesiredOffTargetAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_RemoteDesiredOffTargetAlpha");
        
        AGBCharacter_OnRep_RemoteDesiredOffTargetAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_RemoteDesiredLeanAlpha
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_RemoteDesiredLeanAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_RemoteDesiredLeanAlpha");
        
        AGBCharacter_OnRep_RemoteDesiredLeanAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_RemoteDesiredEngagedAlpha
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_RemoteDesiredEngagedAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_RemoteDesiredEngagedAlpha");
        
        AGBCharacter_OnRep_RemoteDesiredEngagedAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_RecoilCount
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_RecoilCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_RecoilCount");
        
        AGBCharacter_OnRep_RecoilCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_LoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_LoadoutInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_LoadoutInfo");
        
        AGBCharacter_OnRep_LoadoutInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_IsProne
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_IsProne()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_IsProne");
        
        AGBCharacter_OnRep_IsProne_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_EquippedRight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          LastRightEquipped                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_EquippedRight(GroundBranch::AGBInvItem* LastRightEquipped)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_EquippedRight");
        
        AGBCharacter_OnRep_EquippedRight_Params params {};
        params.LastRightEquipped = LastRightEquipped;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_EquippedLeft
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          LastLeftEquipped                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_EquippedLeft(GroundBranch::AGBInvItem* LastLeftEquipped)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_EquippedLeft");
        
        AGBCharacter_OnRep_EquippedLeft_Params params {};
        params.LastLeftEquipped = LastLeftEquipped;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_DeathState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBDeathState                        OldDeathState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_DeathState(GroundBranch::EGBDeathState OldDeathState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_DeathState");
        
        AGBCharacter_OnRep_DeathState_Params params {};
        params.OldDeathState = OldDeathState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_CurrentAnimLayerClass
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_CurrentAnimLayerClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_CurrentAnimLayerClass");
        
        AGBCharacter_OnRep_CurrentAnimLayerClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnRep_CharVoiceInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnRep_CharVoiceInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnRep_CharVoiceInfo");
        
        AGBCharacter_OnRep_CharVoiceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnPlayVoiceEvent
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            VoiceAudioEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsLocalPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnPlayVoiceEvent(AkAudio::UAkAudioEvent* VoiceAudioEvent, bool bIsLocalPlayer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnPlayVoiceEvent");
        
        AGBCharacter_OnPlayVoiceEvent_Params params {};
        params.VoiceAudioEvent = VoiceAudioEvent;
        params.bIsLocalPlayer = bIsLocalPlayer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnPhysicsCollision
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnPhysicsCollision(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnPhysicsCollision");
        
        AGBCharacter_OnPhysicsCollision_Params params {};
        params.OverlappedComponent = OverlappedComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.NormalImpulse = NormalImpulse;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnMantleEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnMantleEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnMantleEvent");
        
        AGBCharacter_OnMantleEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnLandedEffects
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         float                                              FallingSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnLandedEffects(const Engine::FHitResult& Hit, float FallingSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnLandedEffects");
        
        AGBCharacter_OnLandedEffects_Params params {};
        params.Hit = Hit;
        params.FallingSpeed = FallingSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnHopped
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnHopped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnHopped");
        
        AGBCharacter_OnHopped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.OnEndProneEvent
     *         Flags  -> ()
     * Parameters:
     *         float                                              HalfHeightAdjust                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ScaledHalfHeightAdjust                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::OnEndProneEvent(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.OnEndProneEvent");
        
        AGBCharacter_OnEndProneEvent_Params params {};
        params.HalfHeightAdjust = HalfHeightAdjust;
        params.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.NotifyPlayerHasFired
     *         Flags  -> ()
     * Parameters:
     *         float                                              ShotSoundLevel                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::NotifyPlayerHasFired(float ShotSoundLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.NotifyPlayerHasFired");
        
        AGBCharacter_NotifyPlayerHasFired_Params params {};
        params.ShotSoundLevel = ShotSoundLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.NetworkedMontageJumpToSection
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::NetworkedMontageJumpToSection(const BasicTypes::FName& SectionName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.NetworkedMontageJumpToSection");
        
        AGBCharacter_NetworkedMontageJumpToSection_Params params {};
        params.SectionName = SectionName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.NetMulticastPlayVoice
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::NetMulticastPlayVoice(const BasicTypes::FName& Key, bool bIsRadioMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.NetMulticastPlayVoice");
        
        AGBCharacter_NetMulticastPlayVoice_Params params {};
        params.Key = Key;
        params.bIsRadioMessage = bIsRadioMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ModifyDamageTaken
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            AppliedDamage                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Damage                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Momentum                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 HitInfo                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         Engine::AController*                               EventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UDamageType*                               DamageType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::ModifyDamageTaken(int32_t* AppliedDamage, int32_t* Damage, CoreUObject::FVector* Momentum, const Engine::FHitResult& HitInfo, Engine::AController* EventInstigator, Engine::AActor* DamageCauser, Engine::UDamageType* DamageType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ModifyDamageTaken");
        
        AGBCharacter_ModifyDamageTaken_Params params {};
        params.HitInfo = HitInfo;
        params.EventInstigator = EventInstigator;
        params.DamageCauser = DamageCauser;
        params.DamageType = DamageType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AppliedDamage != nullptr)
            *AppliedDamage = params.AppliedDamage;
        if (Damage != nullptr)
            *Damage = params.Damage;
        if (Momentum != nullptr)
            *Momentum = params.Momentum;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ModifyDamageCaused
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            AppliedDamage                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Damage                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Momentum                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 HitInfo                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AController*                               EventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UDamageType*                               DamageType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::ModifyDamageCaused(int32_t* AppliedDamage, int32_t* Damage, CoreUObject::FVector* Momentum, const Engine::FHitResult& HitInfo, Engine::AActor* Victim, Engine::AController* EventInstigator, Engine::AActor* DamageCauser, Engine::UDamageType* DamageType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ModifyDamageCaused");
        
        AGBCharacter_ModifyDamageCaused_Params params {};
        params.HitInfo = HitInfo;
        params.Victim = Victim;
        params.EventInstigator = EventInstigator;
        params.DamageCauser = DamageCauser;
        params.DamageType = DamageType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AppliedDamage != nullptr)
            *AppliedDamage = params.AppliedDamage;
        if (Damage != nullptr)
            *Damage = params.Damage;
        if (Momentum != nullptr)
            *Momentum = params.Momentum;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsUICharacter
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsUICharacter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsUICharacter");
        
        AGBCharacter_IsUICharacter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsSprinting
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsSprinting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsSprinting");
        
        AGBCharacter_IsSprinting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsRunning
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsRunning()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsRunning");
        
        AGBCharacter_IsRunning_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsRagdoll
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsRagdoll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsRagdoll");
        
        AGBCharacter_IsRagdoll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsProne
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsProne()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsProne");
        
        AGBCharacter_IsProne_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsLocallyViewed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsLocallyViewed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsLocallyViewed");
        
        AGBCharacter_IsLocallyViewed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsLeading
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsLeading()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsLeading");
        
        AGBCharacter_IsLeading_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsInInventory
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItem                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsInInventory(GroundBranch::AGBInvItem* InvItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsInInventory");
        
        AGBCharacter_IsInInventory_Params params {};
        params.InvItem = InvItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsFrozen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsFrozen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsFrozen");
        
        AGBCharacter_IsFrozen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsEngaged
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsEngaged()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsEngaged");
        
        AGBCharacter_IsEngaged_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsDummyCharacter
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsDummyCharacter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsDummyCharacter");
        
        AGBCharacter_IsDummyCharacter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsCrouched
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsCrouched()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsCrouched");
        
        AGBCharacter_IsCrouched_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsBeingLed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsBeingLed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsBeingLed");
        
        AGBCharacter_IsBeingLed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IsAlive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::IsAlive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IsAlive");
        
        AGBCharacter_IsAlive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.Is3DMovementMode
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::Is3DMovementMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.Is3DMovementMode");
        
        AGBCharacter_Is3DMovementMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.IncrementBulletIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBCharacter::IncrementBulletIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.IncrementBulletIndex");
        
        AGBCharacter_IncrementBulletIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetWantsToControlBreath
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::GetWantsToControlBreath()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetWantsToControlBreath");
        
        AGBCharacter_GetWantsToControlBreath_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetVoiceComp
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* AGBCharacter::GetVoiceComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetVoiceComp");
        
        AGBCharacter_GetVoiceComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetVisibilityModifier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetVisibilityModifier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetVisibilityModifier");
        
        AGBCharacter_GetVisibilityModifier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetViewPitchMin
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetViewPitchMin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetViewPitchMin");
        
        AGBCharacter_GetViewPitchMin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetViewPitchMax
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetViewPitchMax()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetViewPitchMax");
        
        AGBCharacter_GetViewPitchMax_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetTracedCollisionOffset
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetTracedCollisionOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetTracedCollisionOffset");
        
        AGBCharacter_GetTracedCollisionOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetTotalItemWeight
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetTotalItemWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetTotalItemWeight");
        
        AGBCharacter_GetTotalItemWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetSwayOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBCharacter::GetSwayOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetSwayOffset");
        
        AGBCharacter_GetSwayOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetStamina
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetStamina()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetStamina");
        
        AGBCharacter_GetStamina_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetSkinnedDecalSampler
     *         Flags  -> ()
     * Parameters:
     *         SkinnedDecalComponent::USkinnedDecalSampler*       ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SkinnedDecalComponent::USkinnedDecalSampler* AGBCharacter::GetSkinnedDecalSampler()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetSkinnedDecalSampler");
        
        AGBCharacter_GetSkinnedDecalSampler_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetSightLineTransform
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform AGBCharacter::GetSightLineTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetSightLineTransform");
        
        AGBCharacter_GetSightLineTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetShoulderSlingPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetShoulderSlingPoint(GroundBranch::EHand TargetHand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetShoulderSlingPoint");
        
        AGBCharacter_GetShoulderSlingPoint_Params params {};
        params.TargetHand = TargetHand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetRemoteViewPitch
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetRemoteViewPitch()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetRemoteViewPitch");
        
        AGBCharacter_GetRemoteViewPitch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetRemoteHeadOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBCharacter::GetRemoteHeadOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetRemoteHeadOffset");
        
        AGBCharacter_GetRemoteHeadOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetRecoilOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBCharacter::GetRecoilOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetRecoilOffset");
        
        AGBCharacter_GetRecoilOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetRecoilCount
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBCharacter::GetRecoilCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetRecoilCount");
        
        AGBCharacter_GetRecoilCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetRecoilAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetRecoilAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetRecoilAlpha");
        
        AGBCharacter_GetRecoilAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetProneYawOffCenterLimit
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetProneYawOffCenterLimit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetProneYawOffCenterLimit");
        
        AGBCharacter_GetProneYawOffCenterLimit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetProneYawCenter
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetProneYawCenter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetProneYawCenter");
        
        AGBCharacter_GetProneYawCenter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetPrevEquipped
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          OutPrevEquippedLeft                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          OutPrevEquippedRight                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::GetPrevEquipped(GroundBranch::AGBInvItem** OutPrevEquippedLeft, GroundBranch::AGBInvItem** OutPrevEquippedRight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetPrevEquipped");
        
        AGBCharacter_GetPrevEquipped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPrevEquippedLeft != nullptr)
            *OutPrevEquippedLeft = params.OutPrevEquippedLeft;
        if (OutPrevEquippedRight != nullptr)
            *OutPrevEquippedRight = params.OutPrevEquippedRight;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetPelvisBone
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetPelvisBone()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetPelvisBone");
        
        AGBCharacter_GetPelvisBone_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetOppositeHandEnum
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                EquippedType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EHand                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EHand AGBCharacter::GetOppositeHandEnum(GroundBranch::EHand EquippedType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetOppositeHandEnum");
        
        AGBCharacter_GetOppositeHandEnum_Params params {};
        params.EquippedType = EquippedType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetOffTargetAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetOffTargetAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetOffTargetAlpha");
        
        AGBCharacter_GetOffTargetAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetNetworkedMontageSyncName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetNetworkedMontageSyncName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetNetworkedMontageSyncName");
        
        AGBCharacter_GetNetworkedMontageSyncName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetNetworkedMontageSection
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetNetworkedMontageSection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetNetworkedMontageSection");
        
        AGBCharacter_GetNetworkedMontageSection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetNetworkedMontage
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* AGBCharacter::GetNetworkedMontage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetNetworkedMontage");
        
        AGBCharacter_GetNetworkedMontage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetMovementSpeed
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetMovementSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetMovementSpeed");
        
        AGBCharacter_GetMovementSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetMovementDirection
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetMovementDirection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetMovementDirection");
        
        AGBCharacter_GetMovementDirection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetMinLightLevel
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Type                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetMinLightLevel(const BasicTypes::FName& Type)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetMinLightLevel");
        
        AGBCharacter_GetMinLightLevel_Params params {};
        params.Type = Type;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetMaxStamina
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetMaxStamina()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetMaxStamina");
        
        AGBCharacter_GetMaxStamina_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetMaxArmStrength
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetMaxArmStrength()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetMaxArmStrength");
        
        AGBCharacter_GetMaxArmStrength_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetLocalViewer
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerController* AGBCharacter::GetLocalViewer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetLocalViewer");
        
        AGBCharacter_GetLocalViewer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetLightLevelScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetLightLevelScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetLightLevelScale");
        
        AGBCharacter_GetLightLevelScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetLightDetectionComponent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBLXRDetectionComponent*            ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBLXRDetectionComponent* AGBCharacter::GetLightDetectionComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetLightDetectionComponent");
        
        AGBCharacter_GetLightDetectionComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetLeanAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetLeanAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetLeanAlpha");
        
        AGBCharacter_GetLeanAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetLastTakeHitTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetLastTakeHitTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetLastTakeHitTime");
        
        AGBCharacter_GetLastTakeHitTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetItemHandSocket
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetItemHandSocket(GroundBranch::EHand TargetHand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetItemHandSocket");
        
        AGBCharacter_GetItemHandSocket_Params params {};
        params.TargetHand = TargetHand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetItemAttachedToSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBCharacter::GetItemAttachedToSocket(const BasicTypes::FName& SocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetItemAttachedToSocket");
        
        AGBCharacter_GetItemAttachedToSocket_Params params {};
        params.SocketName = SocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetInvItemsByTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBCharacter::GetInvItemsByTags(const GameplayTags::FGameplayTagContainer& InvItemTags, bool bExactMatch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetInvItemsByTags");
        
        AGBCharacter_GetInvItemsByTags_Params params {};
        params.InvItemTags = InvItemTags;
        params.bExactMatch = bExactMatch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetInvItemsByItemAssetId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       InvItemAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBCharacter::GetInvItemsByItemAssetId(const CoreUObject::FPrimaryAssetId& InvItemAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetInvItemsByItemAssetId");
        
        AGBCharacter_GetInvItemsByItemAssetId_Params params {};
        params.InvItemAssetId = InvItemAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetInvItemsByClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItemClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBCharacter::GetInvItemsByClass(GroundBranch::AGBInvItem* InvItemClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetInvItemsByClass");
        
        AGBCharacter_GetInvItemsByClass_Params params {};
        params.InvItemClass = InvItemClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetInvItemsAttachedToSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBCharacter::GetInvItemsAttachedToSocket(const BasicTypes::FName& SocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetInvItemsAttachedToSocket");
        
        AGBCharacter_GetInvItemsAttachedToSocket_Params params {};
        params.SocketName = SocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetInvItemAttachedToSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBCharacter::GetInvItemAttachedToSocket(const BasicTypes::FName& SocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetInvItemAttachedToSocket");
        
        AGBCharacter_GetInvItemAttachedToSocket_Params params {};
        params.SocketName = SocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetInventoryList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBInvItem*> AGBCharacter::GetInventoryList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetInventoryList");
        
        AGBCharacter_GetInventoryList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetHeadCamSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetHeadCamSocket()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetHeadCamSocket");
        
        AGBCharacter_GetHeadCamSocket_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetHandEnumFromSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EHand                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EHand AGBCharacter::GetHandEnumFromSocket(const BasicTypes::FName& SocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetHandEnumFromSocket");
        
        AGBCharacter_GetHandEnumFromSocket_Params params {};
        params.SocketName = SocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetHandEnum
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                EquippedType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EHand                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EHand AGBCharacter::GetHandEnum(GroundBranch::EHand EquippedType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetHandEnum");
        
        AGBCharacter_GetHandEnum_Params params {};
        params.EquippedType = EquippedType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetGBMovementComp
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBCharacterMovement*                ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBCharacterMovement* AGBCharacter::GetGBMovementComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetGBMovementComp");
        
        AGBCharacter_GetGBMovementComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetFootstepComp
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* AGBCharacter::GetFootstepComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetFootstepComp");
        
        AGBCharacter_GetFootstepComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetFlattenSwayTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetFlattenSwayTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetFlattenSwayTime");
        
        AGBCharacter_GetFlattenSwayTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetFirstInvItemByTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          CastToInvItemClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBCharacter::GetFirstInvItemByTags(const GameplayTags::FGameplayTagContainer& InvItemTags, bool bExactMatch, GroundBranch::AGBInvItem* CastToInvItemClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetFirstInvItemByTags");
        
        AGBCharacter_GetFirstInvItemByTags_Params params {};
        params.InvItemTags = InvItemTags;
        params.bExactMatch = bExactMatch;
        params.CastToInvItemClass = CastToInvItemClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetFirstInvItemByItemAssetId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       InvItemAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          CastToInvItemClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBCharacter::GetFirstInvItemByItemAssetId(const CoreUObject::FPrimaryAssetId& InvItemAssetId, GroundBranch::AGBInvItem* CastToInvItemClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetFirstInvItemByItemAssetId");
        
        AGBCharacter_GetFirstInvItemByItemAssetId_Params params {};
        params.InvItemAssetId = InvItemAssetId;
        params.CastToInvItemClass = CastToInvItemClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetFirstInvItemByClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItemClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBCharacter::GetFirstInvItemByClass(GroundBranch::AGBInvItem* InvItemClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetFirstInvItemByClass");
        
        AGBCharacter_GetFirstInvItemByClass_Params params {};
        params.InvItemClass = InvItemClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetEyesSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetEyesSocket()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetEyesSocket");
        
        AGBCharacter_GetEyesSocket_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetEquippedRotationalInertiaModifier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetEquippedRotationalInertiaModifier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetEquippedRotationalInertiaModifier");
        
        AGBCharacter_GetEquippedRotationalInertiaModifier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetEquipped
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBCharacter::GetEquipped(GroundBranch::EHand TargetHand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetEquipped");
        
        AGBCharacter_GetEquipped_Params params {};
        params.TargetHand = TargetHand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetEngagedAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetEngagedAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetEngagedAlpha");
        
        AGBCharacter_GetEngagedAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetDesiredOffTargetAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetDesiredOffTargetAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetDesiredOffTargetAlpha");
        
        AGBCharacter_GetDesiredOffTargetAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetDesiredLeanAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetDesiredLeanAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetDesiredLeanAlpha");
        
        AGBCharacter_GetDesiredLeanAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetDesiredEngagedAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetDesiredEngagedAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetDesiredEngagedAlpha");
        
        AGBCharacter_GetDesiredEngagedAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetDeathState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBDeathState                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBDeathState AGBCharacter::GetDeathState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetDeathState");
        
        AGBCharacter_GetDeathState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetCurrentHand
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EHand                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EHand AGBCharacter::GetCurrentHand()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetCurrentHand");
        
        AGBCharacter_GetCurrentHand_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetCurrentAnimLayerClass
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimInstance* AGBCharacter::GetCurrentAnimLayerClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetCurrentAnimLayerClass");
        
        AGBCharacter_GetCurrentAnimLayerClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetCrouchAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetCrouchAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetCrouchAlpha");
        
        AGBCharacter_GetCrouchAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetCosmeticTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer AGBCharacter::GetCosmeticTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetCosmeticTags");
        
        AGBCharacter_GetCosmeticTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetChestSlingPoint
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetChestSlingPoint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetChestSlingPoint");
        
        AGBCharacter_GetChestSlingPoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetCharVoiceAudioEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkAudioEvent* AGBCharacter::GetCharVoiceAudioEvent(const BasicTypes::FName& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetCharVoiceAudioEvent");
        
        AGBCharacter_GetCharVoiceAudioEvent_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetBreathingSinValue
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetBreathingSinValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetBreathingSinValue");
        
        AGBCharacter_GetBreathingSinValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetBodyCamSocket
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBCharacter::GetBodyCamSocket()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetBodyCamSocket");
        
        AGBCharacter_GetBodyCamSocket_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetArmStrength
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBCharacter::GetArmStrength()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetArmStrength");
        
        AGBCharacter_GetArmStrength_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetAnimInstance
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimInstance* AGBCharacter::GetAnimInstance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetAnimInstance");
        
        AGBCharacter_GetAnimInstance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.GetAimCenterOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBCharacter::GetAimCenterOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.GetAimCenterOffset");
        
        AGBCharacter_GetAimCenterOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ForceClientEquippedSync
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::ForceClientEquippedSync()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ForceClientEquippedSync");
        
        AGBCharacter_ForceClientEquippedSync_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.DestroyInventory
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bForceClient                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::DestroyInventory(bool bForceClient)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.DestroyInventory");
        
        AGBCharacter_DestroyInventory_Params params {};
        params.bForceClient = bForceClient;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ClientSyncEquipped
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ServerEquippedLeft                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          ServerEquippedRight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::ClientSyncEquipped(GroundBranch::AGBInvItem* ServerEquippedLeft, GroundBranch::AGBInvItem* ServerEquippedRight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ClientSyncEquipped");
        
        AGBCharacter_ClientSyncEquipped_Params params {};
        params.ServerEquippedLeft = ServerEquippedLeft;
        params.ServerEquippedRight = ServerEquippedRight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ClientAddDefaultItems
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::ClientAddDefaultItems()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ClientAddDefaultItems");
        
        AGBCharacter_ClientAddDefaultItems_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ClearSimilarItems
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          Exclude                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::ClearSimilarItems(const GameplayTags::FGameplayTagContainer& InvItemTags, bool bExactMatch, GroundBranch::AGBInvItem* Exclude)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ClearSimilarItems");
        
        AGBCharacter_ClearSimilarItems_Params params {};
        params.InvItemTags = InvItemTags;
        params.bExactMatch = bExactMatch;
        params.Exclude = Exclude;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.ClearBraceInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::ClearBraceInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.ClearBraceInfo");
        
        AGBCharacter_ClearBraceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.CleanUpLocalInventory
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::CleanUpLocalInventory()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.CleanUpLocalInventory");
        
        AGBCharacter_CleanUpLocalInventory_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.CanDamageRadial
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::ECollisionChannel                          TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<PhysicsCore::EPhysicalSurface>  SurfaceTypesToIgnore                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBCharacter::CanDamageRadial(const CoreUObject::FVector& DamageOrigin, BasicTypes::TArray<Engine::AActor*> IgnoreActors, Engine::ECollisionChannel TraceChannel, BasicTypes::TArray<PhysicsCore::EPhysicalSurface> SurfaceTypesToIgnore, Engine::FHitResult* OutHit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.CanDamageRadial");
        
        AGBCharacter_CanDamageRadial_Params params {};
        params.DamageOrigin = DamageOrigin;
        params.IgnoreActors = IgnoreActors;
        params.TraceChannel = TraceChannel;
        params.SurfaceTypesToIgnore = SurfaceTypesToIgnore;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHit != nullptr)
            *OutHit = params.OutHit;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.AnimNotifyFootstep
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bInLeftFoot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::AnimNotifyFootstep(bool bInLeftFoot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.AnimNotifyFootstep");
        
        AGBCharacter_AnimNotifyFootstep_Params params {};
        params.bInLeftFoot = bInLeftFoot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.AddStaminaInstantLoss
     *         Flags  -> ()
     * Parameters:
     *         float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::AddStaminaInstantLoss(float Amount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.AddStaminaInstantLoss");
        
        AGBCharacter_AddStaminaInstantLoss_Params params {};
        params.Amount = Amount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.AddRecoil
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBRecoilData                        RecoilData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::AddRecoil(const GroundBranch::FGBRecoilData& RecoilData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.AddRecoil");
        
        AGBCharacter_AddRecoil_Params params {};
        params.RecoilData = RecoilData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.AddDefaultItemsEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::AddDefaultItemsEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.AddDefaultItemsEvent");
        
        AGBCharacter_AddDefaultItemsEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.AddDefaultItems
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBCharacter::AddDefaultItems()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.AddDefaultItems");
        
        AGBCharacter_AddDefaultItems_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacter.AddArmStrengthInstantLoss
     *         Flags  -> ()
     * Parameters:
     *         float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBCharacter::AddArmStrengthInstantLoss(float Amount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacter.AddArmStrengthInstantLoss");
        
        AGBCharacter_AddArmStrengthInstantLoss_Params params {};
        params.Amount = Amount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.WantsToSprint
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCharacterMovement::WantsToSprint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.WantsToSprint");
        
        UGBCharacterMovement_WantsToSprint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.WantsToRun
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCharacterMovement::WantsToRun()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.WantsToRun");
        
        UGBCharacterMovement_WantsToRun_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.WantsToLean
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCharacterMovement::WantsToLean()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.WantsToLean");
        
        UGBCharacterMovement_WantsToLean_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.IsProne
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCharacterMovement::IsProne()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.IsProne");
        
        UGBCharacterMovement_IsProne_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetWaterDepthMaxSpeedScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetWaterDepthMaxSpeedScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetWaterDepthMaxSpeedScale");
        
        UGBCharacterMovement_GetWaterDepthMaxSpeedScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetWaterDepthJumpScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetWaterDepthJumpScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetWaterDepthJumpScale");
        
        UGBCharacterMovement_GetWaterDepthJumpScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetWaterDepth
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetWaterDepth()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetWaterDepth");
        
        UGBCharacterMovement_GetWaterDepth_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetOffTargetAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetOffTargetAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetOffTargetAlpha");
        
        UGBCharacterMovement_GetOffTargetAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetMovementDirection
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetMovementDirection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetMovementDirection");
        
        UGBCharacterMovement_GetMovementDirection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetMaxWalkingSpeed
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetMaxWalkingSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetMaxWalkingSpeed");
        
        UGBCharacterMovement_GetMaxWalkingSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetMaxSprintingSpeed
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetMaxSprintingSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetMaxSprintingSpeed");
        
        UGBCharacterMovement_GetMaxSprintingSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetMaxRunningSpeed
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetMaxRunningSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetMaxRunningSpeed");
        
        UGBCharacterMovement_GetMaxRunningSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetLadderComponent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBLadderComponent*                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBLadderComponent* UGBCharacterMovement::GetLadderComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetLadderComponent");
        
        UGBCharacterMovement_GetLadderComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetFirearmEquipped
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCharacterMovement::GetFirearmEquipped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetFirearmEquipped");
        
        UGBCharacterMovement_GetFirearmEquipped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.GetEngagedAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::GetEngagedAlpha()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.GetEngagedAlpha");
        
        UGBCharacterMovement_GetEngagedAlpha_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharacterMovement.FallingDamageReduction
     *         Flags  -> ()
     * Parameters:
     *         float                                              FallingDamage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBCharacterMovement::FallingDamageReduction(float FallingDamage, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharacterMovement.FallingDamageReduction");
        
        UGBCharacterMovement_FallingDamageReduction_Params params {};
        params.FallingDamage = FallingDamage;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetTurningInPlace
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetTurningInPlace(bool bValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetTurningInPlace");
        
        UGBCharAnimInstance_SetTurningInPlace_Params params {};
        params.bValue = bValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetRecoilBlendAlpha
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewRecoilBlendAlpha                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetRecoilBlendAlpha(float NewRecoilBlendAlpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetRecoilBlendAlpha");
        
        UGBCharAnimInstance_SetRecoilBlendAlpha_Params params {};
        params.NewRecoilBlendAlpha = NewRecoilBlendAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicRightItemRoot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetDynamicRightItemRoot(const BasicTypes::FName& BoneName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicRightItemRoot");
        
        UGBCharAnimInstance_SetDynamicRightItemRoot_Params params {};
        params.BoneName = BoneName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicRightHandIKRoot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetDynamicRightHandIKRoot(const BasicTypes::FName& BoneName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicRightHandIKRoot");
        
        UGBCharAnimInstance_SetDynamicRightHandIKRoot_Params params {};
        params.BoneName = BoneName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicLeftHandIKRootRotOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              RotOffset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetDynamicLeftHandIKRootRotOffset(const CoreUObject::FRotator& RotOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicLeftHandIKRootRotOffset");
        
        UGBCharAnimInstance_SetDynamicLeftHandIKRootRotOffset_Params params {};
        params.RotOffset = RotOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicLeftHandIKRootLocOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               LocOffset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetDynamicLeftHandIKRootLocOffset(const CoreUObject::FVector& LocOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicLeftHandIKRootLocOffset");
        
        UGBCharAnimInstance_SetDynamicLeftHandIKRootLocOffset_Params params {};
        params.LocOffset = LocOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicLeftHandIKRoot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstance::SetDynamicLeftHandIKRoot(const BasicTypes::FName& BoneName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.SetDynamicLeftHandIKRoot");
        
        UGBCharAnimInstance_SetDynamicLeftHandIKRoot_Params params {};
        params.BoneName = BoneName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.GetTurningInPlace
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBCharAnimInstance::GetTurningInPlace()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.GetTurningInPlace");
        
        UGBCharAnimInstance_GetTurningInPlace_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.GetMontageFromLinkedLayer
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             InCurrentAnimLayerClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InMontageName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* UGBCharAnimInstance::GetMontageFromLinkedLayer(Engine::UAnimInstance* InCurrentAnimLayerClass, const BasicTypes::FName& InMontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.GetMontageFromLinkedLayer");
        
        UGBCharAnimInstance_GetMontageFromLinkedLayer_Params params {};
        params.InCurrentAnimLayerClass = InCurrentAnimLayerClass;
        params.InMontageName = InMontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.GetDynamicRightHandIKRoot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBCharAnimInstance::GetDynamicRightHandIKRoot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.GetDynamicRightHandIKRoot");
        
        UGBCharAnimInstance_GetDynamicRightHandIKRoot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstance.GetDynamicLeftHandIKRoot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBCharAnimInstance::GetDynamicLeftHandIKRoot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstance.GetDynamicLeftHandIKRoot");
        
        UGBCharAnimInstance_GetDynamicLeftHandIKRoot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstanceLayer.OnEquippedItemsUpdatedEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCharAnimInstanceLayer::OnEquippedItemsUpdatedEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstanceLayer.OnEquippedItemsUpdatedEvent");
        
        UGBCharAnimInstanceLayer_OnEquippedItemsUpdatedEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCharAnimInstanceLayer.GetMontageFromLinkedLayer
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* UGBCharAnimInstanceLayer::GetMontageFromLinkedLayer(const BasicTypes::FName& MontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCharAnimInstanceLayer.GetMontageFromLinkedLayer");
        
        UGBCharAnimInstanceLayer_GetMontageFromLinkedLayer_Params params {};
        params.MontageName = MontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadClassAssets
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::TSoftClassPtr<CoreUObject::UObject>> SoftClassPtrs                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAsyncLoadClassAssetsComplete                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManager::BlueprintAsyncLoadClassAssets(BasicTypes::TArray<BasicTypes::TSoftClassPtr<CoreUObject::UObject>> SoftClassPtrs, const BasicTypes::UScriptDelegate& OnAsyncLoadClassAssetsComplete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadClassAssets");
        
        UGBAssetManager_BlueprintAsyncLoadClassAssets_Params params {};
        params.SoftClassPtrs = SoftClassPtrs;
        params.OnAsyncLoadClassAssetsComplete = OnAsyncLoadClassAssetsComplete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadClassAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftClassPtr<CoreUObject::UObject>    SoftClassPtr                                               (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAsyncLoadClassAssetComplete                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManager::BlueprintAsyncLoadClassAsset(BasicTypes::TSoftClassPtr<CoreUObject::UObject> SoftClassPtr, const BasicTypes::UScriptDelegate& OnAsyncLoadClassAssetComplete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadClassAsset");
        
        UGBAssetManager_BlueprintAsyncLoadClassAsset_Params params {};
        params.SoftClassPtr = SoftClassPtr;
        params.OnAsyncLoadClassAssetComplete = OnAsyncLoadClassAssetComplete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAssets
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<CoreUObject::UObject>> SoftObjectPtrs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAsyncLoadAssetsComplete                                  (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManager::BlueprintAsyncLoadAssets(BasicTypes::TArray<BasicTypes::TSoftObjectPtr<CoreUObject::UObject>> SoftObjectPtrs, const BasicTypes::UScriptDelegate& OnAsyncLoadAssetsComplete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAssets");
        
        UGBAssetManager_BlueprintAsyncLoadAssets_Params params {};
        params.SoftObjectPtrs = SoftObjectPtrs;
        params.OnAsyncLoadAssetsComplete = OnAsyncLoadAssetsComplete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPaths
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FSoftObjectPath>   SoftObjectPaths                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAsyncLoadAssetsComplete                                  (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManager::BlueprintAsyncLoadAssetPaths(BasicTypes::TArray<CoreUObject::FSoftObjectPath> SoftObjectPaths, const BasicTypes::UScriptDelegate& OnAsyncLoadAssetsComplete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPaths");
        
        UGBAssetManager_BlueprintAsyncLoadAssetPaths_Params params {};
        params.SoftObjectPaths = SoftObjectPaths;
        params.OnAsyncLoadAssetsComplete = OnAsyncLoadAssetsComplete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPath
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       SoftObjectPath                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAsyncLoadAssetComplete                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManager::BlueprintAsyncLoadAssetPath(const CoreUObject::FSoftObjectPath& SoftObjectPath, const BasicTypes::UScriptDelegate& OnAsyncLoadAssetComplete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPath");
        
        UGBAssetManager_BlueprintAsyncLoadAssetPath_Params params {};
        params.SoftObjectPath = SoftObjectPath;
        params.OnAsyncLoadAssetComplete = OnAsyncLoadAssetComplete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<CoreUObject::UObject>   SoftObjectPtr                                              (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAsyncLoadAssetComplete                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManager::BlueprintAsyncLoadAsset(BasicTypes::TSoftObjectPtr<CoreUObject::UObject> SoftObjectPtr, const BasicTypes::UScriptDelegate& OnAsyncLoadAssetComplete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManager.BlueprintAsyncLoadAsset");
        
        UGBAssetManager_BlueprintAsyncLoadAsset_Params params {};
        params.SoftObjectPtr = SoftObjectPtr;
        params.OnAsyncLoadAssetComplete = OnAsyncLoadAssetComplete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.SortPrimaryAssetIdList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   InPrimaryAssetIdList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SortTag                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   OutPrimaryAssetIdList                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManagerFunctionLibrary::SortPrimaryAssetIdList(BasicTypes::TArray<CoreUObject::FPrimaryAssetId> InPrimaryAssetIdList, const BasicTypes::FName& SortTag, BasicTypes::TArray<CoreUObject::FPrimaryAssetId>* OutPrimaryAssetIdList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.SortPrimaryAssetIdList");
        
        UGBAssetManagerFunctionLibrary_SortPrimaryAssetIdList_Params params {};
        params.InPrimaryAssetIdList = InPrimaryAssetIdList;
        params.SortTag = SortTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPrimaryAssetIdList != nullptr)
            *OutPrimaryAssetIdList = params.OutPrimaryAssetIdList;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.RestrictedInvItemSkin
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemSkinTags                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::RestrictedInvItemSkin(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags, const GameplayTags::FGameplayTagContainer& InvItemSkinTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.RestrictedInvItemSkin");
        
        UGBAssetManagerFunctionLibrary_RestrictedInvItemSkin_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        params.InvItemSkinTags = InvItemSkinTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.RestrictedInvItem
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::RestrictedInvItem(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.RestrictedInvItem");
        
        UGBAssetManagerFunctionLibrary_RestrictedInvItem_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.Map_GetARSFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TMap<int32_t, int32_t>                 TargetMap                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::Map_GetARSFromPrimaryAsset(BasicTypes::TMap<int32_t, int32_t> TargetMap, const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.Map_GetARSFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_Map_GetARSFromPrimaryAsset_Params params {};
        params.TargetMap = TargetMap;
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.HasInvItemSkins
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         InvItemSkinTypeTag                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::HasInvItemSkins(const GameplayTags::FGameplayTag& InvItemSkinTypeTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.HasInvItemSkins");
        
        UGBAssetManagerFunctionLibrary_HasInvItemSkins_Params params {};
        params.InvItemSkinTypeTag = InvItemSkinTypeTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetValidInvItemSkinIds
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FPrimaryAssetId> UGBAssetManagerFunctionLibrary::GetValidInvItemSkinIds(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetValidInvItemSkinIds");
        
        UGBAssetManagerFunctionLibrary_GetValidInvItemSkinIds_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetSubstituteInvItemSkinNameTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         InvItemSkinNameTag                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBAssetManagerFunctionLibrary::GetSubstituteInvItemSkinNameTags(const GameplayTags::FGameplayTag& InvItemSkinNameTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetSubstituteInvItemSkinNameTags");
        
        UGBAssetManagerFunctionLibrary_GetSubstituteInvItemSkinNameTags_Params params {};
        params.InvItemSkinNameTag = InvItemSkinNameTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetSimilarInvItemSkinIdToExisting
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       ExistingInvItemSkinId                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetSimilarInvItemSkinIdToExisting(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags, const CoreUObject::FPrimaryAssetId& ExistingInvItemSkinId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetSimilarInvItemSkinIdToExisting");
        
        UGBAssetManagerFunctionLibrary_GetSimilarInvItemSkinIdToExisting_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        params.ExistingInvItemSkinId = ExistingInvItemSkinId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetSimilarInvItemSkinId
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         InvItemSkinNameTag                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                SubstituteInvItemSkinNameTags                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetSimilarInvItemSkinId(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags, const GameplayTags::FGameplayTag& InvItemSkinNameTag, const GameplayTags::FGameplayTagContainer& SubstituteInvItemSkinNameTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetSimilarInvItemSkinId");
        
        UGBAssetManagerFunctionLibrary_GetSimilarInvItemSkinId_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        params.InvItemSkinNameTag = InvItemSkinNameTag;
        params.SubstituteInvItemSkinNameTags = SubstituteInvItemSkinNameTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdForPath
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       ObjectPath                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetPrimaryAssetIdForPath(const CoreUObject::FSoftObjectPath& ObjectPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdForPath");
        
        UGBAssetManagerFunctionLibrary_GetPrimaryAssetIdForPath_Params params {};
        params.ObjectPath = ObjectPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemTypeTag
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       ItemAssetId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBAssetManagerFunctionLibrary::GetInvItemTypeTag(const CoreUObject::FPrimaryAssetId& ItemAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemTypeTag");
        
        UGBAssetManagerFunctionLibrary_GetInvItemTypeTag_Params params {};
        params.ItemAssetId = ItemAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemTags
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       ItemAssetId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBAssetManagerFunctionLibrary::GetInvItemTags(const CoreUObject::FPrimaryAssetId& ItemAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemTags");
        
        UGBAssetManagerFunctionLibrary_GetInvItemTags_Params params {};
        params.ItemAssetId = ItemAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinTypeTag
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       InvItemAssetId                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBAssetManagerFunctionLibrary::GetInvItemSkinTypeTag(const CoreUObject::FPrimaryAssetId& InvItemAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinTypeTag");
        
        UGBAssetManagerFunctionLibrary_GetInvItemSkinTypeTag_Params params {};
        params.InvItemAssetId = InvItemAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinNameTag
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       InvItemSkinAssetId                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBAssetManagerFunctionLibrary::GetInvItemSkinNameTag(const CoreUObject::FPrimaryAssetId& InvItemSkinAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinNameTag");
        
        UGBAssetManagerFunctionLibrary_GetInvItemSkinNameTag_Params params {};
        params.InvItemSkinAssetId = InvItemSkinAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinInfoByNameTag
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         InvItemSkinNameTag                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       OutSkinAssetId                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetInvItemSkinInfoByNameTag(const GameplayTags::FGameplayTag& InvItemSkinNameTag, CoreUObject::FPrimaryAssetId* OutSkinAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinInfoByNameTag");
        
        UGBAssetManagerFunctionLibrary_GetInvItemSkinInfoByNameTag_Params params {};
        params.InvItemSkinNameTag = InvItemSkinNameTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSkinAssetId != nullptr)
            *OutSkinAssetId = params.OutSkinAssetId;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinIdByTypeAndName
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         InvItemSkinTypeTag                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         InvItemSkinNameTag                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetInvItemSkinIdByTypeAndName(const GameplayTags::FGameplayTag& InvItemSkinTypeTag, const GameplayTags::FGameplayTag& InvItemSkinNameTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemSkinIdByTypeAndName");
        
        UGBAssetManagerFunctionLibrary_GetInvItemSkinIdByTypeAndName_Params params {};
        params.InvItemSkinTypeTag = InvItemSkinTypeTag;
        params.InvItemSkinNameTag = InvItemSkinNameTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemAssetIds
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (Parm, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBInvItemTagsCheckType              InvItemTagsCheckType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                ExcludeInvItemTags                                         (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   OutItemAssetIds                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAssetManagerFunctionLibrary::GetInvItemAssetIds(const GameplayTags::FGameplayTagContainer& InvItemTags, GroundBranch::EGBInvItemTagsCheckType InvItemTagsCheckType, const GameplayTags::FGameplayTagContainer& ExcludeInvItemTags, BasicTypes::TArray<CoreUObject::FPrimaryAssetId>* OutItemAssetIds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetInvItemAssetIds");
        
        UGBAssetManagerFunctionLibrary_GetInvItemAssetIds_Params params {};
        params.InvItemTags = InvItemTags;
        params.InvItemTagsCheckType = InvItemTagsCheckType;
        params.ExcludeInvItemTags = ExcludeInvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutItemAssetIds != nullptr)
            *OutItemAssetIds = params.OutItemAssetIds;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetGameplayTagContainer
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  AssetDataTag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBAssetManagerFunctionLibrary::GetGameplayTagContainer(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& AssetDataTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetGameplayTagContainer");
        
        UGBAssetManagerFunctionLibrary_GetGameplayTagContainer_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.AssetDataTag = AssetDataTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetFirstValidInvItemSkinId
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetFirstValidInvItemSkinId(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetFirstValidInvItemSkinId");
        
        UGBAssetManagerFunctionLibrary_GetFirstValidInvItemSkinId_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetFallbackInvItemAndSkin
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       OutItemAssetId                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       OutItemSkinId                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetFallbackInvItemAndSkin(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags, CoreUObject::FPrimaryAssetId* OutItemAssetId, CoreUObject::FPrimaryAssetId* OutItemSkinId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetFallbackInvItemAndSkin");
        
        UGBAssetManagerFunctionLibrary_GetFallbackInvItemAndSkin_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutItemAssetId != nullptr)
            *OutItemAssetId = params.OutItemAssetId;
        if (OutItemSkinId != nullptr)
            *OutItemSkinId = params.OutItemSkinId;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetBundlesToLoad
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UGBAssetManagerFunctionLibrary::GetBundlesToLoad(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetBundlesToLoad");
        
        UGBAssetManagerFunctionLibrary_GetBundlesToLoad_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSTextFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  OutText                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSTextFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, BasicTypes::FText* OutText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSTextFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSTextFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutText != nullptr)
            *OutText = params.OutText;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSStructFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBDummyStruct                       Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSStructFromPrimaryAsset(const GroundBranch::FGBDummyStruct& Value, const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSStructFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSStructFromPrimaryAsset_Params params {};
        params.Value = Value;
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSStringFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutString                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSStringFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, BasicTypes::FString* OutString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSStringFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSStringFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutString != nullptr)
            *OutString = params.OutString;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSSoftObjectPtrFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TSoftObjectPtr<CoreUObject::UObject>   OutSoftObjectPtr                                           (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSSoftObjectPtrFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, BasicTypes::TSoftObjectPtr<CoreUObject::UObject>* OutSoftObjectPtr)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSSoftObjectPtrFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSSoftObjectPtrFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSoftObjectPtr != nullptr)
            *OutSoftObjectPtr = params.OutSoftObjectPtr;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSNameFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutName                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSNameFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, BasicTypes::FName* OutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSNameFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSNameFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutName != nullptr)
            *OutName = params.OutName;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSIntFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutInt                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSIntFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, int32_t* OutInt)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSIntFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSIntFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutInt != nullptr)
            *OutInt = params.OutInt;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSFloatFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutFloat                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSFloatFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, float* OutFloat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSFloatFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSFloatFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFloat != nullptr)
            *OutFloat = params.OutFloat;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSEnumAsByteFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                EnumName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            OutByte                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSEnumAsByteFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FString& EnumName, const BasicTypes::FName& TagKey, uint8_t* OutByte)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSEnumAsByteFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSEnumAsByteFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.EnumName = EnumName;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutByte != nullptr)
            *OutByte = params.OutByte;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSBoolFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutBool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::GetARSBoolFromPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey, bool* bOutBool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.GetARSBoolFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_GetARSBoolFromPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bOutBool != nullptr)
            *bOutBool = params.bOutBool;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.Conv_PrimaryAssetTypeToName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetType                     PrimaryAssetType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBAssetManagerFunctionLibrary::Conv_PrimaryAssetTypeToName(const CoreUObject::FPrimaryAssetType& PrimaryAssetType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.Conv_PrimaryAssetTypeToName");
        
        UGBAssetManagerFunctionLibrary_Conv_PrimaryAssetTypeToName_Params params {};
        params.PrimaryAssetType = PrimaryAssetType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.Array_GetARSFromPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<int32_t>                        TargetArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAssetManagerFunctionLibrary::Array_GetARSFromPrimaryAsset(BasicTypes::TArray<int32_t> TargetArray, const CoreUObject::FPrimaryAssetId& PrimaryAssetId, const BasicTypes::FName& TagKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAssetManagerFunctionLibrary.Array_GetARSFromPrimaryAsset");
        
        UGBAssetManagerFunctionLibrary_Array_GetARSFromPrimaryAsset_Params params {};
        params.TargetArray = TargetArray;
        params.PrimaryAssetId = PrimaryAssetId;
        params.TagKey = TagKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.SetIsFiringFromOpenBolt
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewIsFiringFromOpenBolt                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBExternalMagazineComponent::SetIsFiringFromOpenBolt(bool bNewIsFiringFromOpenBolt)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.SetIsFiringFromOpenBolt");
        
        UGBExternalMagazineComponent_SetIsFiringFromOpenBolt_Params params {};
        params.bNewIsFiringFromOpenBolt = bNewIsFiringFromOpenBolt;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.SetChamberedRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 NewChamberedRound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBExternalMagazineComponent::SetChamberedRound(GroundBranch::AGBBulletProjectile* NewChamberedRound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.SetChamberedRound");
        
        UGBExternalMagazineComponent_SetChamberedRound_Params params {};
        params.NewChamberedRound = NewChamberedRound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.SetBoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewBoltIsHeldOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBExternalMagazineComponent::SetBoltHeldOpen(bool bNewBoltIsHeldOpen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.SetBoltHeldOpen");
        
        UGBExternalMagazineComponent_SetBoltHeldOpen_Params params {};
        params.bNewBoltIsHeldOpen = bNewBoltIsHeldOpen;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.OnRep_Magazine
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBExternalMagazineComponent::OnRep_Magazine()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.OnRep_Magazine");
        
        UGBExternalMagazineComponent_OnRep_Magazine_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.OnRep_BoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBExternalMagazineComponent::OnRep_BoltHeldOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.OnRep_BoltHeldOpen");
        
        UGBExternalMagazineComponent_OnRep_BoltHeldOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.GetMagazineClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMagazine*                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBMagazine* UGBExternalMagazineComponent::GetMagazineClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.GetMagazineClass");
        
        UGBExternalMagazineComponent_GetMagazineClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.GetMagazine
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMagazine*                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBMagazine* UGBExternalMagazineComponent::GetMagazine()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.GetMagazine");
        
        UGBExternalMagazineComponent_GetMagazine_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.GetIsFiringFromOpenBolt
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBExternalMagazineComponent::GetIsFiringFromOpenBolt()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.GetIsFiringFromOpenBolt");
        
        UGBExternalMagazineComponent_GetIsFiringFromOpenBolt_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.GetChamberedRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* UGBExternalMagazineComponent::GetChamberedRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.GetChamberedRound");
        
        UGBExternalMagazineComponent_GetChamberedRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.GetBoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBExternalMagazineComponent::GetBoltHeldOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.GetBoltHeldOpen");
        
        UGBExternalMagazineComponent_GetBoltHeldOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExternalMagazineComponent.FindCompatibleMagazine
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBMagazine*                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBMagazine* UGBExternalMagazineComponent::FindCompatibleMagazine(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExternalMagazineComponent.FindCompatibleMagazine");
        
        UGBExternalMagazineComponent_FindCompatibleMagazine_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameTrigger.GetOverlaps
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBCharacter*>    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBCharacter*> AGBGameTrigger::GetOverlaps()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameTrigger.GetOverlaps");
        
        AGBGameTrigger_GetOverlaps_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExtractionPoint.SetSequenceToPlayBeforeExfil
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> InLevelSequenceActor                                       (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBExtractionPoint::SetSequenceToPlayBeforeExfil(BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> InLevelSequenceActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExtractionPoint.SetSequenceToPlayBeforeExfil");
        
        AGBExtractionPoint_SetSequenceToPlayBeforeExfil_Params params {};
        params.InLevelSequenceActor = InLevelSequenceActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExtractionPoint.SetSequenceToPlayAfterExfil
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> InLevelSequenceActor                                       (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBExtractionPoint::SetSequenceToPlayAfterExfil(BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> InLevelSequenceActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExtractionPoint.SetSequenceToPlayAfterExfil");
        
        AGBExtractionPoint_SetSequenceToPlayAfterExfil_Params params {};
        params.InLevelSequenceActor = InLevelSequenceActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExtractionPoint.GetSequenceToPlayBeforeExfil
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBExtractionPoint::GetSequenceToPlayBeforeExfil()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExtractionPoint.GetSequenceToPlayBeforeExfil");
        
        AGBExtractionPoint_GetSequenceToPlayBeforeExfil_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBExtractionPoint.GetSequenceToPlayAfterExfil
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBExtractionPoint::GetSequenceToPlayAfterExfil()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBExtractionPoint.GetSequenceToPlayAfterExfil");
        
        AGBExtractionPoint_GetSequenceToPlayAfterExfil_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.ZeroCurrentSightComp
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   SightComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::ZeroCurrentSightComp(GroundBranch::UGBSightComponent* SightComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.ZeroCurrentSightComp");
        
        AGBFirearm_ZeroCurrentSightComp_Params params {};
        params.SightComp = SightComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.UseRound
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBFirearm::UseRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.UseRound");
        
        AGBFirearm_UseRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.StopFiringSound
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  FirstPersonSoundName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ThirdPersonSoundName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::StopFiringSound(const BasicTypes::FName& FirstPersonSoundName, const BasicTypes::FName& ThirdPersonSoundName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.StopFiringSound");
        
        AGBFirearm_StopFiringSound_Params params {};
        params.FirstPersonSoundName = FirstPersonSoundName;
        params.ThirdPersonSoundName = ThirdPersonSoundName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.SpatialSoundSphereEndOverlap
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::SpatialSoundSphereEndOverlap(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.SpatialSoundSphereEndOverlap");
        
        AGBFirearm_SpatialSoundSphereEndOverlap_Params params {};
        params.OverlappedComponent = OverlappedComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.OtherBodyIndex = OtherBodyIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.SpatialSoundSphereBeginOverlap
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::SpatialSoundSphereBeginOverlap(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const Engine::FHitResult& SweepResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.SpatialSoundSphereBeginOverlap");
        
        AGBFirearm_SpatialSoundSphereBeginOverlap_Params params {};
        params.OverlappedComponent = OverlappedComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.OtherBodyIndex = OtherBodyIndex;
        params.bFromSweep = bFromSweep;
        params.SweepResult = SweepResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.SetupCollisionTraceEndOffset
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBFirearm::SetupCollisionTraceEndOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.SetupCollisionTraceEndOffset");
        
        AGBFirearm_SetupCollisionTraceEndOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.SetFiringModeIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewFiringModeIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::SetFiringModeIndex(uint8_t NewFiringModeIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.SetFiringModeIndex");
        
        AGBFirearm_SetFiringModeIndex_Params params {};
        params.NewFiringModeIndex = NewFiringModeIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.SetFiringModeByString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                FiringModeString                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::SetFiringModeByString(const BasicTypes::FString& FiringModeString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.SetFiringModeByString");
        
        AGBFirearm_SetFiringModeByString_Params params {};
        params.FiringModeString = FiringModeString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.SetCurrentSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   NewSight                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::SetCurrentSight(GroundBranch::UGBSightComponent* NewSight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.SetCurrentSight");
        
        AGBFirearm_SetCurrentSight_Params params {};
        params.NewSight = NewSight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.ServerSetFiringModeIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewFiringMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::ServerSetFiringModeIndex(uint8_t NewFiringMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.ServerSetFiringModeIndex");
        
        AGBFirearm_ServerSetFiringModeIndex_Params params {};
        params.NewFiringMode = NewFiringMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.ServerSetCurrentSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   NewSight                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::ServerSetCurrentSight(GroundBranch::UGBSightComponent* NewSight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.ServerSetCurrentSight");
        
        AGBFirearm_ServerSetCurrentSight_Params params {};
        params.NewSight = NewSight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.PlayNonFiringSound
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  FirstPersonSoundName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ThirdPersonSoundName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::PlayNonFiringSound(const BasicTypes::FName& FirstPersonSoundName, const BasicTypes::FName& ThirdPersonSoundName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.PlayNonFiringSound");
        
        AGBFirearm_PlayNonFiringSound_Params params {};
        params.FirstPersonSoundName = FirstPersonSoundName;
        params.ThirdPersonSoundName = ThirdPersonSoundName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.PlayFiringSound
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  FirstPersonSoundName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ThirdPersonSoundName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTrackPlayingID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::PlayFiringSound(const BasicTypes::FName& FirstPersonSoundName, const BasicTypes::FName& ThirdPersonSoundName, bool bTrackPlayingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.PlayFiringSound");
        
        AGBFirearm_PlayFiringSound_Params params {};
        params.FirstPersonSoundName = FirstPersonSoundName;
        params.ThirdPersonSoundName = ThirdPersonSoundName;
        params.bTrackPlayingID = bTrackPlayingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.OnRep_FiringModeIndex
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBFirearm::OnRep_FiringModeIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.OnRep_FiringModeIndex");
        
        AGBFirearm_OnRep_FiringModeIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.OnRep_CurrentSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   LastActiveSightComponent                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::OnRep_CurrentSight(GroundBranch::UGBSightComponent* LastActiveSightComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.OnRep_CurrentSight");
        
        AGBFirearm_OnRep_CurrentSight_Params params {};
        params.LastActiveSightComponent = LastActiveSightComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.OnEndViewTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::OnEndViewTarget(Engine::APlayerController* PlayerController, GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.OnEndViewTarget");
        
        AGBFirearm_OnEndViewTarget_Params params {};
        params.PlayerController = PlayerController;
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.OnBecomeViewTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::OnBecomeViewTarget(Engine::APlayerController* PlayerController, GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.OnBecomeViewTarget");
        
        AGBFirearm_OnBecomeViewTarget_Params params {};
        params.PlayerController = PlayerController;
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.IsFingerOnTrigger
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBFirearm::IsFingerOnTrigger()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.IsFingerOnTrigger");
        
        AGBFirearm_IsFingerOnTrigger_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.IsEmpty
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBFirearm::IsEmpty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.IsEmpty");
        
        AGBFirearm_IsEmpty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetTracerColourIndexForShot
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBBarrelComponent*                  Barrel                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBFirearm::GetTracerColourIndexForShot(GroundBranch::UGBBarrelComponent* Barrel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetTracerColourIndexForShot");
        
        AGBFirearm_GetTracerColourIndexForShot_Params params {};
        params.Barrel = Barrel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetTotalAvailableCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBFirearm::GetTotalAvailableCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetTotalAvailableCount");
        
        AGBFirearm_GetTotalAvailableCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetSuppressorSwitchValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBFirearm::GetSuppressorSwitchValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetSuppressorSwitchValue");
        
        AGBFirearm_GetSuppressorSwitchValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetRecoilData
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bIsEngaged                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBRecoilData                        ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBRecoilData AGBFirearm::GetRecoilData(bool bIsEngaged)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetRecoilData");
        
        AGBFirearm_GetRecoilData_Params params {};
        params.bIsEngaged = bIsEngaged;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetRateOfFire
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBFirearm::GetRateOfFire()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetRateOfFire");
        
        AGBFirearm_GetRateOfFire_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetNumSightLines
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBFirearm::GetNumSightLines()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetNumSightLines");
        
        AGBFirearm_GetNumSightLines_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetMuzzleOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBFirearm::GetMuzzleOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetMuzzleOffset");
        
        AGBFirearm_GetMuzzleOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetMinSightRelativeX
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBFirearm::GetMinSightRelativeX()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetMinSightRelativeX");
        
        AGBFirearm_GetMinSightRelativeX_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetMaxGripRelativeX
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBFirearm::GetMaxGripRelativeX()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetMaxGripRelativeX");
        
        AGBFirearm_GetMaxGripRelativeX_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetLastTriggerPullTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBFirearm::GetLastTriggerPullTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetLastTriggerPullTime");
        
        AGBFirearm_GetLastTriggerPullTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetInteractComp
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* AGBFirearm::GetInteractComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetInteractComp");
        
        AGBFirearm_GetInteractComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetGunshotComp
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* AGBFirearm::GetGunshotComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetGunshotComp");
        
        AGBFirearm_GetGunshotComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFiringModes
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FFiringModeData>  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FFiringModeData> AGBFirearm::GetFiringModes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFiringModes");
        
        AGBFirearm_GetFiringModes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFiringModeIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBFirearm::GetFiringModeIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFiringModeIndex");
        
        AGBFirearm_GetFiringModeIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFiringModeByString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                FiringModeString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBFirearm::GetFiringModeByString(const BasicTypes::FString& FiringModeString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFiringModeByString");
        
        AGBFirearm_GetFiringModeByString_Params params {};
        params.FiringModeString = FiringModeString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFireModeSwitchValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBFirearm::GetFireModeSwitchValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFireModeSwitchValue");
        
        AGBFirearm_GetFireModeSwitchValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFirearmTransform
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform AGBFirearm::GetFirearmTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFirearmTransform");
        
        AGBFirearm_GetFirearmTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFirearmSoundType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBFirearm::GetFirearmSoundType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFirearmSoundType");
        
        AGBFirearm_GetFirearmSoundType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFirearmForwardVector
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBFirearm::GetFirearmForwardVector()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFirearmForwardVector");
        
        AGBFirearm_GetFirearmForwardVector_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetFirearmAnimInstance
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBFirearmAnimInstance*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBFirearmAnimInstance* AGBFirearm::GetFirearmAnimInstance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetFirearmAnimInstance");
        
        AGBFirearm_GetFirearmAnimInstance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetEmptySlingPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBFirearm::GetEmptySlingPoint(GroundBranch::AGBCharacter* GBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetEmptySlingPoint");
        
        AGBFirearm_GetEmptySlingPoint_Params params {};
        params.GBCharacter = GBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetEmptyHolster
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBHolster*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBHolster* AGBFirearm::GetEmptyHolster(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetEmptyHolster");
        
        AGBFirearm_GetEmptyHolster_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetCurrentSightMagnification
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBFirearm::GetCurrentSightMagnification()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetCurrentSightMagnification");
        
        AGBFirearm_GetCurrentSightMagnification_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetCollisionTraceEndOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBFirearm::GetCollisionTraceEndOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetCollisionTraceEndOffset");
        
        AGBFirearm_GetCollisionTraceEndOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetBurstCount
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBFirearm::GetBurstCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetBurstCount");
        
        AGBFirearm_GetBurstCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.GetBulletProjectileClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBBarrelComponent*                  Barrel                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* AGBFirearm::GetBulletProjectileClass(GroundBranch::UGBBarrelComponent* Barrel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.GetBulletProjectileClass");
        
        AGBFirearm_GetBulletProjectileClass_Params params {};
        params.Barrel = Barrel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.FireShot
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBFirearm::FireShot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.FireShot");
        
        AGBFirearm_FireShot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.ChangeSightLine
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            dir                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBFirearm::ChangeSightLine(int32_t dir)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.ChangeSightLine");
        
        AGBFirearm_ChangeSightLine_Params params {};
        params.dir = dir;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearm.ChangeFiringModeIndex
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            dir                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBFirearm::ChangeFiringModeIndex(int32_t dir)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearm.ChangeFiringModeIndex");
        
        AGBFirearm_ChangeFiringModeIndex_Params params {};
        params.dir = dir;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearmAnimInstance.OnSetFrontSightPostHeightOffset
     *         Flags  -> ()
     * Parameters:
     *         float                                              FrontSightPostHeightOffset                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFirearmAnimInstance::OnSetFrontSightPostHeightOffset(float FrontSightPostHeightOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearmAnimInstance.OnSetFrontSightPostHeightOffset");
        
        UGBFirearmAnimInstance_OnSetFrontSightPostHeightOffset_Params params {};
        params.FrontSightPostHeightOffset = FrontSightPostHeightOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearmAnimInstance.OnIronSightZeroing
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ZeroRelativeToSight                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SightLocationOffset                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              SightRotationOffset                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFirearmAnimInstance::OnIronSightZeroing(const CoreUObject::FVector& ZeroRelativeToSight, const CoreUObject::FVector& SightLocationOffset, const CoreUObject::FRotator& SightRotationOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearmAnimInstance.OnIronSightZeroing");
        
        UGBFirearmAnimInstance_OnIronSightZeroing_Params params {};
        params.ZeroRelativeToSight = ZeroRelativeToSight;
        params.SightLocationOffset = SightLocationOffset;
        params.SightRotationOffset = SightRotationOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearmAnimInstance.OnFiringModeIndexChanged
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            FiringModeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFirearmAnimInstance::OnFiringModeIndexChanged(uint8_t FiringModeIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearmAnimInstance.OnFiringModeIndexChanged");
        
        UGBFirearmAnimInstance_OnFiringModeIndexChanged_Params params {};
        params.FiringModeIndex = FiringModeIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearmAnimInstance.OnBoltHeldOpenUpdated
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAmmunitionFeedComponent*          AmmunitionFeedComp                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFirearmAnimInstance::OnBoltHeldOpenUpdated(GroundBranch::UGBAmmunitionFeedComponent* AmmunitionFeedComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearmAnimInstance.OnBoltHeldOpenUpdated");
        
        UGBFirearmAnimInstance_OnBoltHeldOpenUpdated_Params params {};
        params.AmmunitionFeedComp = AmmunitionFeedComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFirearmAnimInstance.IsLocal
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFirearmAnimInstance::IsLocal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFirearmAnimInstance.IsLocal");
        
        UGBFirearmAnimInstance_IsLocal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemCameraModifier.SetAssociatedItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBItemCameraModifier::SetAssociatedItem(GroundBranch::AGBInvItem* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemCameraModifier.SetAssociatedItem");
        
        UGBItemCameraModifier_SetAssociatedItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemCameraModifier.OnAssociatedItemDestroyed
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBItemCameraModifier::OnAssociatedItemDestroyed(Engine::AActor* DestroyedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemCameraModifier.OnAssociatedItemDestroyed");
        
        UGBItemCameraModifier_OnAssociatedItemDestroyed_Params params {};
        params.DestroyedActor = DestroyedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemCameraModifier.GetAssociatedItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBItemCameraModifier::GetAssociatedItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemCameraModifier.GetAssociatedItem");
        
        UGBItemCameraModifier_GetAssociatedItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFoliageBlastComponent.TriggerBlast
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBFoliageBlastComponent::TriggerBlast()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFoliageBlastComponent.TriggerBlast");
        
        UGBFoliageBlastComponent_TriggerBlast_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFoliageBlastComponent.ResetFoliage
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBFoliageBlastComponent::ResetFoliage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFoliageBlastComponent.ResetFoliage");
        
        UGBFoliageBlastComponent_ResetFoliage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFoliageBlastComponent.InitializeBlast
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              BlastExtent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MinFoliageMeshSize                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              BlastStrength                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OscillationFrequency                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxAngularPerturbation                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MinPerturbationDecayTime                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxPerturbationDecayTime                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFoliageBlastComponent::InitializeBlast(CoreUObject::UObject* WorldContextObject, float BlastExtent, float MinFoliageMeshSize, float BlastStrength, float OscillationFrequency, float MaxAngularPerturbation, float MinPerturbationDecayTime, float MaxPerturbationDecayTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFoliageBlastComponent.InitializeBlast");
        
        UGBFoliageBlastComponent_InitializeBlast_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.BlastExtent = BlastExtent;
        params.MinFoliageMeshSize = MinFoliageMeshSize;
        params.BlastStrength = BlastStrength;
        params.OscillationFrequency = OscillationFrequency;
        params.MaxAngularPerturbation = MaxAngularPerturbation;
        params.MinPerturbationDecayTime = MinPerturbationDecayTime;
        params.MaxPerturbationDecayTime = MaxPerturbationDecayTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.SpawnBulletProjectile
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 BulletProjectileClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* UGBBarrelComponent::SpawnBulletProjectile(GroundBranch::AGBBulletProjectile* BulletProjectileClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.SpawnBulletProjectile");
        
        UGBBarrelComponent_SpawnBulletProjectile_Params params {};
        params.BulletProjectileClass = BulletProjectileClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.SetVelocityModifier
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewVelocityModifier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBBarrelComponent::SetVelocityModifier(float NewVelocityModifier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.SetVelocityModifier");
        
        UGBBarrelComponent_SetVelocityModifier_Params params {};
        params.NewVelocityModifier = NewVelocityModifier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.SetMuzzleDevice
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMuzzleDevice*                     NewMuzzleDevice                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBBarrelComponent::SetMuzzleDevice(GroundBranch::AGBMuzzleDevice* NewMuzzleDevice)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.SetMuzzleDevice");
        
        UGBBarrelComponent_SetMuzzleDevice_Params params {};
        params.NewMuzzleDevice = NewMuzzleDevice;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.GetVelocityModifier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBBarrelComponent::GetVelocityModifier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.GetVelocityModifier");
        
        UGBBarrelComponent_GetVelocityModifier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.GetSuppressorSwitchValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBBarrelComponent::GetSuppressorSwitchValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.GetSuppressorSwitchValue");
        
        UGBBarrelComponent_GetSuppressorSwitchValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.GetMuzzleDevice
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMuzzleDevice*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBMuzzleDevice* UGBBarrelComponent::GetMuzzleDevice()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.GetMuzzleDevice");
        
        UGBBarrelComponent_GetMuzzleDevice_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBarrelComponent.GetAudioSignalRadius
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBBarrelComponent::GetAudioSignalRadius()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBarrelComponent.GetAudioSignalRadius");
        
        UGBBarrelComponent_GetAudioSignalRadius_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.StartBenchmarkPostWarmup
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::StartBenchmarkPostWarmup()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.StartBenchmarkPostWarmup");
        
        AGBBenchmarker_StartBenchmarkPostWarmup_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.ReturnToMenu
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::ReturnToMenu()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.ReturnToMenu");
        
        AGBBenchmarker_ReturnToMenu_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.RemoveBenchmarkWidgets
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::RemoveBenchmarkWidgets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.RemoveBenchmarkWidgets");
        
        AGBBenchmarker_RemoveBenchmarkWidgets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.PostFinishBenchmarkSource
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::PostFinishBenchmarkSource()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.PostFinishBenchmarkSource");
        
        AGBBenchmarker_PostFinishBenchmarkSource_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.OpenLevelSequence
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::OpenLevelSequence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.OpenLevelSequence");
        
        AGBBenchmarker_OpenLevelSequence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.OpenHTMLFile
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::OpenHTMLFile()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.OpenHTMLFile");
        
        AGBBenchmarker_OpenHTMLFile_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.OpenBenchmarksDirectory
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::OpenBenchmarksDirectory()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.OpenBenchmarksDirectory");
        
        AGBBenchmarker_OpenBenchmarksDirectory_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.IsBenchmarkPreparing
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBBenchmarker::IsBenchmarkPreparing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.IsBenchmarkPreparing");
        
        AGBBenchmarker_IsBenchmarkPreparing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.IsBenchmarking
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBBenchmarker::IsBenchmarking()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.IsBenchmarking");
        
        AGBBenchmarker_IsBenchmarking_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.HotspotPostWarmup
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::HotspotPostWarmup()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.HotspotPostWarmup");
        
        AGBBenchmarker_HotspotPostWarmup_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.GetTemplatesFolder
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBBenchmarker::GetTemplatesFolder()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.GetTemplatesFolder");
        
        AGBBenchmarker_GetTemplatesFolder_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.GetDirectory
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBBenchmarker::GetDirectory()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.GetDirectory");
        
        AGBBenchmarker_GetDirectory_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.FinishBenchmarkSource
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::FinishBenchmarkSource()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.FinishBenchmarkSource");
        
        AGBBenchmarker_FinishBenchmarkSource_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.FadeOut
     *         Flags  -> ()
     * Parameters:
     *         float                                              FadeTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::FadeOut(float FadeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.FadeOut");
        
        AGBBenchmarker_FadeOut_Params params {};
        params.FadeTime = FadeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.FadeInAndOut
     *         Flags  -> ()
     * Parameters:
     *         float                                              FadeTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::FadeInAndOut(float FadeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.FadeInAndOut");
        
        AGBBenchmarker_FadeInAndOut_Params params {};
        params.FadeTime = FadeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.FadeIn
     *         Flags  -> ()
     * Parameters:
     *         float                                              FadeTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::FadeIn(float FadeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.FadeIn");
        
        AGBBenchmarker_FadeIn_Params params {};
        params.FadeTime = FadeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.CreateBenchmarkSequenceWidget
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::CreateBenchmarkSequenceWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.CreateBenchmarkSequenceWidget");
        
        AGBBenchmarker_CreateBenchmarkSequenceWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBenchmarker.CreateBenchmarkReportWidget
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBBenchmarker::CreateBenchmarkReportWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBenchmarker.CreateBenchmarkReportWidget");
        
        AGBBenchmarker_CreateBenchmarkReportWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.UnmuteAudio
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameUserSettings::UnmuteAudio()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.UnmuteAudio");
        
        UGBGameUserSettings_UnmuteAudio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.SetUnfocusedVolumeMultiplier
     *         Flags  -> ()
     * Parameters:
     *         float                                              InVolumeMultiplier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameUserSettings::SetUnfocusedVolumeMultiplier(float InVolumeMultiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.SetUnfocusedVolumeMultiplier");
        
        UGBGameUserSettings_SetUnfocusedVolumeMultiplier_Params params {};
        params.InVolumeMultiplier = InVolumeMultiplier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.SetAudioVolume
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InVolume                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameUserSettings::SetAudioVolume(const BasicTypes::FName& InName, float InVolume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.SetAudioVolume");
        
        UGBGameUserSettings_SetAudioVolume_Params params {};
        params.InName = InName;
        params.InVolume = InVolume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.MuteAudio
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ExcludedAudioVolumeNames                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameUserSettings::MuteAudio(BasicTypes::TArray<BasicTypes::FName> ExcludedAudioVolumeNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.MuteAudio");
        
        UGBGameUserSettings_MuteAudio_Params params {};
        params.ExcludedAudioVolumeNames = ExcludedAudioVolumeNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.IsMuted
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  AudioVolumeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameUserSettings::IsMuted(const BasicTypes::FName& AudioVolumeName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.IsMuted");
        
        UGBGameUserSettings_IsMuted_Params params {};
        params.AudioVolumeName = AudioVolumeName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.GetUnfocusedVolumeMultiplier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBGameUserSettings::GetUnfocusedVolumeMultiplier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.GetUnfocusedVolumeMultiplier");
        
        UGBGameUserSettings_GetUnfocusedVolumeMultiplier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.GetQualityLevelCVarSettingsFromIni
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                QualitySection                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            QualityLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutCVarKeys                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutCVarValues                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameUserSettings::GetQualityLevelCVarSettingsFromIni(const BasicTypes::FString& QualitySection, int32_t QualityLevel, BasicTypes::TArray<BasicTypes::FString>* OutCVarKeys, BasicTypes::TArray<BasicTypes::FString>* OutCVarValues)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.GetQualityLevelCVarSettingsFromIni");
        
        UGBGameUserSettings_GetQualityLevelCVarSettingsFromIni_Params params {};
        params.QualitySection = QualitySection;
        params.QualityLevel = QualityLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutCVarKeys != nullptr)
            *OutCVarKeys = params.OutCVarKeys;
        if (OutCVarValues != nullptr)
            *OutCVarValues = params.OutCVarValues;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.GetGBGameUserSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBGameUserSettings*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBGameUserSettings* UGBGameUserSettings::GetGBGameUserSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.GetGBGameUserSettings");
        
        UGBGameUserSettings_GetGBGameUserSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.GetAudioVolume
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBGameUserSettings::GetAudioVolume(const BasicTypes::FName& InName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.GetAudioVolume");
        
        UGBGameUserSettings_GetAudioVolume_Params params {};
        params.InName = InName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameUserSettings.AreQualityLevelsDirty
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameUserSettings::AreQualityLevelsDirty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameUserSettings.AreQualityLevelsDirty");
        
        UGBGameUserSettings_AreQualityLevelsDirty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIPatrolRoute.GetRecentlyUsedPatrolRoutes
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBAIPatrolRoute*> ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBAIPatrolRoute*> AGBAIPatrolRoute::GetRecentlyUsedPatrolRoutes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIPatrolRoute.GetRecentlyUsedPatrolRoutes");
        
        AGBAIPatrolRoute_GetRecentlyUsedPatrolRoutes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIPatrolRoute.GetNumberOfLinkedPatrolRoutes
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBAIPatrolRoute::GetNumberOfLinkedPatrolRoutes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIPatrolRoute.GetNumberOfLinkedPatrolRoutes");
        
        AGBAIPatrolRoute_GetNumberOfLinkedPatrolRoutes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIPatrolRoute.GetLinkedPatrolRoutes
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBAIPatrolRoute*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBAIPatrolRoute*> AGBAIPatrolRoute::GetLinkedPatrolRoutes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIPatrolRoute.GetLinkedPatrolRoutes");
        
        AGBAIPatrolRoute_GetLinkedPatrolRoutes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIPatrolRoute.GenerateLinkedPatrolRoutes
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAIPatrolRoute::GenerateLinkedPatrolRoutes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIPatrolRoute.GenerateLinkedPatrolRoutes");
        
        AGBAIPatrolRoute_GenerateLinkedPatrolRoutes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAIPatrolRoute.AddRecentlyUsedPatrolRoute
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAIPatrolRoute*                    PatrolRoute                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAIPatrolRoute::AddRecentlyUsedPatrolRoute(GroundBranch::AGBAIPatrolRoute* PatrolRoute)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAIPatrolRoute.AddRecentlyUsedPatrolRoute");
        
        AGBAIPatrolRoute_AddRecentlyUsedPatrolRoute_Params params {};
        params.PatrolRoute = PatrolRoute;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISense_Hearing.UnregisterNonAIListener
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    RegisteredActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAISense_Hearing::UnregisterNonAIListener(Engine::AActor* RegisteredActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISense_Hearing.UnregisterNonAIListener");
        
        UGBAISense_Hearing_UnregisterNonAIListener_Params params {};
        params.RegisteredActor = RegisteredActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISense_Hearing.ReportNoiseEventDistance
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NoiseLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AudioSignalRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Instigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAISense_Hearing::ReportNoiseEventDistance(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& NoiseLocation, float AudioSignalRadius, Engine::AActor* Instigator, const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISense_Hearing.ReportNoiseEventDistance");
        
        UGBAISense_Hearing_ReportNoiseEventDistance_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.NoiseLocation = NoiseLocation;
        params.AudioSignalRadius = AudioSignalRadius;
        params.Instigator = Instigator;
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISense_Hearing.ReportNoiseEvent
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NoiseLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Loudness                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Instigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAISense_Hearing::ReportNoiseEvent(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& NoiseLocation, float Loudness, Engine::AActor* Instigator, const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISense_Hearing.ReportNoiseEvent");
        
        UGBAISense_Hearing_ReportNoiseEvent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.NoiseLocation = NoiseLocation;
        params.Loudness = Loudness;
        params.Instigator = Instigator;
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISense_Hearing.RegisterNonAIListener
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    RegisteredActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnNonAIListenerAlert                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              ThresholdSoundIntensity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              RetriggerDelay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAISense_Hearing::RegisterNonAIListener(Engine::AActor* RegisteredActor, const BasicTypes::UScriptDelegate& OnNonAIListenerAlert, float ThresholdSoundIntensity, float RetriggerDelay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISense_Hearing.RegisterNonAIListener");
        
        UGBAISense_Hearing_RegisterNonAIListener_Params params {};
        params.RegisteredActor = RegisteredActor;
        params.OnNonAIListenerAlert = OnNonAIListenerAlert;
        params.ThresholdSoundIntensity = ThresholdSoundIntensity;
        params.RetriggerDelay = RetriggerDelay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISense_Sight.ReportSightEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Observer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    SeenActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               EventLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAISense_Sight::ReportSightEvent(Engine::AActor* Observer, Engine::AActor* SeenActor, const CoreUObject::FVector& EventLocation, const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISense_Sight.ReportSightEvent");
        
        UGBAISense_Sight_ReportSightEvent_Params params {};
        params.Observer = Observer;
        params.SeenActor = SeenActor;
        params.EventLocation = EventLocation;
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBBulletItem.GetBulletProjectileClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* AGBBulletItem::GetBulletProjectileClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBBulletItem.GetBulletProjectileClass");
        
        AGBBulletItem_GetBulletProjectileClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerControllerBase.RemoveFullScreenWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  FullScreenWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerControllerBase::RemoveFullScreenWidget(UMG::UUserWidget* FullScreenWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerControllerBase.RemoveFullScreenWidget");
        
        AGBPlayerControllerBase_RemoveFullScreenWidget_Params params {};
        params.FullScreenWidget = FullScreenWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerControllerBase.ListFullScreenWidgets
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerControllerBase::ListFullScreenWidgets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerControllerBase.ListFullScreenWidgets");
        
        AGBPlayerControllerBase_ListFullScreenWidgets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerControllerBase.GetPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBPlayerSettings* AGBPlayerControllerBase::GetPlayerSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerControllerBase.GetPlayerSettings");
        
        AGBPlayerControllerBase_GetPlayerSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerControllerBase.GBClientSeamlessTravel
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                URL                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerControllerBase::GBClientSeamlessTravel(const BasicTypes::FString& URL)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerControllerBase.GBClientSeamlessTravel");
        
        AGBPlayerControllerBase_GBClientSeamlessTravel_Params params {};
        params.URL = URL;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerControllerBase.ApplyPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   PlayerSettings                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerControllerBase::ApplyPlayerSettings(GroundBranch::UGBPlayerSettings* PlayerSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerControllerBase.ApplyPlayerSettings");
        
        AGBPlayerControllerBase_ApplyPlayerSettings_Params params {};
        params.PlayerSettings = PlayerSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerControllerBase.AddFullScreenWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  FullScreenWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerControllerBase::AddFullScreenWidget(UMG::UUserWidget* FullScreenWidget, int32_t Priority)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerControllerBase.AddFullScreenWidget");
        
        AGBPlayerControllerBase_AddFullScreenWidget_Params params {};
        params.FullScreenWidget = FullScreenWidget;
        params.Priority = Priority;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Vote
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Vote(const BasicTypes::FString& Parameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Vote");
        
        AGBPlayerController_Vote_Params params {};
        params.Parameters = Parameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.UseActorWithParams
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMustSucceed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::UseActorWithParams(Engine::AActor* UseTarget, const BasicTypes::FName& UseType, const BasicTypes::FString& Params, bool bMustSucceed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.UseActorWithParams");
        
        AGBPlayerController_UseActorWithParams_Params params {};
        params.UseTarget = UseTarget;
        params.UseType = UseType;
        params.Params = Params;
        params.bMustSucceed = bMustSucceed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.UseActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMustSucceed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::UseActor(Engine::AActor* UseTarget, const BasicTypes::FName& UseType, bool bMustSucceed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.UseActor");
        
        AGBPlayerController_UseActor_Params params {};
        params.UseTarget = UseTarget;
        params.UseType = UseType;
        params.bMustSucceed = bMustSucceed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.UpdateMovementMaterialCollection
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              DeltaRot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::UpdateMovementMaterialCollection(const CoreUObject::FRotator& DeltaRot, float DeltaTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.UpdateMovementMaterialCollection");
        
        AGBPlayerController_UpdateMovementMaterialCollection_Params params {};
        params.DeltaRot = DeltaRot;
        params.DeltaTime = DeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.UnMuteAll
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::UnMuteAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.UnMuteAll");
        
        AGBPlayerController_UnMuteAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.UnMute
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              TargetPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::UnMute(Engine::APlayerState* TargetPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.UnMute");
        
        AGBPlayerController_UnMute_Params params {};
        params.TargetPlayerState = TargetPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.TriggerSequencePlayback
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> LevelSequenceActor                                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsCutscene                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCanAbort                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bHidePlayers                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bBlackoutAfter                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::TriggerSequencePlayback(BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> LevelSequenceActor, bool bIsCutscene, bool bCanAbort, bool bHidePlayers, bool bBlackoutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.TriggerSequencePlayback");
        
        AGBPlayerController_TriggerSequencePlayback_Params params {};
        params.LevelSequenceActor = LevelSequenceActor;
        params.bIsCutscene = bIsCutscene;
        params.bCanAbort = bCanAbort;
        params.bHidePlayers = bHidePlayers;
        params.bBlackoutAfter = bBlackoutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ToggleInGameMenu
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ToggleInGameMenu()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ToggleInGameMenu");
        
        AGBPlayerController_ToggleInGameMenu_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.TeamChat
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::TeamChat()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.TeamChat");
        
        AGBPlayerController_TeamChat_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SpectatorIsFollowing
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::SpectatorIsFollowing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SpectatorIsFollowing");
        
        AGBPlayerController_SpectatorIsFollowing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Spectate
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Spectate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Spectate");
        
        AGBPlayerController_Spectate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ShowUsagePrompts
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::ShowUsagePrompts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ShowUsagePrompts");
        
        AGBPlayerController_ShowUsagePrompts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ShowTransitionScreenEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  TransitionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ShowTransitionScreenEvent(const BasicTypes::FName& TransitionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ShowTransitionScreenEvent");
        
        AGBPlayerController_ShowTransitionScreenEvent_Params params {};
        params.TransitionType = TransitionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ShowTransitionScreen
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  TransitionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ShowTransitionScreen(const BasicTypes::FName& TransitionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ShowTransitionScreen");
        
        AGBPlayerController_ShowTransitionScreen_Params params {};
        params.TransitionType = TransitionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ShowAdminMenuEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ShowAdminMenuEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ShowAdminMenuEvent");
        
        AGBPlayerController_ShowAdminMenuEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetViewRotation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              NewRotation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetViewRotation(const CoreUObject::FRotator& NewRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetViewRotation");
        
        AGBPlayerController_SetViewRotation_Params params {};
        params.NewRotation = NewRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetTeamElement
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ETeamElement                         NewTeamElement                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetTeamElement(GroundBranch::ETeamElement NewTeamElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetTeamElement");
        
        AGBPlayerController_SetTeamElement_Params params {};
        params.NewTeamElement = NewTeamElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetTargetInputSensitivityScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewScale                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetTargetInputSensitivityScale(float NewScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetTargetInputSensitivityScale");
        
        AGBPlayerController_SetTargetInputSensitivityScale_Params params {};
        params.NewScale = NewScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetSpectatorNightVisionMode
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewNightVisionMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetSpectatorNightVisionMode(const BasicTypes::FName& NewNightVisionMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetSpectatorNightVisionMode");
        
        AGBPlayerController_SetSpectatorNightVisionMode_Params params {};
        params.NewNightVisionMode = NewNightVisionMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EReadyStatus                         NewReadyStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetReadyStatus(GroundBranch::EReadyStatus NewReadyStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetReadyStatus");
        
        AGBPlayerController_SetReadyStatus_Params params {};
        params.NewReadyStatus = NewReadyStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetMPCGlobalDecayRate
     *         Flags  -> ()
     * Parameters:
     *         float                                              GlobalDecayRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetMPCGlobalDecayRate(float GlobalDecayRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetMPCGlobalDecayRate");
        
        AGBPlayerController_SetMPCGlobalDecayRate_Params params {};
        params.GlobalDecayRate = GlobalDecayRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetLoadout
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetLoadout(const BasicTypes::FName& LoadoutName, VaRest::UVaRestJsonObject* KitJsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetLoadout");
        
        AGBPlayerController_SetLoadout_Params params {};
        params.LoadoutName = LoadoutName;
        params.KitJsonObj = KitJsonObj;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetLastDesiredOffTargetAlphaValue
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewLastDesiredOffTargetAlphaValue                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetLastDesiredOffTargetAlphaValue(float NewLastDesiredOffTargetAlphaValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetLastDesiredOffTargetAlphaValue");
        
        AGBPlayerController_SetLastDesiredOffTargetAlphaValue_Params params {};
        params.NewLastDesiredOffTargetAlphaValue = NewLastDesiredOffTargetAlphaValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetIsEditingMission
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewIsEditingMission                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetIsEditingMission(bool bNewIsEditingMission)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetIsEditingMission");
        
        AGBPlayerController_SetIsEditingMission_Params params {};
        params.bNewIsEditingMission = bNewIsEditingMission;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInsertionPoint*                   NewInsertionPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetInsertionPoint(GroundBranch::AGBInsertionPoint* NewInsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetInsertionPoint");
        
        AGBPlayerController_SetInsertionPoint_Params params {};
        params.NewInsertionPoint = NewInsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SetCustomiseOperatorCheat
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SetCustomiseOperatorCheat(bool bEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SetCustomiseOperatorCheat");
        
        AGBPlayerController_SetCustomiseOperatorCheat_Params params {};
        params.bEnabled = bEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerVote
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerVote(const BasicTypes::FString& Parameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerVote");
        
        AGBPlayerController_ServerVote_Params params {};
        params.Parameters = Parameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerUseActorWithParams
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMustSucceed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerUseActorWithParams(Engine::AActor* UseTarget, const BasicTypes::FName& UseType, const BasicTypes::FString& Params, bool bMustSucceed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerUseActorWithParams");
        
        AGBPlayerController_ServerUseActorWithParams_Params params {};
        params.UseTarget = UseTarget;
        params.UseType = UseType;
        params.Params = Params;
        params.bMustSucceed = bMustSucceed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerUseActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMustSucceed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerUseActor(Engine::AActor* UseTarget, const BasicTypes::FName& UseType, bool bMustSucceed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerUseActor");
        
        AGBPlayerController_ServerUseActor_Params params {};
        params.UseTarget = UseTarget;
        params.UseType = UseType;
        params.bMustSucceed = bMustSucceed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSpectate
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSpectate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSpectate");
        
        AGBPlayerController_ServerSpectate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSetTeamElement
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ETeamElement                         NewTeamElement                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSetTeamElement(GroundBranch::ETeamElement NewTeamElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSetTeamElement");
        
        AGBPlayerController_ServerSetTeamElement_Params params {};
        params.NewTeamElement = NewTeamElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSetReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EReadyStatus                         NewReadyStatus                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSetReadyStatus(GroundBranch::EReadyStatus NewReadyStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSetReadyStatus");
        
        AGBPlayerController_ServerSetReadyStatus_Params params {};
        params.NewReadyStatus = NewReadyStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSetInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInsertionPoint*                   NewInsertionPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSetInsertionPoint(GroundBranch::AGBInsertionPoint* NewInsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSetInsertionPoint");
        
        AGBPlayerController_ServerSetInsertionPoint_Params params {};
        params.NewInsertionPoint = NewInsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSetCustomiseOperatorCheat
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSetCustomiseOperatorCheat(bool bEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSetCustomiseOperatorCheat");
        
        AGBPlayerController_ServerSetCustomiseOperatorCheat_Params params {};
        params.bEnabled = bEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSetCharVoiceDataId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       CharVoiceDataId                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSetCharVoiceDataId(const CoreUObject::FPrimaryAssetId& CharVoiceDataId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSetCharVoiceDataId");
        
        AGBPlayerController_ServerSetCharVoiceDataId_Params params {};
        params.CharVoiceDataId = CharVoiceDataId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSetCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewCallSign                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bNewUseElementCallSign                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSetCallSign(const BasicTypes::FString& NewCallSign, bool bNewUseElementCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSetCallSign");
        
        AGBPlayerController_ServerSetCallSign_Params params {};
        params.NewCallSign = NewCallSign;
        params.bNewUseElementCallSign = bNewUseElementCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSendAFKReponse
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSendAFKReponse()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSendAFKReponse");
        
        AGBPlayerController_ServerSendAFKReponse_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSayTeam
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSayTeam(const BasicTypes::FString& Msg)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSayTeam");
        
        AGBPlayerController_ServerSayTeam_Params params {};
        params.Msg = Msg;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerSay
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerSay(const BasicTypes::FString& Msg)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerSay");
        
        AGBPlayerController_ServerSay_Params params {};
        params.Msg = Msg;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerReport
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerReport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerReport");
        
        AGBPlayerController_ServerReport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerReapplyCharLoadout
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerReapplyCharLoadout()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerReapplyCharLoadout");
        
        AGBPlayerController_ServerReapplyCharLoadout_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerPlayVoice
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Key                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerPlayVoice(const BasicTypes::FName& Key, bool bIsRadioMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerPlayVoice");
        
        AGBPlayerController_ServerPlayVoice_Params params {};
        params.Key = Key;
        params.bIsRadioMessage = bIsRadioMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerPlaySequence
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> SequenceRef                                                (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsCutscene                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCanAbort                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bResetActors                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bHidePlayers                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bBlackoutAfter                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerPlaySequence(BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> SequenceRef, bool bIsCutscene, bool bCanAbort, bool bResetActors, bool bHidePlayers, bool bBlackoutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerPlaySequence");
        
        AGBPlayerController_ServerPlaySequence_Params params {};
        params.SequenceRef = SequenceRef;
        params.bIsCutscene = bIsCutscene;
        params.bCanAbort = bCanAbort;
        params.bResetActors = bResetActors;
        params.bHidePlayers = bHidePlayers;
        params.bBlackoutAfter = bBlackoutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerPlayerGameModeRequest
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Request                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerPlayerGameModeRequest(const BasicTypes::FString& Request)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerPlayerGameModeRequest");
        
        AGBPlayerController_ServerPlayerGameModeRequest_Params params {};
        params.Request = Request;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerPlayEmote
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       CharEmoteId                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerPlayEmote(const CoreUObject::FPrimaryAssetId& CharEmoteId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerPlayEmote");
        
        AGBPlayerController_ServerPlayEmote_Params params {};
        params.CharEmoteId = CharEmoteId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerOptOut
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerOptOut()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerOptOut");
        
        AGBPlayerController_ServerOptOut_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerInitialSync
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerInitialSync()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerInitialSync");
        
        AGBPlayerController_ServerInitialSync_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerForgive
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerForgive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerForgive");
        
        AGBPlayerController_ServerForgive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerFinishTeleport
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerFinishTeleport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerFinishTeleport");
        
        AGBPlayerController_ServerFinishTeleport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerEnterReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerEnterReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerEnterReadyRoom");
        
        AGBPlayerController_ServerEnterReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerEnterPlayArea
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerEnterPlayArea()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerEnterPlayArea");
        
        AGBPlayerController_ServerEnterPlayArea_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerCreateLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBReplicatedString                  ReplicatedLoadout                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerCreateLoadoutInfo(const GroundBranch::FGBReplicatedString& ReplicatedLoadout)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerCreateLoadoutInfo");
        
        AGBPlayerController_ServerCreateLoadoutInfo_Params params {};
        params.ReplicatedLoadout = ReplicatedLoadout;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerConfirmBulletCharacterImpact
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBOrganDamageEvent                  OrganDamageEvent                                           (ConstParm, Parm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerConfirmBulletCharacterImpact(GroundBranch::AGBCharacter* HitCharacter, const GroundBranch::FGBOrganDamageEvent& OrganDamageEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerConfirmBulletCharacterImpact");
        
        AGBPlayerController_ServerConfirmBulletCharacterImpact_Params params {};
        params.HitCharacter = HitCharacter;
        params.OrganDamageEvent = OrganDamageEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerCheat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerCheat(const BasicTypes::FString& Msg)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerCheat");
        
        AGBPlayerController_ServerCheat_Params params {};
        params.Msg = Msg;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerAdminSet
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         RBZooKeeper::FZKReplicatedContent                  Content                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerAdminSet(const BasicTypes::FString& Params, const RBZooKeeper::FZKReplicatedContent& Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerAdminSet");
        
        AGBPlayerController_ServerAdminSet_Params params {};
        params.Params = Params;
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerAdminRequest
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RequestType                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerAdminRequest(const BasicTypes::FName& RequestType, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerAdminRequest");
        
        AGBPlayerController_ServerAdminRequest_Params params {};
        params.RequestType = RequestType;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ServerAdmin
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ServerAdmin(const BasicTypes::FString& Parameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ServerAdmin");
        
        AGBPlayerController_ServerAdmin_Params params {};
        params.Parameters = Parameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Server_CustomTraceBookmark
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Server_CustomTraceBookmark()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Server_CustomTraceBookmark");
        
        AGBPlayerController_Server_CustomTraceBookmark_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.SayTeam
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::SayTeam(const BasicTypes::FString& Msg)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.SayTeam");
        
        AGBPlayerController_SayTeam_Params params {};
        params.Msg = Msg;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Say
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Say(const BasicTypes::FString& Msg)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Say");
        
        AGBPlayerController_Say_Params params {};
        params.Msg = Msg;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.RestartPlayer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::RestartPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.RestartPlayer");
        
        AGBPlayerController_RestartPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ResetFOV
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ResetFOV()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ResetFOV");
        
        AGBPlayerController_ResetFOV_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Report
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Report()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Report");
        
        AGBPlayerController_Report_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.RemoveOverrideInputWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  UserWidget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::RemoveOverrideInputWidget(UMG::UUserWidget* UserWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.RemoveOverrideInputWidget");
        
        AGBPlayerController_RemoveOverrideInputWidget_Params params {};
        params.UserWidget = UserWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.RemoveLocalPlayerTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LocalPlayerTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::RemoveLocalPlayerTag(const BasicTypes::FName& LocalPlayerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.RemoveLocalPlayerTag");
        
        AGBPlayerController_RemoveLocalPlayerTag_Params params {};
        params.LocalPlayerTag = LocalPlayerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.RemoveBlackOutEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bFadeOut                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::RemoveBlackOutEvent(bool bFadeOut)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.RemoveBlackOutEvent");
        
        AGBPlayerController_RemoveBlackOutEvent_Params params {};
        params.bFadeOut = bFadeOut;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ReInitLoadouts
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ReInitLoadouts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ReInitLoadouts");
        
        AGBPlayerController_ReInitLoadouts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ReapplyCharLoadout
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ReapplyCharLoadout()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ReapplyCharLoadout");
        
        AGBPlayerController_ReapplyCharLoadout_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ReadyRoom");
        
        AGBPlayerController_ReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.PlayVoice
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::PlayVoice(const BasicTypes::FName& Key, bool bIsRadioMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.PlayVoice");
        
        AGBPlayerController_PlayVoice_Params params {};
        params.Key = Key;
        params.bIsRadioMessage = bIsRadioMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.PlayerGameModeRequest
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Request                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::PlayerGameModeRequest(const BasicTypes::FString& Request)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.PlayerGameModeRequest");
        
        AGBPlayerController_PlayerGameModeRequest_Params params {};
        params.Request = Request;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.PlayEmote
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                CharEmoteString                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::PlayEmote(const BasicTypes::FString& CharEmoteString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.PlayEmote");
        
        AGBPlayerController_PlayEmote_Params params {};
        params.CharEmoteString = CharEmoteString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OptOut
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OptOut()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OptOut");
        
        AGBPlayerController_OptOut_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OpenMissionEditorEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OpenMissionEditorEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OpenMissionEditorEvent");
        
        AGBPlayerController_OpenMissionEditorEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnShowWorldPromptEvent
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               PromptLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnShowWorldPromptEvent(const CoreUObject::FVector& PromptLocation, const BasicTypes::FName& Tag, float Duration, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnShowWorldPromptEvent");
        
        AGBPlayerController_OnShowWorldPromptEvent_Params params {};
        params.PromptLocation = PromptLocation;
        params.Tag = Tag;
        params.Duration = Duration;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnSequenceStopped
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnSequenceStopped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnSequenceStopped");
        
        AGBPlayerController_OnSequenceStopped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnRestartPlayerEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnRestartPlayerEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnRestartPlayerEvent");
        
        AGBPlayerController_OnRestartPlayerEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnPreSeamlessTravelEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnPreSeamlessTravelEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnPreSeamlessTravelEvent");
        
        AGBPlayerController_OnPreSeamlessTravelEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnPlayerLoadoutsUpdated
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBGameState*                        GBGameState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnPlayerLoadoutsUpdated(GroundBranch::AGBGameState* GBGameState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnPlayerLoadoutsUpdated");
        
        AGBPlayerController_OnPlayerLoadoutsUpdated_Params params {};
        params.GBGameState = GBGameState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnMissionObjectiveStatusUpdateEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMissionObjectiveStatusUpdateType  StatusUpdateType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FloatParam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnMissionObjectiveStatusUpdateEvent(GroundBranch::EGBMissionObjectiveStatusUpdateType StatusUpdateType, GroundBranch::AGBMissionObjective* MissionObjective, float FloatParam)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnMissionObjectiveStatusUpdateEvent");
        
        AGBPlayerController_OnMissionObjectiveStatusUpdateEvent_Params params {};
        params.StatusUpdateType = StatusUpdateType;
        params.MissionObjective = MissionObjective;
        params.FloatParam = FloatParam;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnLoadoutApplied
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        InGBCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnLoadoutApplied(GroundBranch::AGBCharacter* InGBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnLoadoutApplied");
        
        AGBPlayerController_OnLoadoutApplied_Params params {};
        params.InGBCharacter = InGBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnHoveredWidgetChanged
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidgetComponent*                             WidgetComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidgetComponent*                             PreviousWidgetComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnHoveredWidgetChanged(UMG::UWidgetComponent* WidgetComponent, UMG::UWidgetComponent* PreviousWidgetComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnHoveredWidgetChanged");
        
        AGBPlayerController_OnHoveredWidgetChanged_Params params {};
        params.WidgetComponent = WidgetComponent;
        params.PreviousWidgetComponent = PreviousWidgetComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnFailedKitValidationsUpdateEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnFailedKitValidationsUpdateEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnFailedKitValidationsUpdateEvent");
        
        AGBPlayerController_OnFailedKitValidationsUpdateEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnCustomiseOperatorCheatEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnCustomiseOperatorCheatEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnCustomiseOperatorCheatEvent");
        
        AGBPlayerController_OnCustomiseOperatorCheatEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnClientOnLoadoutAppliedEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnClientOnLoadoutAppliedEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnClientOnLoadoutAppliedEvent");
        
        AGBPlayerController_OnClientOnLoadoutAppliedEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.OnAFKPromptEvent
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReponseTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::OnAFKPromptEvent(float ReponseTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.OnAFKPromptEvent");
        
        AGBPlayerController_OnAFKPromptEvent_Params params {};
        params.ReponseTime = ReponseTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.NotifyMovementImpulse
     *         Flags  -> ()
     * Parameters:
     *         float                                              ImpulseX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ImpulseY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ImpulseDecayRate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::NotifyMovementImpulse(float ImpulseX, float ImpulseY, float ImpulseDecayRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.NotifyMovementImpulse");
        
        AGBPlayerController_NotifyMovementImpulse_Params params {};
        params.ImpulseX = ImpulseX;
        params.ImpulseY = ImpulseY;
        params.ImpulseDecayRate = ImpulseDecayRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.NotAFK
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::NotAFK()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.NotAFK");
        
        AGBPlayerController_NotAFK_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.MuteTalking
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::MuteTalking()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.MuteTalking");
        
        AGBPlayerController_MuteTalking_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.MuteAll
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::MuteAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.MuteAll");
        
        AGBPlayerController_MuteAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Mute
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              TargetPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Mute(Engine::APlayerState* TargetPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Mute");
        
        AGBPlayerController_Mute_Params params {};
        params.TargetPlayerState = TargetPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.LocalMissionObjectiveStatusUpdate
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMissionObjectiveStatusUpdateType  StatusUpdateType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FloatParam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::LocalMissionObjectiveStatusUpdate(GroundBranch::EGBMissionObjectiveStatusUpdateType StatusUpdateType, GroundBranch::AGBMissionObjective* MissionObjective, float FloatParam)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.LocalMissionObjectiveStatusUpdate");
        
        AGBPlayerController_LocalMissionObjectiveStatusUpdate_Params params {};
        params.StatusUpdateType = StatusUpdateType;
        params.MissionObjective = MissionObjective;
        params.FloatParam = FloatParam;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsUsingRadio
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsUsingRadio()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsUsingRadio");
        
        AGBPlayerController_IsUsingRadio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsUsingGamepad
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsUsingGamepad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsUsingGamepad");
        
        AGBPlayerController_IsUsingGamepad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsTalking
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsTalking()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsTalking");
        
        AGBPlayerController_IsTalking_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsSequencePlaying
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsSequencePlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsSequencePlaying");
        
        AGBPlayerController_IsSequencePlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsMuted
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              TargetPlayerState                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsMuted(Engine::APlayerState* TargetPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsMuted");
        
        AGBPlayerController_IsMuted_Params params {};
        params.TargetPlayerState = TargetPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsFirstPerson
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsFirstPerson()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsFirstPerson");
        
        AGBPlayerController_IsFirstPerson_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsEditingMission
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsEditingMission()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsEditingMission");
        
        AGBPlayerController_IsEditingMission_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.IsAlive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::IsAlive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.IsAlive");
        
        AGBPlayerController_IsAlive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.HideTransitionScreens
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::HideTransitionScreens()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.HideTransitionScreens");
        
        AGBPlayerController_HideTransitionScreens_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.HideTransitionScreenEvent
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  LoadingScreenUserWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::HideTransitionScreenEvent(UMG::UUserWidget* LoadingScreenUserWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.HideTransitionScreenEvent");
        
        AGBPlayerController_HideTransitionScreenEvent_Params params {};
        params.LoadingScreenUserWidget = LoadingScreenUserWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.HasLocalPlayerTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LocalPlayerTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::HasLocalPlayerTag(const BasicTypes::FName& LocalPlayerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.HasLocalPlayerTag");
        
        AGBPlayerController_HasLocalPlayerTag_Params params {};
        params.LocalPlayerTag = LocalPlayerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.HasFailedKitValidations
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::HasFailedKitValidations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.HasFailedKitValidations");
        
        AGBPlayerController_HasFailedKitValidations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.HandleCommunicationKey
     *         Flags  -> ()
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bPressed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::HandleCommunicationKey(const InputCore::FKey& Key, bool bPressed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.HandleCommunicationKey");
        
        AGBPlayerController_HandleCommunicationKey_Params params {};
        params.Key = Key;
        params.bPressed = bPressed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GlobalChat
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::GlobalChat()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GlobalChat");
        
        AGBPlayerController_GlobalChat_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetWidgetInteractionComponent
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidgetInteractionComponent*                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidgetInteractionComponent* AGBPlayerController::GetWidgetInteractionComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetWidgetInteractionComponent");
        
        AGBPlayerController_GetWidgetInteractionComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetViewRotation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator AGBPlayerController::GetViewRotation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetViewRotation");
        
        AGBPlayerController_GetViewRotation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetTeamKillVictims
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<Engine::APlayerState*>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::APlayerState*> AGBPlayerController::GetTeamKillVictims()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetTeamKillVictims");
        
        AGBPlayerController_GetTeamKillVictims_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetTargetInputSensitivityScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::GetTargetInputSensitivityScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetTargetInputSensitivityScale");
        
        AGBPlayerController_GetTargetInputSensitivityScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetSpectatorNightVisionMode
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBPlayerController::GetSpectatorNightVisionMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetSpectatorNightVisionMode");
        
        AGBPlayerController_GetSpectatorNightVisionMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetSharedTraceResults
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<Engine::FHitResult>             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::FHitResult> AGBPlayerController::GetSharedTraceResults()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetSharedTraceResults");
        
        AGBPlayerController_GetSharedTraceResults_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetSharedTraceBlockingHit
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::GetSharedTraceBlockingHit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetSharedTraceBlockingHit");
        
        AGBPlayerController_GetSharedTraceBlockingHit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetPredictionTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::GetPredictionTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetPredictionTime");
        
        AGBPlayerController_GetPredictionTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetPlayingSequenceInfo
     *         Flags  -> ()
     * Parameters:
     *         float                                              OutTime                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutTimeLeft                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutDuration                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutIsCutscene                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutCanAbort                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LevelSequence::ALevelSequenceActor*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    LevelSequence::ALevelSequenceActor* AGBPlayerController::GetPlayingSequenceInfo(float* OutTime, float* OutTimeLeft, float* OutDuration, bool* bOutIsCutscene, bool* bOutCanAbort)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetPlayingSequenceInfo");
        
        AGBPlayerController_GetPlayingSequenceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTime != nullptr)
            *OutTime = params.OutTime;
        if (OutTimeLeft != nullptr)
            *OutTimeLeft = params.OutTimeLeft;
        if (OutDuration != nullptr)
            *OutDuration = params.OutDuration;
        if (bOutIsCutscene != nullptr)
            *bOutIsCutscene = params.bOutIsCutscene;
        if (bOutCanAbort != nullptr)
            *bOutCanAbort = params.bOutCanAbort;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetPlayerFOV
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::GetPlayerFOV()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetPlayerFOV");
        
        AGBPlayerController_GetPlayerFOV_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetOverrideInputWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBPlayerController::GetOverrideInputWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetOverrideInputWidget");
        
        AGBPlayerController_GetOverrideInputWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetNetInfo
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Ping                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InKiloBytesPerSecond                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InPacketsPerSecond                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InLossPercentage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutKiloBytesPerSecond                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutPacketsPerSecond                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutLossPercentage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::GetNetInfo(int32_t* Ping, float* InKiloBytesPerSecond, int32_t* InPacketsPerSecond, int32_t* InLossPercentage, float* OutKiloBytesPerSecond, int32_t* OutPacketsPerSecond, int32_t* OutLossPercentage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetNetInfo");
        
        AGBPlayerController_GetNetInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Ping != nullptr)
            *Ping = params.Ping;
        if (InKiloBytesPerSecond != nullptr)
            *InKiloBytesPerSecond = params.InKiloBytesPerSecond;
        if (InPacketsPerSecond != nullptr)
            *InPacketsPerSecond = params.InPacketsPerSecond;
        if (InLossPercentage != nullptr)
            *InLossPercentage = params.InLossPercentage;
        if (OutKiloBytesPerSecond != nullptr)
            *OutKiloBytesPerSecond = params.OutKiloBytesPerSecond;
        if (OutPacketsPerSecond != nullptr)
            *OutPacketsPerSecond = params.OutPacketsPerSecond;
        if (OutLossPercentage != nullptr)
            *OutLossPercentage = params.OutLossPercentage;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* AGBPlayerController::GetLoadoutInfo(const BasicTypes::FName& LoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetLoadoutInfo");
        
        AGBPlayerController_GetLoadoutInfo_Params params {};
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetLastTeamKillerInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                OutLastTeamKillerUniqueId                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutLastTeamKillerPlayerName                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutLastTeamKillerPrevKills                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::GetLastTeamKillerInfo(BasicTypes::FString* OutLastTeamKillerUniqueId, BasicTypes::FString* OutLastTeamKillerPlayerName, int32_t* OutLastTeamKillerPrevKills)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetLastTeamKillerInfo");
        
        AGBPlayerController_GetLastTeamKillerInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutLastTeamKillerUniqueId != nullptr)
            *OutLastTeamKillerUniqueId = params.OutLastTeamKillerUniqueId;
        if (OutLastTeamKillerPlayerName != nullptr)
            *OutLastTeamKillerPlayerName = params.OutLastTeamKillerPlayerName;
        if (OutLastTeamKillerPrevKills != nullptr)
            *OutLastTeamKillerPrevKills = params.OutLastTeamKillerPrevKills;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetLastDesiredOffTargetAlphaValue
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::GetLastDesiredOffTargetAlphaValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetLastDesiredOffTargetAlphaValue");
        
        AGBPlayerController_GetLastDesiredOffTargetAlphaValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetHeadMovementAmount
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::GetHeadMovementAmount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetHeadMovementAmount");
        
        AGBPlayerController_GetHeadMovementAmount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetGBHUD
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBHUD*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBHUD* AGBPlayerController::GetGBHUD()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetGBHUD");
        
        AGBPlayerController_GetGBHUD_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetGBCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBPlayerController::GetGBCharacter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetGBCharacter");
        
        AGBPlayerController_GetGBCharacter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetFPS
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerController::GetFPS()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetFPS");
        
        AGBPlayerController_GetFPS_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetFluidStance
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::GetFluidStance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetFluidStance");
        
        AGBPlayerController_GetFluidStance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetFailedKitValidations
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBKitValidationInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBKitValidationInfo> AGBPlayerController::GetFailedKitValidations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetFailedKitValidations");
        
        AGBPlayerController_GetFailedKitValidations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetFailedKitValidationInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBKitValidationInfo                 OutKitValidationInfo                                       (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::GetFailedKitValidationInfo(const BasicTypes::FName& LoadoutName, GroundBranch::FGBKitValidationInfo* OutKitValidationInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetFailedKitValidationInfo");
        
        AGBPlayerController_GetFailedKitValidationInfo_Params params {};
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutKitValidationInfo != nullptr)
            *OutKitValidationInfo = params.OutKitValidationInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetEyeBias
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::GetEyeBias()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetEyeBias");
        
        AGBPlayerController_GetEyeBias_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.GetCameraStyle
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBPlayerController::GetCameraStyle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.GetCameraStyle");
        
        AGBPlayerController_GetCameraStyle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.FrozenTimeLeft
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerController::FrozenTimeLeft()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.FrozenTimeLeft");
        
        AGBPlayerController_FrozenTimeLeft_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Forgive
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Forgive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Forgive");
        
        AGBPlayerController_Forgive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ForceHideTransitionScreens
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ForceHideTransitionScreens()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ForceHideTransitionScreens");
        
        AGBPlayerController_ForceHideTransitionScreens_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.FlushActions
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::FlushActions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.FlushActions");
        
        AGBPlayerController_FlushActions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.FinishCanUseAttempt
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::FinishCanUseAttempt()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.FinishCanUseAttempt");
        
        AGBPlayerController_FinishCanUseAttempt_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.EditMission
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::EditMission()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.EditMission");
        
        AGBPlayerController_EditMission_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.DumpGameplayAbilityList
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::DumpGameplayAbilityList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.DumpGameplayAbilityList");
        
        AGBPlayerController_DumpGameplayAbilityList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.CustomTraceBookmark
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::CustomTraceBookmark()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.CustomTraceBookmark");
        
        AGBPlayerController_CustomTraceBookmark_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.CustomiseOperator
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::CustomiseOperator()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.CustomiseOperator");
        
        AGBPlayerController_CustomiseOperator_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.CreateBlackOutEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bFadeIn                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::CreateBlackOutEvent(bool bFadeIn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.CreateBlackOutEvent");
        
        AGBPlayerController_CreateBlackOutEvent_Params params {};
        params.bFadeIn = bFadeIn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientTeleport
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientTeleport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientTeleport");
        
        AGBPlayerController_ClientTeleport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientTeamKillWarn
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<Engine::APlayerState*>          NewTeamKillVictims                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientTeamKillWarn(BasicTypes::TArray<Engine::APlayerState*> NewTeamKillVictims)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientTeamKillWarn");
        
        AGBPlayerController_ClientTeamKillWarn_Params params {};
        params.NewTeamKillVictims = NewTeamKillVictims;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientTeamKilledNotify
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TeamKillerUniqueId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                TeamKillerPlayerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PrevKills                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientTeamKilledNotify(const BasicTypes::FString& TeamKillerUniqueId, const BasicTypes::FString& TeamKillerPlayerName, int32_t PrevKills)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientTeamKilledNotify");
        
        AGBPlayerController_ClientTeamKilledNotify_Params params {};
        params.TeamKillerUniqueId = TeamKillerUniqueId;
        params.TeamKillerPlayerName = TeamKillerPlayerName;
        params.PrevKills = PrevKills;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientStopSequencePlayback
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bSuppressBlackOutAfter                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientStopSequencePlayback(bool bSuppressBlackOutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientStopSequencePlayback");
        
        AGBPlayerController_ClientStopSequencePlayback_Params params {};
        params.bSuppressBlackOutAfter = bSuppressBlackOutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientShowWorldPrompt
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               PromptLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientShowWorldPrompt(const CoreUObject::FVector& PromptLocation, const BasicTypes::FName& Tag, float Duration, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientShowWorldPrompt");
        
        AGBPlayerController_ClientShowWorldPrompt_Params params {};
        params.PromptLocation = PromptLocation;
        params.Tag = Tag;
        params.Duration = Duration;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientShowMenu
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FSoftClassPath                        MenuClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientShowMenu(const CoreUObject::FSoftClassPath& MenuClassName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientShowMenu");
        
        AGBPlayerController_ClientShowMenu_Params params {};
        params.MenuClassName = MenuClassName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientShowAdminMenu
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientShowAdminMenu()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientShowAdminMenu");
        
        AGBPlayerController_ClientShowAdminMenu_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientSendPlayerCharVoice
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       SenderCharVoiceDataId                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadio                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientSendPlayerCharVoice(GroundBranch::AGBPlayerState* SenderPlayerState, const CoreUObject::FPrimaryAssetId& SenderCharVoiceDataId, const BasicTypes::FName& Key, bool bIsRadio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientSendPlayerCharVoice");
        
        AGBPlayerController_ClientSendPlayerCharVoice_Params params {};
        params.SenderPlayerState = SenderPlayerState;
        params.SenderCharVoiceDataId = SenderCharVoiceDataId;
        params.Key = Key;
        params.bIsRadio = bIsRadio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientPlaySequence
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> SequenceRef                                                (ConstParm, Parm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            GBSequencePlayFlags                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientPlaySequence(BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> SequenceRef, uint8_t GBSequencePlayFlags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientPlaySequence");
        
        AGBPlayerController_ClientPlaySequence_Params params {};
        params.SequenceRef = SequenceRef;
        params.GBSequencePlayFlags = GBSequencePlayFlags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientOnLoadoutApplied
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientOnLoadoutApplied()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientOnLoadoutApplied");
        
        AGBPlayerController_ClientOnLoadoutApplied_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientMissionObjectiveStatusUpdate
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMissionObjectiveStatusUpdateType  StatusUpdateType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FloatParam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientMissionObjectiveStatusUpdate(GroundBranch::EGBMissionObjectiveStatusUpdateType StatusUpdateType, GroundBranch::AGBMissionObjective* MissionObjective, float FloatParam)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientMissionObjectiveStatusUpdate");
        
        AGBPlayerController_ClientMissionObjectiveStatusUpdate_Params params {};
        params.StatusUpdateType = StatusUpdateType;
        params.MissionObjective = MissionObjective;
        params.FloatParam = FloatParam;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientInitialSync
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientInitialSync()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientInitialSync");
        
        AGBPlayerController_ClientInitialSync_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientGameMessage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientGameMessage(const BasicTypes::FName& GameMessageId, const BasicTypes::FName& Type, float Duration, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientGameMessage");
        
        AGBPlayerController_ClientGameMessage_Params params {};
        params.GameMessageId = GameMessageId;
        params.Type = Type;
        params.Duration = Duration;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientForceProne
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientForceProne()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientForceProne");
        
        AGBPlayerController_ClientForceProne_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientForceCrouch
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientForceCrouch()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientForceCrouch");
        
        AGBPlayerController_ClientForceCrouch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientEnterReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientEnterReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientEnterReadyRoom");
        
        AGBPlayerController_ClientEnterReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientEnterPlayArea
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientEnterPlayArea()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientEnterPlayArea");
        
        AGBPlayerController_ClientEnterPlayArea_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientBecameSpectator
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewSpectatorLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              NewSpectatorRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientBecameSpectator(const CoreUObject::FVector& NewSpectatorLocation, const CoreUObject::FRotator& NewSpectatorRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientBecameSpectator");
        
        AGBPlayerController_ClientBecameSpectator_Params params {};
        params.NewSpectatorLocation = NewSpectatorLocation;
        params.NewSpectatorRotation = NewSpectatorRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientAFKPrompt
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReponseTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientAFKPrompt(float ReponseTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientAFKPrompt");
        
        AGBPlayerController_ClientAFKPrompt_Params params {};
        params.ReponseTime = ReponseTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClientAdminReply
     *         Flags  -> ()
     * Parameters:
     *         RBZooKeeper::FZKReplicatedContent                  Content                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClientAdminReply(const RBZooKeeper::FZKReplicatedContent& Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClientAdminReply");
        
        AGBPlayerController_ClientAdminReply_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.ClearCurrentInteractivePrimitive
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::ClearCurrentInteractivePrimitive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.ClearCurrentInteractivePrimitive");
        
        AGBPlayerController_ClearCurrentInteractivePrimitive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.CanUseActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    UseTarget                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMustSucceed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::CanUseActor(Engine::AActor* UseTarget, bool bMustSucceed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.CanUseActor");
        
        AGBPlayerController_CanUseActor_Params params {};
        params.UseTarget = UseTarget;
        params.bMustSucceed = bMustSucceed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.BulletWarn
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Bullet                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSubSonic                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::BulletWarn(Engine::AActor* Bullet, bool bSubSonic)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.BulletWarn");
        
        AGBPlayerController_BulletWarn_Params params {};
        params.Bullet = Bullet;
        params.bSubSonic = bSubSonic;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.BP_Spectate
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::BP_Spectate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.BP_Spectate");
        
        AGBPlayerController_BP_Spectate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.BP_ReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerController::BP_ReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.BP_ReadyRoom");
        
        AGBPlayerController_BP_ReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.BP_IsFrozen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerController::BP_IsFrozen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.BP_IsFrozen");
        
        AGBPlayerController_BP_IsFrozen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.AdminSet
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         RBZooKeeper::FZKReplicatedContent                  Content                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::AdminSet(const BasicTypes::FString& Params, const RBZooKeeper::FZKReplicatedContent& Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.AdminSet");
        
        AGBPlayerController_AdminSet_Params params {};
        params.Params = Params;
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.AdminRequest
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RequestType                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnAdminRequestFilled                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::AdminRequest(const BasicTypes::FName& RequestType, const BasicTypes::FString& Params, const BasicTypes::UScriptDelegate& OnAdminRequestFilled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.AdminRequest");
        
        AGBPlayerController_AdminRequest_Params params {};
        params.RequestType = RequestType;
        params.Params = Params;
        params.OnAdminRequestFilled = OnAdminRequestFilled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.Admin
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::Admin(const BasicTypes::FString& Parameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.Admin");
        
        AGBPlayerController_Admin_Params params {};
        params.Parameters = Parameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.AddOverrideInputWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  UserWidget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::AddOverrideInputWidget(UMG::UUserWidget* UserWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.AddOverrideInputWidget");
        
        AGBPlayerController_AddOverrideInputWidget_Params params {};
        params.UserWidget = UserWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerController.AddLocalPlayerTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LocalPlayerTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerController::AddLocalPlayerTag(const BasicTypes::FName& LocalPlayerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerController.AddLocalPlayerTag");
        
        AGBPlayerController_AddLocalPlayerTag_Params params {};
        params.LocalPlayerTag = LocalPlayerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.ZeroSightTo
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewZeroDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::ZeroSightTo(int32_t NewZeroDistance)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.ZeroSightTo");
        
        UGBCheatManager_ZeroSightTo_Params params {};
        params.NewZeroDistance = NewZeroDistance;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.TeleportBotsToMe
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::TeleportBotsToMe()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.TeleportBotsToMe");
        
        UGBCheatManager_TeleportBotsToMe_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.TeleportAIToMe
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::TeleportAIToMe()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.TeleportAIToMe");
        
        UGBCheatManager_TeleportAIToMe_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SpawnDebugBot
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SpawnDebugBot(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SpawnDebugBot");
        
        UGBCheatManager_SpawnDebugBot_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SetWaterLevel
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InWaterLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SetWaterLevel(int32_t InWaterLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SetWaterLevel");
        
        UGBCheatManager_SetWaterLevel_Params params {};
        params.InWaterLevel = InWaterLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SetTeamId
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SetTeamId(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SetTeamId");
        
        UGBCheatManager_SetTeamId_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SetTeamElement
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamElement                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SetTeamElement(uint8_t TeamElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SetTeamElement");
        
        UGBCheatManager_SetTeamElement_Params params {};
        params.TeamElement = TeamElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SetKit
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                KitName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SetKit(const BasicTypes::FString& KitName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SetKit");
        
        UGBCheatManager_SetKit_Params params {};
        params.KitName = KitName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SetCharVoiceId
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                CharVoiceIdAsString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SetCharVoiceId(const BasicTypes::FString& CharVoiceIdAsString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SetCharVoiceId");
        
        UGBCheatManager_SetCharVoiceId_Params params {};
        params.CharVoiceIdAsString = CharVoiceIdAsString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.SaveKitForBot
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TeamName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                BotName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::SaveKitForBot(const BasicTypes::FString& TeamName, const BasicTypes::FString& BotName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.SaveKitForBot");
        
        UGBCheatManager_SaveKitForBot_Params params {};
        params.TeamName = TeamName;
        params.BotName = BotName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.RunMissionScript
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::RunMissionScript(const BasicTypes::FString& ScriptName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.RunMissionScript");
        
        UGBCheatManager_RunMissionScript_Params params {};
        params.ScriptName = ScriptName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.NoTarget
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::NoTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.NoTarget");
        
        UGBCheatManager_NoTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.NoSway
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::NoSway()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.NoSway");
        
        UGBCheatManager_NoSway_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.NoRecoil
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::NoRecoil()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.NoRecoil");
        
        UGBCheatManager_NoRecoil_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.LoadReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::LoadReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.LoadReadyRoom");
        
        UGBCheatManager_LoadReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.LoadPlayArea
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::LoadPlayArea()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.LoadPlayArea");
        
        UGBCheatManager_LoadPlayArea_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.KillEveryoneElse
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::KillEveryoneElse()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.KillEveryoneElse");
        
        UGBCheatManager_KillEveryoneElse_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.KillAllEnemies
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::KillAllEnemies()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.KillAllEnemies");
        
        UGBCheatManager_KillAllEnemies_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.KillAll
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::KillAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.KillAll");
        
        UGBCheatManager_KillAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.InfAmmo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBCheatManager::InfAmmo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.InfAmmo");
        
        UGBCheatManager_InfAmmo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.DebugGameCommand
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::DebugGameCommand(const BasicTypes::FString& Parameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.DebugGameCommand");
        
        UGBCheatManager_DebugGameCommand_Params params {};
        params.Parameters = Parameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBCheatManager.BugItGoMantis
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                CameraString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBCheatManager::BugItGoMantis(const BasicTypes::FString& CameraString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBCheatManager.BugItGoMantis");
        
        UGBCheatManager_BugItGoMantis_Params params {};
        params.CameraString = CameraString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBClimatePreset.GetWeatherPresetsForSeason
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ESeason                              SelectedSeason                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> UGBClimatePreset::GetWeatherPresetsForSeason(GroundBranch::ESeason SelectedSeason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBClimatePreset.GetWeatherPresetsForSeason");
        
        UGBClimatePreset_GetWeatherPresetsForSeason_Params params {};
        params.SelectedSeason = SelectedSeason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBClimatePreset.GetWeatherPresetProperties
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        SelectedWeatherPreset                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherCategory                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  OutWeatherDescription                                      (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBClimatePreset::GetWeatherPresetProperties(SkyCreatorPlugin::USkyCreatorWeatherPreset* SelectedWeatherPreset, BasicTypes::FName* OutWeatherCategory, BasicTypes::FName* OutWeatherType, BasicTypes::FText* OutWeatherDescription)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBClimatePreset.GetWeatherPresetProperties");
        
        UGBClimatePreset_GetWeatherPresetProperties_Params params {};
        params.SelectedWeatherPreset = SelectedWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWeatherCategory != nullptr)
            *OutWeatherCategory = params.OutWeatherCategory;
        if (OutWeatherType != nullptr)
            *OutWeatherType = params.OutWeatherType;
        if (OutWeatherDescription != nullptr)
            *OutWeatherDescription = params.OutWeatherDescription;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBClimatePreset.GetClimateSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBClimateSettings                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBClimateSettings UGBClimatePreset::GetClimateSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBClimatePreset.GetClimateSettings");
        
        UGBClimatePreset_GetClimateSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBClimatePreset.GetAllWeatherPresets
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bAllSeasons                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ESeason                              SelectedSeason                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> UGBClimatePreset::GetAllWeatherPresets(bool bAllSeasons, GroundBranch::ESeason SelectedSeason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBClimatePreset.GetAllWeatherPresets");
        
        UGBClimatePreset_GetAllWeatherPresets_Params params {};
        params.bAllSeasons = bAllSeasons;
        params.SelectedSeason = SelectedSeason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBClothing.OnTakeHit
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RefBoneName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RefPosPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBClothing::OnTakeHit(const BasicTypes::FName& RefBoneName, const CoreUObject::FVector& RefPosPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBClothing.OnTakeHit");
        
        AGBClothing_OnTakeHit_Params params {};
        params.RefBoneName = RefBoneName;
        params.RefPosPosition = RefPosPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBClothing.OnLoadMeshComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBClothing::OnLoadMeshComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBClothing.OnLoadMeshComplete");
        
        AGBClothing_OnLoadMeshComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBColourBlindnessCameraModifier.ApplyPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   PlayerSettings                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBColourBlindnessCameraModifier::ApplyPlayerSettings(GroundBranch::UGBPlayerSettings* PlayerSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBColourBlindnessCameraModifier.ApplyPlayerSettings");
        
        UGBColourBlindnessCameraModifier_ApplyPlayerSettings_Params params {};
        params.PlayerSettings = PlayerSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemAudioEventSet.GetAudioEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkAudioEvent* UGBInvItemAudioEventSet::GetAudioEvent(const BasicTypes::FName& MontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemAudioEventSet.GetAudioEvent");
        
        UGBInvItemAudioEventSet_GetAudioEvent_Params params {};
        params.MontageName = MontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropOperation.MakeInvItemInteractive
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          InvItemn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropOperation::MakeInvItemInteractive(GroundBranch::AGBInvItem* InvItemn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropOperation.MakeInvItemInteractive");
        
        UGBInvItemDragDropOperation_MakeInvItemInteractive_Params params {};
        params.InvItemn = InvItemn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropOperation.Init
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropOperation::Init()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropOperation.Init");
        
        UGBInvItemDragDropOperation_Init_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropOperation.GetRootInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBInvItemDragDropOperation::GetRootInvItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropOperation.GetRootInvItem");
        
        UGBInvItemDragDropOperation_GetRootInvItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropOperation.GetInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBInvItemDragDropOperation::GetInvItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropOperation.GetInvItem");
        
        UGBInvItemDragDropOperation_GetInvItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropOperation.EndDragCleanup
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropOperation::EndDragCleanup()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropOperation.EndDragCleanup");
        
        UGBInvItemDragDropOperation_EndDragCleanup_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropOperation.CreateFloatingWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UGBInvItemDragDropOperation::CreateFloatingWidget(UMG::UUserWidget* WidgetClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropOperation.CreateFloatingWidget");
        
        UGBInvItemDragDropOperation_CreateFloatingWidget_Params params {};
        params.WidgetClass = WidgetClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemEffectSet.GetEffect
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  EffectName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Niagara::UNiagaraSystem*                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Niagara::UNiagaraSystem* UGBInvItemEffectSet::GetEffect(const BasicTypes::FName& EffectName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemEffectSet.GetEffect");
        
        UGBInvItemEffectSet_GetEffect_Params params {};
        params.EffectName = EffectName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemMontageSet.GetMontage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* UGBInvItemMontageSet::GetMontage(const BasicTypes::FName& MontageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemMontageSet.GetMontage");
        
        UGBInvItemMontageSet_GetMontage_Params params {};
        params.MontageName = MontageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.SetPickupTarget
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          NewPickupTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemPickupComponent::SetPickupTarget(GroundBranch::AGBInvItem* NewPickupTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.SetPickupTarget");
        
        UGBInvItemPickupComponent_SetPickupTarget_Params params {};
        params.NewPickupTarget = NewPickupTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.SetPickupShapeScale
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               NewPickupShapeScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemPickupComponent::SetPickupShapeScale(const CoreUObject::FVector& NewPickupShapeScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.SetPickupShapeScale");
        
        UGBInvItemPickupComponent_SetPickupShapeScale_Params params {};
        params.NewPickupShapeScale = NewPickupShapeScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.SetAltPickupTarget
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          NewAltPickupTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemPickupComponent::SetAltPickupTarget(GroundBranch::AGBInvItem* NewAltPickupTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.SetAltPickupTarget");
        
        UGBInvItemPickupComponent_SetAltPickupTarget_Params params {};
        params.NewAltPickupTarget = NewAltPickupTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.OnEndCursorOver
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       TouchedComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemPickupComponent::OnEndCursorOver(Engine::UPrimitiveComponent* TouchedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.OnEndCursorOver");
        
        UGBInvItemPickupComponent_OnEndCursorOver_Params params {};
        params.TouchedComponent = TouchedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.OnBeginCursorOver
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       TouchedComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemPickupComponent::OnBeginCursorOver(Engine::UPrimitiveComponent* TouchedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.OnBeginCursorOver");
        
        UGBInvItemPickupComponent_OnBeginCursorOver_Params params {};
        params.TouchedComponent = TouchedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.Init
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemPickupComponent::Init()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.Init");
        
        UGBInvItemPickupComponent_Init_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.GetPickupTarget
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBInvItemPickupComponent::GetPickupTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.GetPickupTarget");
        
        UGBInvItemPickupComponent_GetPickupTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupComponent.GetAltPickupTarget
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBInvItemPickupComponent::GetAltPickupTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupComponent.GetAltPickupTarget");
        
        UGBInvItemPickupComponent_GetAltPickupTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemPickupWidget.IsValidPickupTarget
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          PickupTarget                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBInvItemPickupWidget::IsValidPickupTarget(GroundBranch::AGBInvItem* PickupTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemPickupWidget.IsValidPickupTarget");
        
        UGBInvItemPickupWidget_IsValidPickupTarget_Params params {};
        params.PickupTarget = PickupTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemSkin.GetTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBInvItemSkin::GetTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemSkin.GetTags");
        
        UGBInvItemSkin_GetTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemSkin.GetInvItemSkinMaterials
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBInvItemSkinMaterialInfo> ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBInvItemSkinMaterialInfo> UGBInvItemSkin::GetInvItemSkinMaterials()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemSkin.GetInvItemSkinMaterials");
        
        UGBInvItemSkin_GetInvItemSkinMaterials_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemBeamComponent.OnColourBlindnessFilterUpdateEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBItemBeamComponent::OnColourBlindnessFilterUpdateEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemBeamComponent.OnColourBlindnessFilterUpdateEvent");
        
        UGBItemBeamComponent_OnColourBlindnessFilterUpdateEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemMeshByTagsUserData.OnLoadMeshComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBItemMeshByTagsUserData::OnLoadMeshComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemMeshByTagsUserData.OnLoadMeshComplete");
        
        UGBItemMeshByTagsUserData_OnLoadMeshComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemMeshByTagsUserData.OnCosmeticTagsUpdated
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InCosmeticTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBItemMeshByTagsUserData::OnCosmeticTagsUpdated(const GameplayTags::FGameplayTagContainer& InCosmeticTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemMeshByTagsUserData.OnCosmeticTagsUpdated");
        
        UGBItemMeshByTagsUserData_OnCosmeticTagsUpdated_Params params {};
        params.InCosmeticTags = InCosmeticTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemMorphByTagsUserData.OnCosmeticTagsUpdated
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InCosmeticTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBItemMorphByTagsUserData::OnCosmeticTagsUpdated(const GameplayTags::FGameplayTagContainer& InCosmeticTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemMorphByTagsUserData.OnCosmeticTagsUpdated");
        
        UGBItemMorphByTagsUserData_OnCosmeticTagsUpdated_Params params {};
        params.InCosmeticTags = InCosmeticTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemProjectile.UpdateAssociatedItem
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBItemProjectile::UpdateAssociatedItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemProjectile.UpdateAssociatedItem");
        
        AGBItemProjectile_UpdateAssociatedItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemProjectile.OnStop
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBItemProjectile::OnStop(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemProjectile.OnStop");
        
        AGBItemProjectile_OnStop_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemProjectile.OnReplaceClientsideProxyEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ClientsideProxyAssociatedItem                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSyncedLocations                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBItemProjectile::OnReplaceClientsideProxyEvent(GroundBranch::AGBInvItem* ClientsideProxyAssociatedItem, bool bSyncedLocations)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemProjectile.OnReplaceClientsideProxyEvent");
        
        AGBItemProjectile_OnReplaceClientsideProxyEvent_Params params {};
        params.ClientsideProxyAssociatedItem = ClientsideProxyAssociatedItem;
        params.bSyncedLocations = bSyncedLocations;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemProjectile.OnProxyAssociatedItemParentDestroyed
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBItemProjectile::OnProxyAssociatedItemParentDestroyed(Engine::AActor* DestroyedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemProjectile.OnProxyAssociatedItemParentDestroyed");
        
        AGBItemProjectile_OnProxyAssociatedItemParentDestroyed_Params params {};
        params.DestroyedActor = DestroyedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemProjectile.OnBounce
     *         Flags  -> ()
     * Parameters:
     *         Engine::FHitResult                                 ImpactResult                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ImpactVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBItemProjectile::OnBounce(const Engine::FHitResult& ImpactResult, const CoreUObject::FVector& ImpactVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemProjectile.OnBounce");
        
        AGBItemProjectile_OnBounce_Params params {};
        params.ImpactResult = ImpactResult;
        params.ImpactVelocity = ImpactVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemProjectile.IsClientsideProxy
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBItemProjectile::IsClientsideProxy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemProjectile.IsClientsideProxy");
        
        AGBItemProjectile_IsClientsideProxy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemViewOverlayWidget.SetAssociatedItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBItemViewOverlayWidget::SetAssociatedItem(GroundBranch::AGBInvItem* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemViewOverlayWidget.SetAssociatedItem");
        
        UGBItemViewOverlayWidget_SetAssociatedItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemViewOverlayWidget.OnAssociatedItemDestroyed
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBItemViewOverlayWidget::OnAssociatedItemDestroyed(Engine::AActor* DestroyedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemViewOverlayWidget.OnAssociatedItemDestroyed");
        
        UGBItemViewOverlayWidget_OnAssociatedItemDestroyed_Params params {};
        params.DestroyedActor = DestroyedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemViewOverlayWidget.GetOwningGBPlayerController
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerController* UGBItemViewOverlayWidget::GetOwningGBPlayerController()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemViewOverlayWidget.GetOwningGBPlayerController");
        
        UGBItemViewOverlayWidget_GetOwningGBPlayerController_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemViewOverlayWidget.GetGBCharacterViewTarget
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* UGBItemViewOverlayWidget::GetGBCharacterViewTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemViewOverlayWidget.GetGBCharacterViewTarget");
        
        UGBItemViewOverlayWidget_GetGBCharacterViewTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBItemViewOverlayWidget.GetAssociatedItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBItemViewOverlayWidget::GetAssociatedItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBItemViewOverlayWidget.GetAssociatedItem");
        
        UGBItemViewOverlayWidget_GetAssociatedItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.ValidateOrReplaceInvItemSkin
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       DesiredInvItemSkinId                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       OutValidInvItemSkinId                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBKitFunctionLibrary::ValidateOrReplaceInvItemSkin(const BasicTypes::FName& ProfileName, const GameplayTags::FGameplayTagContainer& InvItemTags, const CoreUObject::FPrimaryAssetId& DesiredInvItemSkinId, GroundBranch::AGBCharacter* Character, CoreUObject::FPrimaryAssetId* OutValidInvItemSkinId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.ValidateOrReplaceInvItemSkin");
        
        UGBKitFunctionLibrary_ValidateOrReplaceInvItemSkin_Params params {};
        params.ProfileName = ProfileName;
        params.InvItemTags = InvItemTags;
        params.DesiredInvItemSkinId = DesiredInvItemSkinId;
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutValidInvItemSkinId != nullptr)
            *OutValidInvItemSkinId = params.OutValidInvItemSkinId;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.StripItemTypePrefix
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InvItemTypeAsString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::StripItemTypePrefix(const BasicTypes::FString& InvItemTypeAsString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.StripItemTypePrefix");
        
        UGBKitFunctionLibrary_StripItemTypePrefix_Params params {};
        params.InvItemTypeAsString = InvItemTypeAsString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.ProcessFailedKit
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBKitValidationInfo                 KitValidationInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bRemove                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::ProcessFailedKit(CoreUObject::UObject* WorldContextObject, VaRest::UVaRestJsonObject* KitJsonObj, const GroundBranch::FGBKitValidationInfo& KitValidationInfo, bool bRemove)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.ProcessFailedKit");
        
        UGBKitFunctionLibrary_ProcessFailedKit_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.KitJsonObj = KitJsonObj;
        params.KitValidationInfo = KitValidationInfo;
        params.bRemove = bRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.MakeValidLoadoutFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::MakeValidLoadoutFilename(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.MakeValidLoadoutFilename");
        
        UGBKitFunctionLibrary_MakeValidLoadoutFilename_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.LoadPatch
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                PatchFilename                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture2D*                                OutPatchImage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture2D*                                OutPatchNormal                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutImageWidth                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutImageHeight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::LoadPatch(const BasicTypes::FString& PatchFilename, Engine::UTexture2D** OutPatchImage, Engine::UTexture2D** OutPatchNormal, int32_t* OutImageWidth, int32_t* OutImageHeight, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.LoadPatch");
        
        UGBKitFunctionLibrary_LoadPatch_Params params {};
        params.PatchFilename = PatchFilename;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPatchImage != nullptr)
            *OutPatchImage = params.OutPatchImage;
        if (OutPatchNormal != nullptr)
            *OutPatchNormal = params.OutPatchNormal;
        if (OutImageWidth != nullptr)
            *OutImageWidth = params.OutImageWidth;
        if (OutImageHeight != nullptr)
            *OutImageHeight = params.OutImageHeight;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.LoadKitFile
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         OutKitJsonObj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::LoadKitFile(const BasicTypes::FString& Filename, VaRest::UVaRestJsonObject** OutKitJsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.LoadKitFile");
        
        UGBKitFunctionLibrary_LoadKitFile_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutKitJsonObj != nullptr)
            *OutKitJsonObj = params.OutKitJsonObj;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.KitValidation_ToString
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBKitValidationInfo                 KitValidationInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::KitValidation_ToString(const GroundBranch::FGBKitValidationInfo& KitValidationInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.KitValidation_ToString");
        
        UGBKitFunctionLibrary_KitValidation_ToString_Params params {};
        params.KitValidationInfo = KitValidationInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.KitValidation_Failed
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBKitValidationInfo                 KitValidationInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::KitValidation_Failed(const GroundBranch::FGBKitValidationInfo& KitValidationInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.KitValidation_Failed");
        
        UGBKitFunctionLibrary_KitValidation_Failed_Params params {};
        params.KitValidationInfo = KitValidationInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.KitDump
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBKitFunctionLibrary::KitDump(const BasicTypes::FString& Message, VaRest::UVaRestJsonObject* KitJsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.KitDump");
        
        UGBKitFunctionLibrary_KitDump_Params params {};
        params.Message = Message;
        params.KitJsonObj = KitJsonObj;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.HasRequiredInvItemTypeTags
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   PrimaryAssetIds                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                RequiredInvItemTypeTags                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::HasRequiredInvItemTypeTags(BasicTypes::TArray<CoreUObject::FPrimaryAssetId> PrimaryAssetIds, const GameplayTags::FGameplayTagContainer& RequiredInvItemTypeTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.HasRequiredInvItemTypeTags");
        
        UGBKitFunctionLibrary_HasRequiredInvItemTypeTags_Params params {};
        params.PrimaryAssetIds = PrimaryAssetIds;
        params.RequiredInvItemTypeTags = RequiredInvItemTypeTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.HasKitsToConvert
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::HasKitsToConvert()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.HasKitsToConvert");
        
        UGBKitFunctionLibrary_HasKitsToConvert_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetVersionField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetVersionField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetVersionField");
        
        UGBKitFunctionLibrary_GetVersionField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserPresetsPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserPresetsPath(const BasicTypes::FString& Type)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserPresetsPath");
        
        UGBKitFunctionLibrary_GetUserPresetsPath_Params params {};
        params.Type = Type;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserPresetFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Preset                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserPresetFilename(const BasicTypes::FString& Type, const BasicTypes::FString& Preset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserPresetFilename");
        
        UGBKitFunctionLibrary_GetUserPresetFilename_Params params {};
        params.Type = Type;
        params.Preset = Preset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserPatchesPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserPatchesPath()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserPatchesPath");
        
        UGBKitFunctionLibrary_GetUserPatchesPath_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserLoadoutFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserLoadoutFilename(const BasicTypes::FName& LoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserLoadoutFilename");
        
        UGBKitFunctionLibrary_GetUserLoadoutFilename_Params params {};
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserItemBuildPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserItemBuildPath(const BasicTypes::FString& Type)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserItemBuildPath");
        
        UGBKitFunctionLibrary_GetUserItemBuildPath_Params params {};
        params.Type = Type;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserItemBuildFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ItemBuild                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserItemBuildFilename(const BasicTypes::FString& Type, const BasicTypes::FString& ItemBuild)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserItemBuildFilename");
        
        UGBKitFunctionLibrary_GetUserItemBuildFilename_Params params {};
        params.Type = Type;
        params.ItemBuild = ItemBuild;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserBotLoadoutsPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  TeamName                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetUserBotLoadoutsPath(const BasicTypes::FName& TeamName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetUserBotLoadoutsPath");
        
        UGBKitFunctionLibrary_GetUserBotLoadoutsPath_Params params {};
        params.TeamName = TeamName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetTypeField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetTypeField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetTypeField");
        
        UGBKitFunctionLibrary_GetTypeField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetSkinField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetSkinField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetSkinField");
        
        UGBKitFunctionLibrary_GetSkinField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetRequiredInvItemTypeTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBKitFunctionLibrary::GetRequiredInvItemTypeTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetRequiredInvItemTypeTags");
        
        UGBKitFunctionLibrary_GetRequiredInvItemTypeTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetPresetsField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetPresetsField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetPresetsField");
        
        UGBKitFunctionLibrary_GetPresetsField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetPresetNameField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetPresetNameField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetPresetNameField");
        
        UGBKitFunctionLibrary_GetPresetNameField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetPatchTintField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetPatchTintField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetPatchTintField");
        
        UGBKitFunctionLibrary_GetPatchTintField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetPatchPathField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetPatchPathField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetPatchPathField");
        
        UGBKitFunctionLibrary_GetPatchPathField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetPatchAuthorAndName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                PatchFilename                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutAuthor                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutPatchName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBKitFunctionLibrary::GetPatchAuthorAndName(const BasicTypes::FString& PatchFilename, BasicTypes::FString* OutAuthor, BasicTypes::FString* OutPatchName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetPatchAuthorAndName");
        
        UGBKitFunctionLibrary_GetPatchAuthorAndName_Params params {};
        params.PatchFilename = PatchFilename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAuthor != nullptr)
            *OutAuthor = params.OutAuthor;
        if (OutPatchName != nullptr)
            *OutPatchName = params.OutPatchName;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetModifiedField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetModifiedField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetModifiedField");
        
        UGBKitFunctionLibrary_GetModifiedField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitVersion
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBKitFunctionLibrary::GetKitVersion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitVersion");
        
        UGBKitFunctionLibrary_GetKitVersion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitValidationInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  LoadoutName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                RequiredInvItemTypeTags                                    (Parm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                ExcludeInvItemTags                                         (Parm, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBKitValidationInfo                 ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBKitValidationInfo UGBKitFunctionLibrary::GetKitValidationInfo(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& LoadoutName, VaRest::UVaRestJsonObject* KitJsonObj, const GameplayTags::FGameplayTagContainer& RequiredInvItemTypeTags, const GameplayTags::FGameplayTagContainer& ExcludeInvItemTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitValidationInfo");
        
        UGBKitFunctionLibrary_GetKitValidationInfo_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LoadoutName = LoadoutName;
        params.KitJsonObj = KitJsonObj;
        params.RequiredInvItemTypeTags = RequiredInvItemTypeTags;
        params.ExcludeInvItemTags = ExcludeInvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitPrimaryAssetIds
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   OutPrimaryAssetIds                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::GetKitPrimaryAssetIds(VaRest::UVaRestJsonObject* KitJsonObj, BasicTypes::TArray<CoreUObject::FPrimaryAssetId>* OutPrimaryAssetIds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitPrimaryAssetIds");
        
        UGBKitFunctionLibrary_GetKitPrimaryAssetIds_Params params {};
        params.KitJsonObj = KitJsonObj;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPrimaryAssetIds != nullptr)
            *OutPrimaryAssetIds = params.OutPrimaryAssetIds;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitItemList
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Owner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ProfileName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSkipAuth                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::GetKitItemList(Engine::AActor* Owner, VaRest::UVaRestJsonObject* KitJsonObj, const BasicTypes::FName& ProfileName, bool bSkipAuth, BasicTypes::TArray<GroundBranch::AGBInvItem*>* OutItems)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitItemList");
        
        UGBKitFunctionLibrary_GetKitItemList_Params params {};
        params.Owner = Owner;
        params.KitJsonObj = KitJsonObj;
        params.ProfileName = ProfileName;
        params.bSkipAuth = bSkipAuth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutItems != nullptr)
            *OutItems = params.OutItems;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitExtension
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetKitExtension()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetKitExtension");
        
        UGBKitFunctionLibrary_GetKitExtension_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetItemField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetItemField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetItemField");
        
        UGBKitFunctionLibrary_GetItemField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetItemDataField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetItemDataField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetItemDataField");
        
        UGBKitFunctionLibrary_GetItemDataField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetItemBuildField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetItemBuildField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetItemBuildField");
        
        UGBKitFunctionLibrary_GetItemBuildField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetHashField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetHashField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetHashField");
        
        UGBKitFunctionLibrary_GetHashField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetFullPatchPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                PatchName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetFullPatchPath(const BasicTypes::FString& PatchName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetFullPatchPath");
        
        UGBKitFunctionLibrary_GetFullPatchPath_Params params {};
        params.PatchName = PatchName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetFallbackPatchTintField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetFallbackPatchTintField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetFallbackPatchTintField");
        
        UGBKitFunctionLibrary_GetFallbackPatchTintField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetFallbackPatchPathField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetFallbackPatchPathField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetFallbackPatchPathField");
        
        UGBKitFunctionLibrary_GetFallbackPatchPathField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultPatchesPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetDefaultPatchesPath()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultPatchesPath");
        
        UGBKitFunctionLibrary_GetDefaultPatchesPath_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultLoadoutFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetDefaultLoadoutFilename(const BasicTypes::FName& LoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultLoadoutFilename");
        
        UGBKitFunctionLibrary_GetDefaultLoadoutFilename_Params params {};
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultKitInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* UGBKitFunctionLibrary::GetDefaultKitInfo(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& LoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultKitInfo");
        
        UGBKitFunctionLibrary_GetDefaultKitInfo_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultItemBuildTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBKitFunctionLibrary::GetDefaultItemBuildTag()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultItemBuildTag");
        
        UGBKitFunctionLibrary_GetDefaultItemBuildTag_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultBotLoadoutsPath
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  TeamName                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetDefaultBotLoadoutsPath(const BasicTypes::FName& TeamName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetDefaultBotLoadoutsPath");
        
        UGBKitFunctionLibrary_GetDefaultBotLoadoutsPath_Params params {};
        params.TeamName = TeamName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetChildrenField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetChildrenField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetChildrenField");
        
        UGBKitFunctionLibrary_GetChildrenField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.GetBuildNameField
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::GetBuildNameField()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.GetBuildNameField");
        
        UGBKitFunctionLibrary_GetBuildNameField_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.CreateKitInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  KitName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* UGBKitFunctionLibrary::CreateKitInfo(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& KitName, VaRest::UVaRestJsonObject* KitJsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.CreateKitInfo");
        
        UGBKitFunctionLibrary_CreateKitInfo_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.KitName = KitName;
        params.KitJsonObj = KitJsonObj;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.CreateKitFromItems
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      Items                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         OutKitJsonObj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::CreateKitFromItems(BasicTypes::TArray<GroundBranch::AGBInvItem*> Items, VaRest::UVaRestJsonObject** OutKitJsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.CreateKitFromItems");
        
        UGBKitFunctionLibrary_CreateKitFromItems_Params params {};
        params.Items = Items;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutKitJsonObj != nullptr)
            *OutKitJsonObj = params.OutKitJsonObj;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.CreateKitFromItem
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                BuildName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUnversioned                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         OutKitJsonObj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKitFunctionLibrary::CreateKitFromItem(const BasicTypes::FString& BuildName, GroundBranch::AGBInvItem* Item, bool bUnversioned, VaRest::UVaRestJsonObject** OutKitJsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.CreateKitFromItem");
        
        UGBKitFunctionLibrary_CreateKitFromItem_Params params {};
        params.BuildName = BuildName;
        params.Item = Item;
        params.bUnversioned = bUnversioned;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutKitJsonObj != nullptr)
            *OutKitJsonObj = params.OutKitJsonObj;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.CreateJsonTypeString
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InvItemTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::CreateJsonTypeString(const GameplayTags::FGameplayTagContainer& InvItemTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.CreateJsonTypeString");
        
        UGBKitFunctionLibrary_CreateJsonTypeString_Params params {};
        params.InvItemTags = InvItemTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.CreateDummyKitInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* UGBKitFunctionLibrary::CreateDummyKitInfo(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.CreateDummyKitInfo");
        
        UGBKitFunctionLibrary_CreateDummyKitInfo_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.ConvertOldKitsInPath
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Extension                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBKitFunctionLibrary::ConvertOldKitsInPath(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& Path, const BasicTypes::FString& Extension)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.ConvertOldKitsInPath");
        
        UGBKitFunctionLibrary_ConvertOldKitsInPath_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Path = Path;
        params.Extension = Extension;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.ConvertKitFileNameToLoadoutName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                LoadoutFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBKitFunctionLibrary::ConvertKitFileNameToLoadoutName(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& LoadoutFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.ConvertKitFileNameToLoadoutName");
        
        UGBKitFunctionLibrary_ConvertKitFileNameToLoadoutName_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LoadoutFileName = LoadoutFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.ConvertItemBuildToLuaTable
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VaRest::UVaRestJsonObject*                         ItemBuildJson                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSplitItemField                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBKitFunctionLibrary::ConvertItemBuildToLuaTable(CoreUObject::UObject* WorldContextObject, VaRest::UVaRestJsonObject* ItemBuildJson, bool bSplitItemField)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.ConvertItemBuildToLuaTable");
        
        UGBKitFunctionLibrary_ConvertItemBuildToLuaTable_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ItemBuildJson = ItemBuildJson;
        params.bSplitItemField = bSplitItemField;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitFunctionLibrary.AILoadoutToFullLoadoutFileName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                LoadoutFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBKitFunctionLibrary::AILoadoutToFullLoadoutFileName(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& LoadoutFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitFunctionLibrary.AILoadoutToFullLoadoutFileName");
        
        UGBKitFunctionLibrary_AILoadoutToFullLoadoutFileName_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LoadoutFileName = LoadoutFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.UpdatePatchTextureAtlas
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKitInfo::UpdatePatchTextureAtlas()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.UpdatePatchTextureAtlas");
        
        AGBKitInfo_UpdatePatchTextureAtlas_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.UpdateAssociatedCharacterPatches
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKitInfo::UpdateAssociatedCharacterPatches()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.UpdateAssociatedCharacterPatches");
        
        AGBKitInfo_UpdateAssociatedCharacterPatches_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.SetCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewCallSign                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKitInfo::SetCallSign(const BasicTypes::FString& NewCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.SetCallSign");
        
        AGBKitInfo_SetCallSign_Params params {};
        params.NewCallSign = NewCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.OnRep_ReplicatedLoadout
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKitInfo::OnRep_ReplicatedLoadout()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.OnRep_ReplicatedLoadout");
        
        AGBKitInfo_OnRep_ReplicatedLoadout_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.OnLoadPrimaryAssetsComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKitInfo::OnLoadPrimaryAssetsComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.OnLoadPrimaryAssetsComplete");
        
        AGBKitInfo_OnLoadPrimaryAssetsComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.GetPatchNormalTextureAtlas
     *         Flags  -> ()
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* AGBKitInfo::GetPatchNormalTextureAtlas()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.GetPatchNormalTextureAtlas");
        
        AGBKitInfo_GetPatchNormalTextureAtlas_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.GetPatchColourTextureAtlas
     *         Flags  -> ()
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* AGBKitInfo::GetPatchColourTextureAtlas()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.GetPatchColourTextureAtlas");
        
        AGBKitInfo_GetPatchColourTextureAtlas_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.GetKitName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBKitInfo::GetKitName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.GetKitName");
        
        AGBKitInfo_GetKitName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.GetCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBKitInfo::GetCallSign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.GetCallSign");
        
        AGBKitInfo_GetCallSign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.ClearPatchAtlas
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKitInfo::ClearPatchAtlas()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.ClearPatchAtlas");
        
        AGBKitInfo_ClearPatchAtlas_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.BP_GetKitJsonObj
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    VaRest::UVaRestJsonObject* AGBKitInfo::BP_GetKitJsonObj()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.BP_GetKitJsonObj");
        
        AGBKitInfo_BP_GetKitJsonObj_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.ApplyToCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKitInfo::ApplyToCharacter(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.ApplyToCharacter");
        
        AGBKitInfo_ApplyToCharacter_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKitInfo.AddPatch
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         PatchNameTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                PatchPath                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FSoftObjectPath                       TintMaterial                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                FallbackPatchPath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FSoftObjectPath                       FallbackTintMaterial                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKitInfo::AddPatch(const GameplayTags::FGameplayTag& PatchNameTag, const BasicTypes::FString& PatchPath, const CoreUObject::FSoftObjectPath& TintMaterial, const BasicTypes::FString& FallbackPatchPath, const CoreUObject::FSoftObjectPath& FallbackTintMaterial)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKitInfo.AddPatch");
        
        AGBKitInfo_AddPatch_Params params {};
        params.PatchNameTag = PatchNameTag;
        params.PatchPath = PatchPath;
        params.TintMaterial = TintMaterial;
        params.FallbackPatchPath = FallbackPatchPath;
        params.FallbackTintMaterial = FallbackTintMaterial;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.VerifyLoadoutExists
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLoadoutName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaInventoryPackage::VerifyLoadoutExists(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InLoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.VerifyLoadoutExists");
        
        UGBLuaInventoryPackage_VerifyLoadoutExists_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InLoadoutName = InLoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.SetItemFieldFromTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              LoadoutReferenceObject                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ItemType                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              NewItemData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaInventoryPackage::SetItemFieldFromTable(const LuaMachine::FLuaValue& LoadoutReferenceObject, const LuaMachine::FLuaValue& ItemType, const LuaMachine::FLuaValue& NewItemData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.SetItemFieldFromTable");
        
        UGBLuaInventoryPackage_SetItemFieldFromTable_Params params {};
        params.LoadoutReferenceObject = LoadoutReferenceObject;
        params.ItemType = ItemType;
        params.NewItemData = NewItemData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.RemoveItemTypesFromLoadoutTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InItemTypesToRemove                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLoadoutTable                                             (Parm, OutParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSplitItemField                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaInventoryPackage::RemoveItemTypesFromLoadoutTable(const LuaMachine::FLuaValue& InItemTypesToRemove, LuaMachine::FLuaValue* InLoadoutTable, LuaMachine::FLuaValue* InSplitItemField)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.RemoveItemTypesFromLoadoutTable");
        
        UGBLuaInventoryPackage_RemoveItemTypesFromLoadoutTable_Params params {};
        params.InItemTypesToRemove = InItemTypesToRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InLoadoutTable != nullptr)
            *InLoadoutTable = params.InLoadoutTable;
        if (InSplitItemField != nullptr)
            *InSplitItemField = params.InSplitItemField;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.LimitSupplies
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InKitJsonObj                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFragsLimit                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSmokesLimit                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFlashbangsLimit                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InBreachChargeLimit                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaInventoryPackage::LimitSupplies(const LuaMachine::FLuaValue& InKitJsonObj, const LuaMachine::FLuaValue& InFragsLimit, const LuaMachine::FLuaValue& InSmokesLimit, const LuaMachine::FLuaValue& InFlashbangsLimit, const LuaMachine::FLuaValue& InBreachChargeLimit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.LimitSupplies");
        
        UGBLuaInventoryPackage_LimitSupplies_Params params {};
        params.InKitJsonObj = InKitJsonObj;
        params.InFragsLimit = InFragsLimit;
        params.InSmokesLimit = InSmokesLimit;
        params.InFlashbangsLimit = InFlashbangsLimit;
        params.InBreachChargeLimit = InBreachChargeLimit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.GetPlayerLoadoutAsTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              LoadoutName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSplitItemField                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaInventoryPackage::GetPlayerLoadoutAsTable(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& LoadoutName, const LuaMachine::FLuaValue& InSplitItemField)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.GetPlayerLoadoutAsTable");
        
        UGBLuaInventoryPackage_GetPlayerLoadoutAsTable_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.LoadoutName = LoadoutName;
        params.InSplitItemField = InSplitItemField;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.GetItemDisplayName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InItemType                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InItemAssetPath                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaInventoryPackage::GetItemDisplayName(const LuaMachine::FLuaValue& InItemType, const LuaMachine::FLuaValue& InItemAssetPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.GetItemDisplayName");
        
        UGBLuaInventoryPackage_GetItemDisplayName_Params params {};
        params.InItemType = InItemType;
        params.InItemAssetPath = InItemAssetPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.GetCustomKitAsTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InKitFileName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSplitItemField                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaInventoryPackage::GetCustomKitAsTable(const LuaMachine::FLuaValue& InKitFileName, const LuaMachine::FLuaValue& InSplitItemField)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.GetCustomKitAsTable");
        
        UGBLuaInventoryPackage_GetCustomKitAsTable_Params params {};
        params.InKitFileName = InKitFileName;
        params.InSplitItemField = InSplitItemField;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.CreateLoadoutFromTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLoadoutName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLoadoutTable                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSplitItemField                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaInventoryPackage::CreateLoadoutFromTable(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InLoadoutName, const LuaMachine::FLuaValue& InLoadoutTable, const LuaMachine::FLuaValue& InSplitItemField)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.CreateLoadoutFromTable");
        
        UGBLuaInventoryPackage_CreateLoadoutFromTable_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InLoadoutName = InLoadoutName;
        params.InLoadoutTable = InLoadoutTable;
        params.InSplitItemField = InSplitItemField;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.ClearItemField
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InKitJsonObj                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InItemType                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaInventoryPackage::ClearItemField(const LuaMachine::FLuaValue& InKitJsonObj, const LuaMachine::FLuaValue& InItemType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.ClearItemField");
        
        UGBLuaInventoryPackage_ClearItemField_Params params {};
        params.InKitJsonObj = InKitJsonObj;
        params.InItemType = InItemType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInventoryPackage.AddCustomKitTableToLoadoutTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InCustomKitTable                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLoadoutTable                                             (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaInventoryPackage::AddCustomKitTableToLoadoutTable(LuaMachine::FLuaValue* InCustomKitTable, LuaMachine::FLuaValue* InLoadoutTable)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInventoryPackage.AddCustomKitTableToLoadoutTable");
        
        UGBLuaInventoryPackage_AddCustomKitTableToLoadoutTable_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InCustomKitTable != nullptr)
            *InCustomKitTable = params.InCustomKitTable;
        if (InLoadoutTable != nullptr)
            *InLoadoutTable = params.InLoadoutTable;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaMathPackage.GetRandomRange
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              Min                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              Max                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaMathPackage::GetRandomRange(const LuaMachine::FLuaValue& Min, const LuaMachine::FLuaValue& Max)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaMathPackage.GetRandomRange");
        
        UGBLuaMathPackage_GetRandomRange_Params params {};
        params.Min = Min;
        params.Max = Max;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaMathPackage.GetRandom
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              Max                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaMathPackage::GetRandom(const LuaMachine::FLuaValue& Max)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaMathPackage.GetRandom");
        
        UGBLuaMathPackage_GetRandom_Params params {};
        params.Max = Max;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.ValidatePlayer
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::ValidatePlayer(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.ValidatePlayer");
        
        UGBLuaPlayerPackage_ValidatePlayer_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.Teleport
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLocation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InRotation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::Teleport(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InLocation, const LuaMachine::FLuaValue& InRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.Teleport");
        
        UGBLuaPlayerPackage_Teleport_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InLocation = InLocation;
        params.InRotation = InRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.SpawnEffectAtPlayer
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InEffectClass                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::SpawnEffectAtPlayer(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InEffectClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.SpawnEffectAtPlayer");
        
        UGBLuaPlayerPackage_SpawnEffectAtPlayer_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InEffectClass = InEffectClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.ShowWorldPrompt
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLocation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::ShowWorldPrompt(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InLocation, const LuaMachine::FLuaValue& InTag, const LuaMachine::FLuaValue& InDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.ShowWorldPrompt");
        
        UGBLuaPlayerPackage_ShowWorldPrompt_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InLocation = InLocation;
        params.InTag = InTag;
        params.InDuration = InDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.ShowHint
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InHintName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InWidgetName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::ShowHint(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InHintName, const LuaMachine::FLuaValue& InWidgetName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.ShowHint");
        
        UGBLuaPlayerPackage_ShowHint_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InHintName = InHintName;
        params.InWidgetName = InWidgetName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.ShowGameMessage
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMessage                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InType                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::ShowGameMessage(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InMessage, const LuaMachine::FLuaValue& InType, const LuaMachine::FLuaValue& InDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.ShowGameMessage");
        
        UGBLuaPlayerPackage_ShowGameMessage_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InMessage = InMessage;
        params.InType = InType;
        params.InDuration = InDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.SetVolunteerStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InVolunteered                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::SetVolunteerStatus(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InVolunteered)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.SetVolunteerStatus");
        
        UGBLuaPlayerPackage_SetVolunteerStatus_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InVolunteered = InVolunteered;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.SetReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewStatus                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::SetReadyStatus(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InNewStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.SetReadyStatus");
        
        UGBLuaPlayerPackage_SetReadyStatus_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InNewStatus = InNewStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.SetLives
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewLives                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::SetLives(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InNewLives)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.SetLives");
        
        UGBLuaPlayerPackage_SetLives_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InNewLives = InNewLives;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.SetInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewInsertionPoint                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::SetInsertionPoint(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InNewInsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.SetInsertionPoint");
        
        UGBLuaPlayerPackage_SetInsertionPoint_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InNewInsertionPoint = InNewInsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.SetAllowedToRestart
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAllowed                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::SetAllowedToRestart(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InAllowed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.SetAllowedToRestart");
        
        UGBLuaPlayerPackage_SetAllowedToRestart_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InAllowed = InAllowed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.ResetPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::ResetPlayerScores(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.ResetPlayerScores");
        
        UGBLuaPlayerPackage_ResetPlayerScores_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.RemoveIgnoreUseInputReason
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::RemoveIgnoreUseInputReason(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.RemoveIgnoreUseInputReason");
        
        UGBLuaPlayerPackage_RemoveIgnoreUseInputReason_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.NotifyObjectiveStatusUpdate
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMissionObjectiveActor                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InStatusUpdateType                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFloatParam                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::NotifyObjectiveStatusUpdate(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InMissionObjectiveActor, const LuaMachine::FLuaValue& InStatusUpdateType, const LuaMachine::FLuaValue& InFloatParam)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.NotifyObjectiveStatusUpdate");
        
        UGBLuaPlayerPackage_NotifyObjectiveStatusUpdate_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InMissionObjectiveActor = InMissionObjectiveActor;
        params.InStatusUpdateType = InStatusUpdateType;
        params.InFloatParam = InFloatParam;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.Kill
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::Kill(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.Kill");
        
        UGBLuaPlayerPackage_Kill_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.IsAlive
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::IsAlive(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.IsAlive");
        
        UGBLuaPlayerPackage_IsAlive_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.IsABot
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::IsABot(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.IsABot");
        
        UGBLuaPlayerPackage_IsABot_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.HasItemWithTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::HasItemWithTag(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.HasItemWithTag");
        
        UGBLuaPlayerPackage_HasItemWithTag_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InTag = InTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.HasGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTagName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::HasGameplayTag(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InTagName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.HasGameplayTag");
        
        UGBLuaPlayerPackage_HasGameplayTag_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InTagName = InTagName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GiveItem
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InItemClass                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InEquip                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GiveItem(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InItemClass, const LuaMachine::FLuaValue& InEquip)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GiveItem");
        
        UGBLuaPlayerPackage_GiveItem_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InItemClass = InItemClass;
        params.InEquip = InEquip;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetVolunteerStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetVolunteerStatus(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetVolunteerStatus");
        
        UGBLuaPlayerPackage_GetVolunteerStatus_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetReadyStatus(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetReadyStatus");
        
        UGBLuaPlayerPackage_GetReadyStatus_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetPlayerState
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetPlayerState(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetPlayerState");
        
        UGBLuaPlayerPackage_GetPlayerState_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetPlayerStat
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InKey                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetPlayerStat(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetPlayerStat");
        
        UGBLuaPlayerPackage_GetPlayerStat_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InKey = InKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetName(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetName");
        
        UGBLuaPlayerPackage_GetName_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetLives
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetLives(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetLives");
        
        UGBLuaPlayerPackage_GetLives_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetInventory
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetInventory(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetInventory");
        
        UGBLuaPlayerPackage_GetInventory_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetInsertionPoint(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetInsertionPoint");
        
        UGBLuaPlayerPackage_GetInsertionPoint_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetCharacter
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetCharacter(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetCharacter");
        
        UGBLuaPlayerPackage_GetCharacter_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.GetCallSign
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::GetCallSign(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.GetCallSign");
        
        UGBLuaPlayerPackage_GetCallSign_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.FreezePlayer
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::FreezePlayer(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.FreezePlayer");
        
        UGBLuaPlayerPackage_FreezePlayer_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InDuration = InDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.Damage
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDamageAmount                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDamageType                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::Damage(const LuaMachine::FLuaValue& InPlayerIdOrObject, const LuaMachine::FLuaValue& InDamageAmount, const LuaMachine::FLuaValue& InDamageType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.Damage");
        
        UGBLuaPlayerPackage_Damage_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        params.InDamageAmount = InDamageAmount;
        params.InDamageType = InDamageType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.CheckCallSignProfanity
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InCallSign                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaPlayerPackage::CheckCallSignProfanity(const LuaMachine::FLuaValue& InCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.CheckCallSignProfanity");
        
        UGBLuaPlayerPackage_CheckCallSignProfanity_Params params {};
        params.InCallSign = InCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.AwardPlayerScore
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObjectState                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InScoreName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InScoreMultiple                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::AwardPlayerScore(const LuaMachine::FLuaValue& InPlayerIdOrObjectState, const LuaMachine::FLuaValue& InScoreName, const LuaMachine::FLuaValue& InScoreMultiple)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.AwardPlayerScore");
        
        UGBLuaPlayerPackage_AwardPlayerScore_Params params {};
        params.InPlayerIdOrObjectState = InPlayerIdOrObjectState;
        params.InScoreName = InScoreName;
        params.InScoreMultiple = InScoreMultiple;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaPlayerPackage.AddIgnoreUseInputReason
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaPlayerPackage::AddIgnoreUseInputReason(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaPlayerPackage.AddIgnoreUseInputReason");
        
        UGBLuaPlayerPackage_AddIgnoreUseInputReason_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToScript
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InValue                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaStaticsLibrary::LuaValueToScript(const LuaMachine::FLuaValue& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToScript");
        
        UGBLuaStaticsLibrary_LuaValueToScript_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToPlayerState
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InValue                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerState* UGBLuaStaticsLibrary::LuaValueToPlayerState(CoreUObject::UObject* WorldContextObject, const LuaMachine::FLuaValue& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToPlayerState");
        
        UGBLuaStaticsLibrary_LuaValueToPlayerState_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToPlayerController
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InValue                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerController*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerController* UGBLuaStaticsLibrary::LuaValueToPlayerController(CoreUObject::UObject* WorldContextObject, const LuaMachine::FLuaValue& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToPlayerController");
        
        UGBLuaStaticsLibrary_LuaValueToPlayerController_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToCharacter
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InValue                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* UGBLuaStaticsLibrary::LuaValueToCharacter(CoreUObject::UObject* WorldContextObject, const LuaMachine::FLuaValue& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaValueToCharacter");
        
        UGBLuaStaticsLibrary_LuaValueToCharacter_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaTableToRotator
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InValue                                                    (Parm, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator UGBLuaStaticsLibrary::LuaTableToRotator(const LuaMachine::FLuaValue& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.LuaTableToRotator");
        
        UGBLuaStaticsLibrary_LuaTableToRotator_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.GetEmptyArgs
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<LuaMachine::FLuaValue>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<LuaMachine::FLuaValue> UGBLuaStaticsLibrary::GetEmptyArgs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.GetEmptyArgs");
        
        UGBLuaStaticsLibrary_GetEmptyArgs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.GetArgsFromSingle
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InArg                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<LuaMachine::FLuaValue>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<LuaMachine::FLuaValue> UGBLuaStaticsLibrary::GetArgsFromSingle(const LuaMachine::FLuaValue& InArg)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.GetArgsFromSingle");
        
        UGBLuaStaticsLibrary_GetArgsFromSingle_Params params {};
        params.InArg = InArg;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.BuildVector
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::ULuaBlueprintPackage*                  LuaBlueprintPackage                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Vector                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaStaticsLibrary::BuildVector(LuaMachine::ULuaBlueprintPackage* LuaBlueprintPackage, const CoreUObject::FVector& Vector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.BuildVector");
        
        UGBLuaStaticsLibrary_BuildVector_Params params {};
        params.LuaBlueprintPackage = LuaBlueprintPackage;
        params.Vector = Vector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.BuildRotator
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::ULuaBlueprintPackage*                  LuaBlueprintPackage                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Rotator                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaStaticsLibrary::BuildRotator(LuaMachine::ULuaBlueprintPackage* LuaBlueprintPackage, const CoreUObject::FRotator& Rotator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.BuildRotator");
        
        UGBLuaStaticsLibrary_BuildRotator_Params params {};
        params.LuaBlueprintPackage = LuaBlueprintPackage;
        params.Rotator = Rotator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaStaticsLibrary.ActorsToLuaTable
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::ULuaState*                             LuaStateClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                Actors                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaStaticsLibrary::ActorsToLuaTable(CoreUObject::UObject* WorldContextObject, LuaMachine::ULuaState* LuaStateClass, BasicTypes::TArray<Engine::AActor*> Actors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaStaticsLibrary.ActorsToLuaTable");
        
        UGBLuaStaticsLibrary_ActorsToLuaTable_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LuaStateClass = LuaStateClass;
        params.Actors = Actors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaTimerPackage.SetTimer
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTimerHandle                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTable                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFunction                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InRate                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLoop                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaTimerPackage::SetTimer(const LuaMachine::FLuaValue& InTimerHandle, const LuaMachine::FLuaValue& InTable, const LuaMachine::FLuaValue& InFunction, const LuaMachine::FLuaValue& InRate, const LuaMachine::FLuaValue& InLoop)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaTimerPackage.SetTimer");
        
        UGBLuaTimerPackage_SetTimer_Params params {};
        params.InTimerHandle = InTimerHandle;
        params.InTable = InTable;
        params.InFunction = InFunction;
        params.InRate = InRate;
        params.InLoop = InLoop;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaTimerPackage.ClearTimer
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTimerHandle                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaTimerPackage::ClearTimer(const LuaMachine::FLuaValue& InTimerHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaTimerPackage.ClearTimer");
        
        UGBLuaTimerPackage_ClearTimer_Params params {};
        params.InTimerHandle = InTimerHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaTimerPackage.ClearAll
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaTimerPackage::ClearAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaTimerPackage.ClearAll");
        
        UGBLuaTimerPackage_ClearAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorSubtract
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorSubtract(const LuaMachine::FLuaValue& A, const LuaMachine::FLuaValue& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorSubtract");
        
        UGBLuaVectorPackage_VectorSubtract_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorStr
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              LuaVector                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorStr(const LuaMachine::FLuaValue& LuaVector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorStr");
        
        UGBLuaVectorPackage_VectorStr_Params params {};
        params.LuaVector = LuaVector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorSizeSquared2D
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorSizeSquared2D(const LuaMachine::FLuaValue& A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorSizeSquared2D");
        
        UGBLuaVectorPackage_VectorSizeSquared2D_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorSizeSquared
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorSizeSquared(const LuaMachine::FLuaValue& A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorSizeSquared");
        
        UGBLuaVectorPackage_VectorSizeSquared_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorSize2D
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorSize2D(const LuaMachine::FLuaValue& A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorSize2D");
        
        UGBLuaVectorPackage_VectorSize2D_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorSize
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorSize(const LuaMachine::FLuaValue& A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorSize");
        
        UGBLuaVectorPackage_VectorSize_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorNew
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              SelfPackage                                                (Parm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              X                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              Y                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              Z                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorNew(const LuaMachine::FLuaValue& SelfPackage, const LuaMachine::FLuaValue& X, const LuaMachine::FLuaValue& Y, const LuaMachine::FLuaValue& Z)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorNew");
        
        UGBLuaVectorPackage_VectorNew_Params params {};
        params.SelfPackage = SelfPackage;
        params.X = X;
        params.Y = Y;
        params.Z = Z;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorMultiply
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorMultiply(const LuaMachine::FLuaValue& A, const LuaMachine::FLuaValue& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorMultiply");
        
        UGBLuaVectorPackage_VectorMultiply_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorEquals
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorEquals(const LuaMachine::FLuaValue& A, const LuaMachine::FLuaValue& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorEquals");
        
        UGBLuaVectorPackage_VectorEquals_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorDivide
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorDivide(const LuaMachine::FLuaValue& A, const LuaMachine::FLuaValue& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorDivide");
        
        UGBLuaVectorPackage_VectorDivide_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.VectorAdd
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::VectorAdd(const LuaMachine::FLuaValue& A, const LuaMachine::FLuaValue& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.VectorAdd");
        
        UGBLuaVectorPackage_VectorAdd_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaVectorPackage.BuildVector
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Vector                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaVectorPackage::BuildVector(const CoreUObject::FVector& Vector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaVectorPackage.BuildVector");
        
        UGBLuaVectorPackage_BuildVector_Params params {};
        params.Vector = Vector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISettings.SetAISettingsForSkillLevel
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InSkillLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SettingName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InFloat                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                inString                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bFlushAfterSaving                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAISettings::SetAISettingsForSkillLevel(int32_t InSkillLevel, const BasicTypes::FName& SettingName, float InFloat, const BasicTypes::FString& inString, bool bFlushAfterSaving)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISettings.SetAISettingsForSkillLevel");
        
        UGBAISettings_SetAISettingsForSkillLevel_Params params {};
        params.InSkillLevel = InSkillLevel;
        params.SettingName = SettingName;
        params.InFloat = InFloat;
        params.inString = inString;
        params.bFlushAfterSaving = bFlushAfterSaving;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISettings.GetAISettingsForSkillLevel
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            SkillLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBAISettingsInfo                    ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBAISettingsInfo UGBAISettings::GetAISettingsForSkillLevel(int32_t SkillLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISettings.GetAISettingsForSkillLevel");
        
        UGBAISettings_GetAISettingsForSkillLevel_Params params {};
        params.SkillLevel = SkillLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAISettings.FlushConfigAfterSavingAISettings
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAISettings::FlushConfigAfterSavingAISettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAISettings.FlushConfigAfterSavingAISettings");
        
        UGBAISettings_FlushConfigAfterSavingAISettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.ScreenshotRequested
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameViewportClient::ScreenshotRequested()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.ScreenshotRequested");
        
        UGBGameViewportClient_ScreenshotRequested_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.GetTravelFailureInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                OutLastAttemptedURL                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ETravelFailure                             OutLastTravelFailureType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutLastTravelErrorString                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameViewportClient::GetTravelFailureInfo(BasicTypes::FString* OutLastAttemptedURL, Engine::ETravelFailure* OutLastTravelFailureType, BasicTypes::FString* OutLastTravelErrorString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.GetTravelFailureInfo");
        
        UGBGameViewportClient_GetTravelFailureInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutLastAttemptedURL != nullptr)
            *OutLastAttemptedURL = params.OutLastAttemptedURL;
        if (OutLastTravelFailureType != nullptr)
            *OutLastTravelFailureType = params.OutLastTravelFailureType;
        if (OutLastTravelErrorString != nullptr)
            *OutLastTravelErrorString = params.OutLastTravelErrorString;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.GetNetworkFailureInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                OutLastAttemptedURL                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ENetworkFailure                            OutLastNetworkFailureType                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutLastNetworkErrorString                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameViewportClient::GetNetworkFailureInfo(BasicTypes::FString* OutLastAttemptedURL, Engine::ENetworkFailure* OutLastNetworkFailureType, BasicTypes::FString* OutLastNetworkErrorString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.GetNetworkFailureInfo");
        
        UGBGameViewportClient_GetNetworkFailureInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutLastAttemptedURL != nullptr)
            *OutLastAttemptedURL = params.OutLastAttemptedURL;
        if (OutLastNetworkFailureType != nullptr)
            *OutLastNetworkFailureType = params.OutLastNetworkFailureType;
        if (OutLastNetworkErrorString != nullptr)
            *OutLastNetworkErrorString = params.OutLastNetworkErrorString;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.GetGameViewportClient
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBGameViewportClient*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBGameViewportClient* UGBGameViewportClient::GetGameViewportClient(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.GetGameViewportClient");
        
        UGBGameViewportClient_GetGameViewportClient_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.GetDisconnectReason
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UGBGameViewportClient::GetDisconnectReason()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.GetDisconnectReason");
        
        UGBGameViewportClient_GetDisconnectReason_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.ClearTravelFailureInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameViewportClient::ClearTravelFailureInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.ClearTravelFailureInfo");
        
        UGBGameViewportClient_ClearTravelFailureInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.ClearNetworkFailure
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameViewportClient::ClearNetworkFailure()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.ClearNetworkFailure");
        
        UGBGameViewportClient_ClearNetworkFailure_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameViewportClient.ClearDisconnectReason
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameViewportClient::ClearDisconnectReason()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameViewportClient.ClearDisconnectReason");
        
        UGBGameViewportClient_ClearDisconnectReason_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGlobalAbilitySystem.RemoveGlobalGameplayEffect
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayEffect*                GameplayEffectClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGlobalAbilitySystem::RemoveGlobalGameplayEffect(GameplayAbilities::UGameplayEffect* GameplayEffectClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGlobalAbilitySystem.RemoveGlobalGameplayEffect");
        
        UGBGlobalAbilitySystem_RemoveGlobalGameplayEffect_Params params {};
        params.GameplayEffectClass = GameplayEffectClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGlobalAbilitySystem.RemoveGlobalGameplayAbility
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBGameplayAbility*                  GameplayAbilityClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGlobalAbilitySystem::RemoveGlobalGameplayAbility(GroundBranch::UGBGameplayAbility* GameplayAbilityClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGlobalAbilitySystem.RemoveGlobalGameplayAbility");
        
        UGBGlobalAbilitySystem_RemoveGlobalGameplayAbility_Params params {};
        params.GameplayAbilityClass = GameplayAbilityClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGlobalAbilitySystem.RemoveAbilitySystemComp
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAbilitySystemComponent*           AbilitySystemComp                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGlobalAbilitySystem::RemoveAbilitySystemComp(GroundBranch::UGBAbilitySystemComponent* AbilitySystemComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGlobalAbilitySystem.RemoveAbilitySystemComp");
        
        UGBGlobalAbilitySystem_RemoveAbilitySystemComp_Params params {};
        params.AbilitySystemComp = AbilitySystemComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGlobalAbilitySystem.ApplyGlobalGameplayEffect
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayEffect*                GameplayEffectClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGlobalAbilitySystem::ApplyGlobalGameplayEffect(GameplayAbilities::UGameplayEffect* GameplayEffectClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGlobalAbilitySystem.ApplyGlobalGameplayEffect");
        
        UGBGlobalAbilitySystem_ApplyGlobalGameplayEffect_Params params {};
        params.GameplayEffectClass = GameplayEffectClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGlobalAbilitySystem.AddGlobalGameplayAbility
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBGameplayAbility*                  GameplayAbilityClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGlobalAbilitySystem::AddGlobalGameplayAbility(GroundBranch::UGBGameplayAbility* GameplayAbilityClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGlobalAbilitySystem.AddGlobalGameplayAbility");
        
        UGBGlobalAbilitySystem_AddGlobalGameplayAbility_Params params {};
        params.GameplayAbilityClass = GameplayAbilityClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGlobalAbilitySystem.AddAbilitySystemComp
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBAbilitySystemComponent*           AbilitySystemComp                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGlobalAbilitySystem::AddAbilitySystemComp(GroundBranch::UGBAbilitySystemComponent* AbilitySystemComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGlobalAbilitySystem.AddAbilitySystemComp");
        
        UGBGlobalAbilitySystem_AddAbilitySystemComp_Params params {};
        params.AbilitySystemComp = AbilitySystemComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGrenade.SyncCurrentSpeed
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGrenade::SyncCurrentSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGrenade.SyncCurrentSpeed");
        
        AGBGrenade_SyncCurrentSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGrenade.ServerSetCurrentSpeed
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewCurrentSpeed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGrenade::ServerSetCurrentSpeed(int32_t NewCurrentSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGrenade.ServerSetCurrentSpeed");
        
        AGBGrenade_ServerSetCurrentSpeed_Params params {};
        params.NewCurrentSpeed = NewCurrentSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGrenade.GetCurrentSpeed
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGrenade::GetCurrentSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGrenade.GetCurrentSpeed");
        
        AGBGrenade_GetCurrentSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGrenade.ChangeThrowSpeed
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGrenade::ChangeThrowSpeed(int32_t Direction)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGrenade.ChangeThrowSpeed");
        
        AGBGrenade_ChangeThrowSpeed_Params params {};
        params.Direction = Direction;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHair.AddAdditionalMeshes
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHair::AddAdditionalMeshes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHair.AddAdditionalMeshes");
        
        AGBHair_AddAdditionalMeshes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHead.OnTakeHit
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RefBoneName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RefPosPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHead::OnTakeHit(const BasicTypes::FName& RefBoneName, const CoreUObject::FVector& RefPosPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHead.OnTakeHit");
        
        AGBHead_OnTakeHit_Params params {};
        params.RefBoneName = RefBoneName;
        params.RefPosPosition = RefPosPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHead.OnPostLoadMeshComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHead::OnPostLoadMeshComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHead.OnPostLoadMeshComplete");
        
        AGBHead_OnPostLoadMeshComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHead.OnLoadMeshComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHead::OnLoadMeshComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHead.OnLoadMeshComplete");
        
        AGBHead_OnLoadMeshComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHolster.HolsterItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBHolster::HolsterItem(GroundBranch::AGBInvItem* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHolster.HolsterItem");
        
        AGBHolster_HolsterItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHolster.GetHolsteredItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBHolster::GetHolsteredItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHolster.GetHolsteredItem");
        
        AGBHolster_GetHolsteredItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.SuggestHint
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::SuggestHint(const BasicTypes::FName& HintName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.SuggestHint");
        
        AGBHUD_SuggestHint_Params params {};
        params.HintName = HintName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowWarningEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  WarningName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowWarningEvent(const BasicTypes::FName& WarningName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowWarningEvent");
        
        AGBHUD_ShowWarningEvent_Params params {};
        params.WarningName = WarningName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowReadyRoomPlayerNameEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ETeamElement                         PlayerTeamElement                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowReadyRoomPlayerNameEvent(const BasicTypes::FString& PlayerName, GroundBranch::ETeamElement PlayerTeamElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowReadyRoomPlayerNameEvent");
        
        AGBHUD_ShowReadyRoomPlayerNameEvent_Params params {};
        params.PlayerName = PlayerName;
        params.PlayerTeamElement = PlayerTeamElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowRadialMenuEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<UMG::UUserWidget*>              RadialMenuEntries                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowRadialMenuEvent(BasicTypes::TArray<UMG::UUserWidget*> RadialMenuEntries)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowRadialMenuEvent");
        
        AGBHUD_ShowRadialMenuEvent_Params params {};
        params.RadialMenuEntries = RadialMenuEntries;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowRadialItemsMenuEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      Items                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowRadialItemsMenuEvent(BasicTypes::TArray<GroundBranch::AGBInvItem*> Items)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowRadialItemsMenuEvent");
        
        AGBHUD_ShowRadialItemsMenuEvent_Params params {};
        params.Items = Items;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowMenuEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MenuType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowMenuEvent(const BasicTypes::FName& MenuType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowMenuEvent");
        
        AGBHUD_ShowMenuEvent_Params params {};
        params.MenuType = MenuType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowHint
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TSoftClassPtr<UMG::UUserWidget>        HintWidgetClass                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowHint(const BasicTypes::FName& HintName, BasicTypes::TSoftClassPtr<UMG::UUserWidget> HintWidgetClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowHint");
        
        AGBHUD_ShowHint_Params params {};
        params.HintName = HintName;
        params.HintWidgetClass = HintWidgetClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ShowFriendlyPlayerNameEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ETeamElement                         PlayerTeamElement                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ShowFriendlyPlayerNameEvent(const BasicTypes::FString& PlayerName, GroundBranch::ETeamElement PlayerTeamElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ShowFriendlyPlayerNameEvent");
        
        AGBHUD_ShowFriendlyPlayerNameEvent_Params params {};
        params.PlayerName = PlayerName;
        params.PlayerTeamElement = PlayerTeamElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OpenUserMenu
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OpenUserMenu(const BasicTypes::FString& MenuName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OpenUserMenu");
        
        AGBHUD_OpenUserMenu_Params params {};
        params.MenuName = MenuName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OpenRadialUserMenu
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OpenRadialUserMenu(const BasicTypes::FString& MenuName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OpenRadialUserMenu");
        
        AGBHUD_OpenRadialUserMenu_Params params {};
        params.MenuName = MenuName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OpenLinearUserMenu
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OpenLinearUserMenu(const BasicTypes::FString& MenuName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OpenLinearUserMenu");
        
        AGBHUD_OpenLinearUserMenu_Params params {};
        params.MenuName = MenuName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OnSuggestHintEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OnSuggestHintEvent(const BasicTypes::FName& HintName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OnSuggestHintEvent");
        
        AGBHUD_OnSuggestHintEvent_Params params {};
        params.HintName = HintName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OnShowHUDEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHUD::OnShowHUDEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OnShowHUDEvent");
        
        AGBHUD_OnShowHUDEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OnShowHintEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftClassPtr<UMG::UUserWidget>        HintWidgetClass                                            (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OnShowHintEvent(BasicTypes::TSoftClassPtr<UMG::UUserWidget> HintWidgetClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OnShowHintEvent");
        
        AGBHUD_OnShowHintEvent_Params params {};
        params.HintWidgetClass = HintWidgetClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OnInventorySlotEvent
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bImmediate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OnInventorySlotEvent(int32_t Index, bool bImmediate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OnInventorySlotEvent");
        
        AGBHUD_OnInventorySlotEvent_Params params {};
        params.Index = Index;
        params.bImmediate = bImmediate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OnColourBlindnessFilterUpdateEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHUD::OnColourBlindnessFilterUpdateEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OnColourBlindnessFilterUpdateEvent");
        
        AGBHUD_OnColourBlindnessFilterUpdateEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.OnChatLineAddedEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      SenderGBPlayerState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DisplayTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::OnChatLineAddedEvent(GroundBranch::AGBPlayerState* SenderGBPlayerState, const BasicTypes::FName& Type, float DisplayTime, const BasicTypes::FString& Message)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.OnChatLineAddedEvent");
        
        AGBHUD_OnChatLineAddedEvent_Params params {};
        params.SenderGBPlayerState = SenderGBPlayerState;
        params.Type = Type;
        params.DisplayTime = DisplayTime;
        params.Message = Message;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.IsMenuVisibleEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MenuType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBHUD::IsMenuVisibleEvent(const BasicTypes::FName& MenuType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.IsMenuVisibleEvent");
        
        AGBHUD_IsMenuVisibleEvent_Params params {};
        params.MenuType = MenuType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.InventorySlot
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bImmediate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::InventorySlot(int32_t Index, bool bImmediate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.InventorySlot");
        
        AGBHUD_InventorySlot_Params params {};
        params.Index = Index;
        params.bImmediate = bImmediate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.HintValid
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBHUD::HintValid(const BasicTypes::FName& HintName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.HintValid");
        
        AGBHUD_HintValid_Params params {};
        params.HintName = HintName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.HideReadyRoomPlayerNameEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHUD::HideReadyRoomPlayerNameEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.HideReadyRoomPlayerNameEvent");
        
        AGBHUD_HideReadyRoomPlayerNameEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.HideRadialItemsMenuEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHUD::HideRadialItemsMenuEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.HideRadialItemsMenuEvent");
        
        AGBHUD_HideRadialItemsMenuEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.HideMenuEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  MenuType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::HideMenuEvent(const BasicTypes::FName& MenuType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.HideMenuEvent");
        
        AGBHUD_HideMenuEvent_Params params {};
        params.MenuType = MenuType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.HideFriendlyPlayerNameEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBHUD::HideFriendlyPlayerNameEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.HideFriendlyPlayerNameEvent");
        
        AGBHUD_HideFriendlyPlayerNameEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.GetViewTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AGBHUD::GetViewTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.GetViewTarget");
        
        AGBHUD_GetViewTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.GetUserMenu
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutMenuContent                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBHUD::GetUserMenu(const BasicTypes::FString& MenuName, BasicTypes::TArray<BasicTypes::FString>* OutMenuContent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.GetUserMenu");
        
        AGBHUD_GetUserMenu_Params params {};
        params.MenuName = MenuName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMenuContent != nullptr)
            *OutMenuContent = params.OutMenuContent;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ApplyPlayerSettingsEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   GBPlayerSettings                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ApplyPlayerSettingsEvent(GroundBranch::UGBPlayerSettings* GBPlayerSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ApplyPlayerSettingsEvent");
        
        AGBHUD_ApplyPlayerSettingsEvent_Params params {};
        params.GBPlayerSettings = GBPlayerSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBHUD.ApplyPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   PlayerSettings                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBHUD::ApplyPlayerSettings(GroundBranch::UGBPlayerSettings* PlayerSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBHUD.ApplyPlayerSettings");
        
        AGBHUD_ApplyPlayerSettings_Params params {};
        params.PlayerSettings = PlayerSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBIngameMapWidget.GetCommandComp
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerCommandComponent*           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBPlayerCommandComponent* UGBIngameMapWidget::GetCommandComp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBIngameMapWidget.GetCommandComp");
        
        UGBIngameMapWidget_GetCommandComp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInputOverrideInterface.OverrideInputKey
     *         Flags  -> ()
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EBPInputEvent                        EventType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AmountDepressed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bGamepad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IGBInputOverrideInterface::OverrideInputKey(const InputCore::FKey& Key, GroundBranch::EBPInputEvent EventType, float AmountDepressed, bool bGamepad)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInputOverrideInterface.OverrideInputKey");
        
        IGBInputOverrideInterface_OverrideInputKey_Params params {};
        params.Key = Key;
        params.EventType = EventType;
        params.AmountDepressed = AmountDepressed;
        params.bGamepad = bGamepad;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInputOverrideInterface.OverrideInputAxis
     *         Flags  -> ()
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NumSamples                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bGamepad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IGBInputOverrideInterface::OverrideInputAxis(const InputCore::FKey& Key, float Delta, float DeltaTime, int32_t NumSamples, bool bGamepad)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInputOverrideInterface.OverrideInputAxis");
        
        IGBInputOverrideInterface_OverrideInputAxis_Params params {};
        params.Key = Key;
        params.Delta = Delta;
        params.DeltaTime = DeltaTime;
        params.NumSamples = NumSamples;
        params.bGamepad = bGamepad;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.SetInsertionPointName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewInsertionPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBInsertionPoint::SetInsertionPointName(const BasicTypes::FName& NewInsertionPointName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.SetInsertionPointName");
        
        AGBInsertionPoint_SetInsertionPointName_Params params {};
        params.NewInsertionPointName = NewInsertionPointName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.InsertionPointUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInsertionPoint::InsertionPointUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.InsertionPointUpdated");
        
        AGBInsertionPoint_InsertionPointUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetTopDownView
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInsertionPoint::GetTopDownView()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetTopDownView");
        
        AGBInsertionPoint_GetTopDownView_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetSideView
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBInsertionPoint::GetSideView()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetSideView");
        
        AGBInsertionPoint_GetSideView_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetSequenceToPlayBeforeInfil
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBInsertionPoint::GetSequenceToPlayBeforeInfil()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetSequenceToPlayBeforeInfil");
        
        AGBInsertionPoint_GetSequenceToPlayBeforeInfil_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetSequenceToPlayAfterInfil
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBInsertionPoint::GetSequenceToPlayAfterInfil()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetSequenceToPlayAfterInfil");
        
        AGBInsertionPoint_GetSequenceToPlayAfterInfil_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetPlayers
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBPlayerState*>  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBPlayerState*> AGBInsertionPoint::GetPlayers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetPlayers");
        
        AGBInsertionPoint_GetPlayers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetNumberOfActivePlayerStarts
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBInsertionPoint::GetNumberOfActivePlayerStarts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetNumberOfActivePlayerStarts");
        
        AGBInsertionPoint_GetNumberOfActivePlayerStarts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.GetMaxSupportedPlayers
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBInsertionPoint::GetMaxSupportedPlayers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.GetMaxSupportedPlayers");
        
        AGBInsertionPoint_GetMaxSupportedPlayers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInsertionPoint.CreateAssociatedPlayerStarts
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBInsertionPoint::CreateAssociatedPlayerStarts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInsertionPoint.CreateAssociatedPlayerStarts");
        
        AGBInsertionPoint_CreateAssociatedPlayerStarts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.SyncCount
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::SyncCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.SyncCount");
        
        UGBInternalMagazineComponent_SyncCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.StartPlusOne
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBInternalMagazineComponent::StartPlusOne()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.StartPlusOne");
        
        UGBInternalMagazineComponent_StartPlusOne_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.SetIsFiringFromOpenBolt
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewIsFiringFromOpenBolt                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::SetIsFiringFromOpenBolt(bool bNewIsFiringFromOpenBolt)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.SetIsFiringFromOpenBolt");
        
        UGBInternalMagazineComponent_SetIsFiringFromOpenBolt_Params params {};
        params.bNewIsFiringFromOpenBolt = bNewIsFiringFromOpenBolt;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.SetCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::SetCount(int32_t NewCount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.SetCount");
        
        UGBInternalMagazineComponent_SetCount_Params params {};
        params.NewCount = NewCount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.SetChamberedRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       NewChamberedRound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::SetChamberedRound(GroundBranch::AGBBulletItem* NewChamberedRound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.SetChamberedRound");
        
        UGBInternalMagazineComponent_SetChamberedRound_Params params {};
        params.NewChamberedRound = NewChamberedRound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.SetBulletId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewBulletId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::SetBulletId(const CoreUObject::FPrimaryAssetId& NewBulletId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.SetBulletId");
        
        UGBInternalMagazineComponent_SetBulletId_Params params {};
        params.NewBulletId = NewBulletId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.SetBoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewBoltIsHeldOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::SetBoltHeldOpen(bool bNewBoltIsHeldOpen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.SetBoltHeldOpen");
        
        UGBInternalMagazineComponent_SetBoltHeldOpen_Params params {};
        params.bNewBoltIsHeldOpen = bNewBoltIsHeldOpen;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.OnRep_Count
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::OnRep_Count()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.OnRep_Count");
        
        UGBInternalMagazineComponent_OnRep_Count_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.OnRep_BoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::OnRep_BoltHeldOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.OnRep_BoltHeldOpen");
        
        UGBInternalMagazineComponent_OnRep_BoltHeldOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.OnBulletIdUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInternalMagazineComponent::OnBulletIdUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.OnBulletIdUpdated");
        
        UGBInternalMagazineComponent_OnBulletIdUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.IsLiveRoundChambered
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBInternalMagazineComponent::IsLiveRoundChambered()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.IsLiveRoundChambered");
        
        UGBInternalMagazineComponent_IsLiveRoundChambered_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.GetIsFiringFromOpenBolt
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBInternalMagazineComponent::GetIsFiringFromOpenBolt()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.GetIsFiringFromOpenBolt");
        
        UGBInternalMagazineComponent_GetIsFiringFromOpenBolt_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.GetCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBInternalMagazineComponent::GetCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.GetCount");
        
        UGBInternalMagazineComponent_GetCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.GetChamberedRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBInternalMagazineComponent::GetChamberedRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.GetChamberedRound");
        
        UGBInternalMagazineComponent_GetChamberedRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.GetCapacity
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBInternalMagazineComponent::GetCapacity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.GetCapacity");
        
        UGBInternalMagazineComponent_GetCapacity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.GetBulletItemClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBInternalMagazineComponent::GetBulletItemClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.GetBulletItemClass");
        
        UGBInternalMagazineComponent_GetBulletItemClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.GetBoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBInternalMagazineComponent::GetBoltHeldOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.GetBoltHeldOpen");
        
        UGBInternalMagazineComponent_GetBoltHeldOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.FindCompatibleRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBInternalMagazineComponent::FindCompatibleRound(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.FindCompatibleRound");
        
        UGBInternalMagazineComponent_FindCompatibleRound_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInternalMagazineComponent.AddRoundToMagazine
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBInternalMagazineComponent::AddRoundToMagazine()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInternalMagazineComponent.AddRoundToMagazine");
        
        UGBInternalMagazineComponent_AddRoundToMagazine_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.SetCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMagazine::SetCount(int32_t NewCount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.SetCount");
        
        AGBMagazine_SetCount_Params params {};
        params.NewCount = NewCount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.SetBulletId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewBulletId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMagazine::SetBulletId(const CoreUObject::FPrimaryAssetId& NewBulletId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.SetBulletId");
        
        AGBMagazine_SetBulletId_Params params {};
        params.NewBulletId = NewBulletId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.OnRep_Count
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBMagazine::OnRep_Count()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.OnRep_Count");
        
        AGBMagazine_OnRep_Count_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.OnBulletIdUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBMagazine::OnBulletIdUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.OnBulletIdUpdated");
        
        AGBMagazine_OnBulletIdUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.GetTraceColourIndexForRound
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBMagazine::GetTraceColourIndexForRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.GetTraceColourIndexForRound");
        
        AGBMagazine_GetTraceColourIndexForRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.GetCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBMagazine::GetCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.GetCount");
        
        AGBMagazine_GetCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.GetCapacity
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBMagazine::GetCapacity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.GetCapacity");
        
        AGBMagazine_GetCapacity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.GetBulletProjectileClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* AGBMagazine::GetBulletProjectileClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.GetBulletProjectileClass");
        
        AGBMagazine_GetBulletProjectileClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMagazine.AdjustCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMagazine::AdjustCount(int32_t Amount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMagazine.AdjustCount");
        
        AGBMagazine_AdjustCount_Params params {};
        params.Amount = Amount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMinimap.GetApplicableMissionVariantNames
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> AGBMinimap::GetApplicableMissionVariantNames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMinimap.GetApplicableMissionVariantNames");
        
        AGBMinimap_GetApplicableMissionVariantNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.SetBotDefs
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            NewDefs                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBMissionData::SetBotDefs(uint8_t TeamId, BasicTypes::TArray<BasicTypes::FString> NewDefs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.SetBotDefs");
        
        UGBMissionData_SetBotDefs_Params params {};
        params.TeamId = TeamId;
        params.NewDefs = NewDefs;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetObjectiveDataFromMissionFile
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MissionFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeHiddenObjectives                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBObjectiveData                     ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBObjectiveData UGBMissionData::GetObjectiveDataFromMissionFile(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& MissionFileName, bool bIncludeHiddenObjectives)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetObjectiveDataFromMissionFile");
        
        UGBMissionData_GetObjectiveDataFromMissionFile_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.MissionFileName = MissionFileName;
        params.bIncludeHiddenObjectives = bIncludeHiddenObjectives;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetMissionSaveAsFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InVariantName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InScriptName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBMissionData::GetMissionSaveAsFilename(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& InVariantName, const BasicTypes::FString& InScriptName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetMissionSaveAsFilename");
        
        UGBMissionData_GetMissionSaveAsFilename_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.InVariantName = InVariantName;
        params.InScriptName = InScriptName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetCampaignObjectiveNameToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InMissionTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBMissionData::GetCampaignObjectiveNameToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& InMissionTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetCampaignObjectiveNameToken");
        
        UGBMissionData_GetCampaignObjectiveNameToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.InMissionTitle = InMissionTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetCampaignMissionTypeToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBMissionData::GetCampaignMissionTypeToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetCampaignMissionTypeToken");
        
        UGBMissionData_GetCampaignMissionTypeToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetCampaignMissionNameToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBMissionData::GetCampaignMissionNameToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetCampaignMissionNameToken");
        
        UGBMissionData_GetCampaignMissionNameToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetCampaignMissionBriefingToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                BriefingField                                              (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBMissionData::GetCampaignMissionBriefingToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& BriefingField)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetCampaignMissionBriefingToken");
        
        UGBMissionData_GetCampaignMissionBriefingToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.BriefingField = BriefingField;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetCampaignHotspotBriefingToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBMissionData::GetCampaignHotspotBriefingToken(const BasicTypes::FName& InHotspotCodename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetCampaignHotspotBriefingToken");
        
        UGBMissionData_GetCampaignHotspotBriefingToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.GetBotDefs
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UGBMissionData::GetBotDefs(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.GetBotDefs");
        
        UGBMissionData_GetBotDefs_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.CreateLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsEditing                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                LoadoutFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* UGBMissionData::CreateLoadoutInfo(CoreUObject::UObject* WorldContextObject, bool bIsEditing, const BasicTypes::FString& LoadoutFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.CreateLoadoutInfo");
        
        UGBMissionData_CreateLoadoutInfo_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.bIsEditing = bIsEditing;
        params.LoadoutFileName = LoadoutFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.ClearBotRoster
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBMissionData::ClearBotRoster()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.ClearBotRoster");
        
        UGBMissionData_ClearBotRoster_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.ClearAILoadouts
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBMissionData::ClearAILoadouts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.ClearAILoadouts");
        
        UGBMissionData_ClearAILoadouts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionData.AddAILoadout
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                LoadoutFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBMissionData::AddAILoadout(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& LoadoutFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionData.AddAILoadout");
        
        UGBMissionData_AddAILoadout_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LoadoutFileName = LoadoutFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.WaitingOnPrerequisiteObjectives
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::WaitingOnPrerequisiteObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.WaitingOnPrerequisiteObjectives");
        
        AGBMissionObjective_WaitingOnPrerequisiteObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.SetPrerequisiteObjectives
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> NewPrerequisiteObjectives                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::SetPrerequisiteObjectives(BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> NewPrerequisiteObjectives)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.SetPrerequisiteObjectives");
        
        AGBMissionObjective_SetPrerequisiteObjectives_Params params {};
        params.NewPrerequisiteObjectives = NewPrerequisiteObjectives;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.SetObjectiveType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewObjectiveScriptFilename                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::SetObjectiveType(const BasicTypes::FString& NewObjectiveScriptFilename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.SetObjectiveType");
        
        AGBMissionObjective_SetObjectiveType_Params params {};
        params.NewObjectiveScriptFilename = NewObjectiveScriptFilename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.SetMissionObjectiveStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMissionObjectiveStatus            NewMissionObjectiveStatus                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::SetMissionObjectiveStatus(GroundBranch::EGBMissionObjectiveStatus NewMissionObjectiveStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.SetMissionObjectiveStatus");
        
        AGBMissionObjective_SetMissionObjectiveStatus_Params params {};
        params.NewMissionObjectiveStatus = NewMissionObjectiveStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.SetLinkedActorList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> NewLinkedActorList                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::SetLinkedActorList(BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> NewLinkedActorList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.SetLinkedActorList");
        
        AGBMissionObjective_SetLinkedActorList_Params params {};
        params.NewLinkedActorList = NewLinkedActorList;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.SetGenericBool2
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewGenericBool2                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::SetGenericBool2(bool bNewGenericBool2)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.SetGenericBool2");
        
        AGBMissionObjective_SetGenericBool2_Params params {};
        params.bNewGenericBool2 = bNewGenericBool2;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.SetGenericBool
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewGenericBool                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::SetGenericBool(bool bNewGenericBool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.SetGenericBool");
        
        AGBMissionObjective_SetGenericBool_Params params {};
        params.bNewGenericBool = bNewGenericBool;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.ResetObjectiveStatus
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::ResetObjectiveStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.ResetObjectiveStatus");
        
        AGBMissionObjective_ResetObjectiveStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.ReloadObjectiveScriptData
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::ReloadObjectiveScriptData()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.ReloadObjectiveScriptData");
        
        AGBMissionObjective_ReloadObjectiveScriptData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.OnSearchReportedInVolume
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBGameTrigger*                      GameTrigger                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBSearchableProp*                   SearchedActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::OnSearchReportedInVolume(GroundBranch::AGBGameTrigger* GameTrigger, GroundBranch::AGBSearchableProp* SearchedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.OnSearchReportedInVolume");
        
        AGBMissionObjective_OnSearchReportedInVolume_Params params {};
        params.GameTrigger = GameTrigger;
        params.SearchedActor = SearchedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.OnRep_MissionObjectiveStatus
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::OnRep_MissionObjectiveStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.OnRep_MissionObjectiveStatus");
        
        AGBMissionObjective_OnRep_MissionObjectiveStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.OnObjectiveStatusChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::OnObjectiveStatusChanged(GroundBranch::AGBMissionObjective* MissionObjective)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.OnObjectiveStatusChanged");
        
        AGBMissionObjective_OnObjectiveStatusChanged_Params params {};
        params.MissionObjective = MissionObjective;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetUseSingleLinkedActor
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetUseSingleLinkedActor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetUseSingleLinkedActor");
        
        AGBMissionObjective_GetUseSingleLinkedActor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetUseOnlyMissionActors
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetUseOnlyMissionActors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetUseOnlyMissionActors");
        
        AGBMissionObjective_GetUseOnlyMissionActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetUseLinkedActorList
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetUseLinkedActorList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetUseLinkedActorList");
        
        AGBMissionObjective_GetUseLinkedActorList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetUseBool2
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetUseBool2()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetUseBool2");
        
        AGBMissionObjective_GetUseBool2_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetUseBool
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetUseBool()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetUseBool");
        
        AGBMissionObjective_GetUseBool_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetSortedMissionObjectivesSimple
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> InAllObjectivesList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutPrimaryList                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutSecondaryList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::GetSortedMissionObjectivesSimple(BasicTypes::TArray<GroundBranch::AGBMissionObjective*> InAllObjectivesList, uint8_t TeamId, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutPrimaryList, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutSecondaryList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetSortedMissionObjectivesSimple");
        
        AGBMissionObjective_GetSortedMissionObjectivesSimple_Params params {};
        params.InAllObjectivesList = InAllObjectivesList;
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPrimaryList != nullptr)
            *OutPrimaryList = params.OutPrimaryList;
        if (OutSecondaryList != nullptr)
            *OutSecondaryList = params.OutSecondaryList;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetSortedMissionObjectives
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> InAllObjectivesList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutInactiveList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutActiveList                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutPartiallyCompleteList                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutFailedList                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBMissionObjective*> OutCompletedList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::GetSortedMissionObjectives(BasicTypes::TArray<GroundBranch::AGBMissionObjective*> InAllObjectivesList, uint8_t TeamId, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutInactiveList, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutActiveList, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutPartiallyCompleteList, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutFailedList, BasicTypes::TArray<GroundBranch::AGBMissionObjective*>* OutCompletedList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetSortedMissionObjectives");
        
        AGBMissionObjective_GetSortedMissionObjectives_Params params {};
        params.InAllObjectivesList = InAllObjectivesList;
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutInactiveList != nullptr)
            *OutInactiveList = params.OutInactiveList;
        if (OutActiveList != nullptr)
            *OutActiveList = params.OutActiveList;
        if (OutPartiallyCompleteList != nullptr)
            *OutPartiallyCompleteList = params.OutPartiallyCompleteList;
        if (OutFailedList != nullptr)
            *OutFailedList = params.OutFailedList;
        if (OutCompletedList != nullptr)
            *OutCompletedList = params.OutCompletedList;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetSortedMissionObjectiveInfoSimple
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo> InAllObjectiveInfoList                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo> OutPrimaryList                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo> OutSecondaryList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBMissionObjective::GetSortedMissionObjectiveInfoSimple(BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo> InAllObjectiveInfoList, uint8_t TeamId, BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo>* OutPrimaryList, BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo>* OutSecondaryList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetSortedMissionObjectiveInfoSimple");
        
        AGBMissionObjective_GetSortedMissionObjectiveInfoSimple_Params params {};
        params.InAllObjectiveInfoList = InAllObjectiveInfoList;
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPrimaryList != nullptr)
            *OutPrimaryList = params.OutPrimaryList;
        if (OutSecondaryList != nullptr)
            *OutSecondaryList = params.OutSecondaryList;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetPrerequisiteObjectives
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> AGBMissionObjective::GetPrerequisiteObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetPrerequisiteObjectives");
        
        AGBMissionObjective_GetPrerequisiteObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBMissionObjective::GetObjectiveType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveType");
        
        AGBMissionObjective_GetObjectiveType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveTitle
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveTitle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveTitle");
        
        AGBMissionObjective_GetObjectiveTitle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveTimedActionSpecificToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InMissionTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveTimedActionSpecificToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& InMissionTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveTimedActionSpecificToken");
        
        AGBMissionObjective_GetObjectiveTimedActionSpecificToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.InMissionTitle = InMissionTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveTimedActionGenericToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ObjectiveType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveTimedActionGenericToken(const BasicTypes::FName& ObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveTimedActionGenericToken");
        
        AGBMissionObjective_GetObjectiveTimedActionGenericToken_Params params {};
        params.ObjectiveType = ObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveSubObjectiveCompleteSpecificToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InMissionTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveSubObjectiveCompleteSpecificToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& InMissionTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveSubObjectiveCompleteSpecificToken");
        
        AGBMissionObjective_GetObjectiveSubObjectiveCompleteSpecificToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.InMissionTitle = InMissionTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveSubObjectiveCompleteGenericToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ObjectiveType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveSubObjectiveCompleteGenericToken(const BasicTypes::FName& ObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveSubObjectiveCompleteGenericToken");
        
        AGBMissionObjective_GetObjectiveSubObjectiveCompleteGenericToken_Params params {};
        params.ObjectiveType = ObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveScriptTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue AGBMissionObjective::GetObjectiveScriptTable()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveScriptTable");
        
        AGBMissionObjective_GetObjectiveScriptTable_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveScriptFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveScriptFilename()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveScriptFilename");
        
        AGBMissionObjective_GetObjectiveScriptFilename_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveFailedSpecificToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InMissionTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveFailedSpecificToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& InMissionTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveFailedSpecificToken");
        
        AGBMissionObjective_GetObjectiveFailedSpecificToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.InMissionTitle = InMissionTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveFailedGenericToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ObjectiveType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveFailedGenericToken(const BasicTypes::FName& ObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveFailedGenericToken");
        
        AGBMissionObjective_GetObjectiveFailedGenericToken_Params params {};
        params.ObjectiveType = ObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveCompleteSpecificToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotCodename                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InMissionTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveCompleteSpecificToken(const BasicTypes::FName& InHotspotCodename, int32_t InMissionSequenceNumber, const BasicTypes::FString& InMissionTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveCompleteSpecificToken");
        
        AGBMissionObjective_GetObjectiveCompleteSpecificToken_Params params {};
        params.InHotspotCodename = InHotspotCodename;
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        params.InMissionTitle = InMissionTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetObjectiveCompleteGenericToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ObjectiveType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetObjectiveCompleteGenericToken(const BasicTypes::FName& ObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetObjectiveCompleteGenericToken");
        
        AGBMissionObjective_GetObjectiveCompleteGenericToken_Params params {};
        params.ObjectiveType = ObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetMissionObjectiveStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMissionObjectiveStatus            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBMissionObjectiveStatus AGBMissionObjective::GetMissionObjectiveStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetMissionObjectiveStatus");
        
        AGBMissionObjective_GetMissionObjectiveStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetListDisplayPriority
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBMissionObjective::GetListDisplayPriority()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetListDisplayPriority");
        
        AGBMissionObjective_GetListDisplayPriority_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetLinkedActorList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> AGBMissionObjective::GetLinkedActorList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetLinkedActorList");
        
        AGBMissionObjective_GetLinkedActorList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetLinkedActorDescription
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetLinkedActorDescription()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetLinkedActorDescription");
        
        AGBMissionObjective_GetLinkedActorDescription_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetLinkedActorClass
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AGBMissionObjective::GetLinkedActorClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetLinkedActorClass");
        
        AGBMissionObjective_GetLinkedActorClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetIsPrimaryObjective
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetIsPrimaryObjective()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetIsPrimaryObjective");
        
        AGBMissionObjective_GetIsPrimaryObjective_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetIsHiddenObjective
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetIsHiddenObjective()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetIsHiddenObjective");
        
        AGBMissionObjective_GetIsHiddenObjective_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetGenericBool2
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetGenericBool2()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetGenericBool2");
        
        AGBMissionObjective_GetGenericBool2_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetGenericBool
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetGenericBool()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetGenericBool");
        
        AGBMissionObjective_GetGenericBool_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetDontLinkToSelf
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBMissionObjective::GetDontLinkToSelf()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetDontLinkToSelf");
        
        AGBMissionObjective_GetDontLinkToSelf_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetBoolDescription2
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetBoolDescription2()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetBoolDescription2");
        
        AGBMissionObjective_GetBoolDescription2_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetBoolDescription
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBMissionObjective::GetBoolDescription()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetBoolDescription");
        
        AGBMissionObjective_GetBoolDescription_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMissionObjective.GetBestMissionStatusUpdateToken
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBMissionObjective::GetBestMissionStatusUpdateToken()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMissionObjective.GetBestMissionStatusUpdateToken");
        
        AGBMissionObjective_GetBestMissionStatusUpdateToken_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMuzzleDevice.GetSuppressorSwitchValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBMuzzleDevice::GetSuppressorSwitchValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMuzzleDevice.GetSuppressorSwitchValue");
        
        AGBMuzzleDevice_GetSuppressorSwitchValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMuzzleDevice.GetMuzzleDeviceThread
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBMuzzleDevice::GetMuzzleDeviceThread()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMuzzleDevice.GetMuzzleDeviceThread");
        
        AGBMuzzleDevice_GetMuzzleDeviceThread_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBMuzzleDevice.GetAudioSignalRadius
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBMuzzleDevice::GetAudioSignalRadius()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBMuzzleDevice.GetAudioSignalRadius");
        
        AGBMuzzleDevice_GetAudioSignalRadius_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.UpdateCurrentShooterBB
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKytController::UpdateCurrentShooterBB()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.UpdateCurrentShooterBB");
        
        AGBKytController_UpdateCurrentShooterBB_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.UpdateBlackboardSearchParams
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               TargetLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SearchDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SearchTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::UpdateBlackboardSearchParams(const CoreUObject::FVector& TargetLocation, const CoreUObject::FVector& SearchDirection, float SearchTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.UpdateBlackboardSearchParams");
        
        AGBKytController_UpdateBlackboardSearchParams_Params params {};
        params.TargetLocation = TargetLocation;
        params.SearchDirection = SearchDirection;
        params.SearchTime = SearchTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.UnFreeze
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKytController::UnFreeze()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.UnFreeze");
        
        AGBKytController_UnFreeze_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.UdpateAimTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    NewAimTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::UdpateAimTarget(Engine::AActor* NewAimTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.UdpateAimTarget");
        
        AGBKytController_UdpateAimTarget_Params params {};
        params.NewAimTarget = NewAimTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.SetWantsPlayerState
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::SetWantsPlayerState(bool bValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.SetWantsPlayerState");
        
        AGBKytController_SetWantsPlayerState_Params params {};
        params.bValue = bValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.SetSquad
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAISquad*                          NewSquad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::SetSquad(GroundBranch::AGBAISquad* NewSquad)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.SetSquad");
        
        AGBKytController_SetSquad_Params params {};
        params.NewSquad = NewSquad;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.SetSearchTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::SetSearchTime(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.SetSearchTime");
        
        AGBKytController_SetSearchTime_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.SetAIState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAIState                           NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::SetAIState(GroundBranch::EGBAIState NewState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.SetAIState");
        
        AGBKytController_SetAIState_Params params {};
        params.NewState = NewState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.SetAIFocus
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    FocusTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::SetAIFocus(Engine::AActor* FocusTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.SetAIFocus");
        
        AGBKytController_SetAIFocus_Params params {};
        params.FocusTarget = FocusTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.Reload
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKytController::Reload()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.Reload");
        
        AGBKytController_Reload_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.ReceiveROEChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAIRulesEngage                       NewROE                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::ReceiveROEChanged(GroundBranch::EAIRulesEngage NewROE)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.ReceiveROEChanged");
        
        AGBKytController_ReceiveROEChanged_Params params {};
        params.NewROE = NewROE;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.ReceiveMoveCommand
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FAIMoveCommand                       MoveCommand                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::ReceiveMoveCommand(const GroundBranch::FAIMoveCommand& MoveCommand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.ReceiveMoveCommand");
        
        AGBKytController_ReceiveMoveCommand_Params params {};
        params.MoveCommand = MoveCommand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.ReceiveGoCodeChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAIGoCodes                           NewGoCode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::ReceiveGoCodeChanged(GroundBranch::EAIGoCodes NewGoCode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.ReceiveGoCodeChanged");
        
        AGBKytController_ReceiveGoCodeChanged_Params params {};
        params.NewGoCode = NewGoCode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.OnLoadoutApplied
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        InGBCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::OnLoadoutApplied(GroundBranch::AGBCharacter* InGBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.OnLoadoutApplied");
        
        AGBKytController_OnLoadoutApplied_Params params {};
        params.InGBCharacter = InGBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.NeedsReload
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::NeedsReload()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.NeedsReload");
        
        AGBKytController_NeedsReload_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.MoveCommandUpdated
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FAIMoveCommand                       NextMoveCommand                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::MoveCommandUpdated(const GroundBranch::FAIMoveCommand& NextMoveCommand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.MoveCommandUpdated");
        
        AGBKytController_MoveCommandUpdated_Params params {};
        params.NextMoveCommand = NextMoveCommand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.IsFrozen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::IsFrozen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.IsFrozen");
        
        AGBKytController_IsFrozen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.IsDebugFrozen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::IsDebugFrozen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.IsDebugFrozen");
        
        AGBKytController_IsDebugFrozen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.IsAlive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::IsAlive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.IsAlive");
        
        AGBKytController_IsAlive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.HasTarget
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::HasTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.HasTarget");
        
        AGBKytController_HasTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GrenadeWarn
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::GrenadeWarn(const CoreUObject::FVector& Location)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GrenadeWarn");
        
        AGBKytController_GrenadeWarn_Params params {};
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetVisibilityModifier
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBKytController::GetVisibilityModifier(GroundBranch::AGBCharacter* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetVisibilityModifier");
        
        AGBKytController_GetVisibilityModifier_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetTimeOnCurrentTarget
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBKytController::GetTimeOnCurrentTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetTimeOnCurrentTarget");
        
        AGBKytController_GetTimeOnCurrentTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetSuppressionValue
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBKytController::GetSuppressionValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetSuppressionValue");
        
        AGBKytController_GetSuppressionValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetSquadSize
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBKytController::GetSquadSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetSquadSize");
        
        AGBKytController_GetSquadSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetSquad
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAISquad*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAISquad* AGBKytController::GetSquad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetSquad");
        
        AGBKytController_GetSquad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetSearchTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBKytController::GetSearchTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetSearchTime");
        
        AGBKytController_GetSearchTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetPerceptionCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBKytController::GetPerceptionCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetPerceptionCount");
        
        AGBKytController_GetPerceptionCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetGrenadeLaunchVelocity
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBKytController::GetGrenadeLaunchVelocity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetGrenadeLaunchVelocity");
        
        AGBKytController_GetGrenadeLaunchVelocity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetGBChar
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBKytController::GetGBChar()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetGBChar");
        
        AGBKytController_GetGBChar_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetCommonBlackboard
     *         Flags  -> ()
     * Parameters:
     *         KytheraPlugin::UKytBlackboard*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    KytheraPlugin::UKytBlackboard* AGBKytController::GetCommonBlackboard()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetCommonBlackboard");
        
        AGBKytController_GetCommonBlackboard_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetAlertness
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBKytController::GetAlertness()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetAlertness");
        
        AGBKytController_GetAlertness_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.GetAIState
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBKytController::GetAIState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.GetAIState");
        
        AGBKytController_GetAIState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.Freeze
     *         Flags  -> ()
     * Parameters:
     *         float                                              FreezeTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::Freeze(float FreezeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.Freeze");
        
        AGBKytController_Freeze_Params params {};
        params.FreezeTime = FreezeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.FlashlightWarn
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        InstigatorChar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::FlashlightWarn(GroundBranch::AGBCharacter* InstigatorChar)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.FlashlightWarn");
        
        AGBKytController_FlashlightWarn_Params params {};
        params.InstigatorChar = InstigatorChar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.FindHidingSpot
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    HideFrom                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ActorClassFilter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                OutHidingSpots                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::FindHidingSpot(Engine::AActor* HideFrom, Engine::AActor* ActorClassFilter, BasicTypes::TArray<Engine::AActor*>* OutHidingSpots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.FindHidingSpot");
        
        AGBKytController_FindHidingSpot_Params params {};
        params.HideFrom = HideFrom;
        params.ActorClassFilter = ActorClassFilter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHidingSpots != nullptr)
            *OutHidingSpots = params.OutHidingSpots;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.DebugFreeze
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bShouldFreeze                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::DebugFreeze(bool bShouldFreeze)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.DebugFreeze");
        
        AGBKytController_DebugFreeze_Params params {};
        params.bShouldFreeze = bShouldFreeze;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.ComputeAndSetNextGuardPoint
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytController::ComputeAndSetNextGuardPoint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.ComputeAndSetNextGuardPoint");
        
        AGBKytController_ComputeAndSetNextGuardPoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.CommandIssued
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            CommandIdx                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Commander                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OptLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OptTargetActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::CommandIssued(int32_t CommandIdx, Engine::AActor* Commander, const CoreUObject::FVector& OptLocation, Engine::AActor* OptTargetActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.CommandIssued");
        
        AGBKytController_CommandIssued_Params params {};
        params.CommandIdx = CommandIdx;
        params.Commander = Commander;
        params.OptLocation = OptLocation;
        params.OptTargetActor = OptTargetActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.ClearSquad
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKytController::ClearSquad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.ClearSquad");
        
        AGBKytController_ClearSquad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytController.AICharacterDied
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               DeathLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytController::AICharacterDied(const CoreUObject::FVector& DeathLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytController.AICharacterDied");
        
        AGBKytController_AICharacterDied_Params params {};
        params.DeathLocation = DeathLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytDetectableActor.ShouldBeUsedAsTarget
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBKytDetectableActor::ShouldBeUsedAsTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytDetectableActor.ShouldBeUsedAsTarget");
        
        AGBKytDetectableActor_ShouldBeUsedAsTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytDetectableActor.Detected
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DetectedBy                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytDetectableActor::Detected(Engine::AActor* DetectedBy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytDetectableActor.Detected");
        
        AGBKytDetectableActor_Detected_Params params {};
        params.DetectedBy = DetectedBy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytFriendlyController.ResetPushState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKytFriendlyController::ResetPushState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytFriendlyController.ResetPushState");
        
        AGBKytFriendlyController_ResetPushState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytFriendlyController.OnControlledCharacterHit
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytFriendlyController::OnControlledCharacterHit(Engine::UPrimitiveComponent* HitComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytFriendlyController.OnControlledCharacterHit");
        
        AGBKytFriendlyController_OnControlledCharacterHit_Params params {};
        params.HitComponent = HitComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.NormalImpulse = NormalImpulse;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytFriendlyController.GetCommandBlackboard
     *         Flags  -> ()
     * Parameters:
     *         KytheraPlugin::UKytBlackboard*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    KytheraPlugin::UKytBlackboard* AGBKytFriendlyController::GetCommandBlackboard()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytFriendlyController.GetCommandBlackboard");
        
        AGBKytFriendlyController_GetCommandBlackboard_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytFriendlyController.CommandReceived
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAICommands                        Command                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBKytFriendlyController::CommandReceived(GroundBranch::EGBAICommands Command, const CoreUObject::FVector& Location, Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytFriendlyController.CommandReceived");
        
        AGBKytFriendlyController_CommandReceived_Params params {};
        params.Command = Command;
        params.Location = Location;
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytFriendlyController.ApplyPushForce
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBKytFriendlyController::ApplyPushForce()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytFriendlyController.ApplyPushForce");
        
        AGBKytFriendlyController_ApplyPushForce_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlatform.OnTakeHit
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RefBoneName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RefPosPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlatform::OnTakeHit(const BasicTypes::FName& RefBoneName, const CoreUObject::FVector& RefPosPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlatform.OnTakeHit");
        
        AGBPlatform_OnTakeHit_Params params {};
        params.RefBoneName = RefBoneName;
        params.RefPosPosition = RefPosPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCameraManager.GetViewPitchMin
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerCameraManager::GetViewPitchMin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCameraManager.GetViewPitchMin");
        
        AGBPlayerCameraManager_GetViewPitchMin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCameraManager.GetViewPitchMax
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerCameraManager::GetViewPitchMax()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCameraManager.GetViewPitchMax");
        
        AGBPlayerCameraManager_GetViewPitchMax_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCameraManager.GetCameraStyle
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBPlayerCameraManager::GetCameraStyle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCameraManager.GetCameraStyle");
        
        AGBPlayerCameraManager_GetCameraStyle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCommandComponent.SetWaypoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FAIMoveCommand                       MoveCommand                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::SetWaypoint(const GroundBranch::FAIMoveCommand& MoveCommand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCommandComponent.SetWaypoint");
        
        UGBPlayerCommandComponent_SetWaypoint_Params params {};
        params.MoveCommand = MoveCommand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.ROEChanged__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAIRulesEngage                       NewROE                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::ROEChanged__DelegateSignature(GroundBranch::EAIRulesEngage NewROE)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.ROEChanged__DelegateSignature");
        
        UGBPlayerCommandComponent_ROEChanged__DelegateSignature_Params params {};
        params.NewROE = NewROE;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.MoveCommandIssued__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FAIMoveCommand                       NewMoveCommand                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::MoveCommandIssued__DelegateSignature(const GroundBranch::FAIMoveCommand& NewMoveCommand)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.MoveCommandIssued__DelegateSignature");
        
        UGBPlayerCommandComponent_MoveCommandIssued__DelegateSignature_Params params {};
        params.NewMoveCommand = NewMoveCommand;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCommandComponent.IssueGoCommand
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAIGoCodes                           NewGoCode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::IssueGoCommand(GroundBranch::EAIGoCodes NewGoCode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCommandComponent.IssueGoCommand");
        
        UGBPlayerCommandComponent_IssueGoCommand_Params params {};
        params.NewGoCode = NewGoCode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.GoCodeIssued__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAIGoCodes                           NewGoCode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::GoCodeIssued__DelegateSignature(GroundBranch::EAIGoCodes NewGoCode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.GoCodeIssued__DelegateSignature");
        
        UGBPlayerCommandComponent_GoCodeIssued__DelegateSignature_Params params {};
        params.NewGoCode = NewGoCode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCommandComponent.DistributeCommand
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAICommands                        Command                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OptLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OptActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::DistributeCommand(GroundBranch::EGBAICommands Command, const CoreUObject::FVector& OptLocation, Engine::AActor* OptActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCommandComponent.DistributeCommand");
        
        UGBPlayerCommandComponent_DistributeCommand_Params params {};
        params.Command = Command;
        params.OptLocation = OptLocation;
        params.OptActor = OptActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.CommandSelected__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAICommands                        Command                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::CommandSelected__DelegateSignature(GroundBranch::EGBAICommands Command)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GroundBranch.GBPlayerCommandComponent.CommandSelected__DelegateSignature");
        
        UGBPlayerCommandComponent_CommandSelected__DelegateSignature_Params params {};
        params.Command = Command;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCommandComponent.ChangeROE
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAIRulesEngage                       NewROE                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerCommandComponent::ChangeROE(GroundBranch::EAIRulesEngage NewROE)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCommandComponent.ChangeROE");
        
        UGBPlayerCommandComponent_ChangeROE_Params params {};
        params.NewROE = NewROE;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerCommandComponent.AddWaypoint
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EAIGoCodes                           GoCode                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FAIMoveCommand                       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FAIMoveCommand UGBPlayerCommandComponent::AddWaypoint(const CoreUObject::FVector& Location, GroundBranch::EAIGoCodes GoCode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerCommandComponent.AddWaypoint");
        
        UGBPlayerCommandComponent_AddWaypoint_Params params {};
        params.Location = Location;
        params.GoCode = GoCode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerInput.ValidateInputSettings
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerInput::ValidateInputSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerInput.ValidateInputSettings");
        
        UGBPlayerInput_ValidateInputSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerInput.ApplyPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   PlayerSettings                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerInput::ApplyPlayerSettings(GroundBranch::UGBPlayerSettings* PlayerSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerInput.ApplyPlayerSettings");
        
        UGBPlayerInput_ApplyPlayerSettings_Params params {};
        params.PlayerSettings = PlayerSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.ShowLoadingScreen
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewLoadingScreenReason                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerLoadingScreenComponent::ShowLoadingScreen(const BasicTypes::FString& NewLoadingScreenReason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.ShowLoadingScreen");
        
        UGBPlayerLoadingScreenComponent_ShowLoadingScreen_Params params {};
        params.NewLoadingScreenReason = NewLoadingScreenReason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.SetLoadingScreenInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ServerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MissionTitle                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MapTitle                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MapAuthor                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MissionAuthor                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                GameModeAuthor                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    GameModeModID                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMapModded                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMissionModded                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerLoadingScreenComponent::SetLoadingScreenInfo(const BasicTypes::FString& ServerName, const BasicTypes::FString& MissionTitle, const BasicTypes::FString& MapTitle, const BasicTypes::FString& MapAuthor, const BasicTypes::FString& MissionAuthor, const BasicTypes::FString& GameModeAuthor, const ModKit::FUInt64& GameModeModID, bool bMapModded, bool bMissionModded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.SetLoadingScreenInfo");
        
        UGBPlayerLoadingScreenComponent_SetLoadingScreenInfo_Params params {};
        params.ServerName = ServerName;
        params.MissionTitle = MissionTitle;
        params.MapTitle = MapTitle;
        params.MapAuthor = MapAuthor;
        params.MissionAuthor = MissionAuthor;
        params.GameModeAuthor = GameModeAuthor;
        params.GameModeModID = GameModeModID;
        params.bMapModded = bMapModded;
        params.bMissionModded = bMissionModded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.SetCustomLoadingScreenText
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewText                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerLoadingScreenComponent::SetCustomLoadingScreenText(const BasicTypes::FString& NewText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.SetCustomLoadingScreenText");
        
        UGBPlayerLoadingScreenComponent_SetCustomLoadingScreenText_Params params {};
        params.NewText = NewText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.HideLoadingScreen
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerLoadingScreenComponent::HideLoadingScreen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerLoadingScreenComponent.HideLoadingScreen");
        
        UGBPlayerLoadingScreenComponent_HideLoadingScreen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerNightVisionStatus.OnViewTargetChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerNightVisionStatus::OnViewTargetChanged(GroundBranch::AGBPlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerNightVisionStatus.OnViewTargetChanged");
        
        AGBPlayerNightVisionStatus_OnViewTargetChanged_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerNightVisionStatus.OnSpectatorNightVisionModeChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerNightVisionStatus::OnSpectatorNightVisionModeChanged(GroundBranch::AGBPlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerNightVisionStatus.OnSpectatorNightVisionModeChanged");
        
        AGBPlayerNightVisionStatus_OnSpectatorNightVisionModeChanged_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerNightVisionStatus.OnCameraStyleChanged
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  OldCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  NewCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerNightVisionStatus::OnCameraStyleChanged(const BasicTypes::FName& OldCameraStyle, const BasicTypes::FName& NewCameraStyle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerNightVisionStatus.OnCameraStyleChanged");
        
        AGBPlayerNightVisionStatus_OnCameraStyleChanged_Params params {};
        params.OldCameraStyle = OldCameraStyle;
        params.NewCameraStyle = NewCameraStyle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerNightVisionStatus.Init
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerNightVisionStatus::Init()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerNightVisionStatus.Init");
        
        AGBPlayerNightVisionStatus_Init_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerNightVisionStatus.GetPlayerNightVisionStatus
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerNightVisionStatus::GetPlayerNightVisionStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerNightVisionStatus.GetPlayerNightVisionStatus");
        
        AGBPlayerNightVisionStatus_GetPlayerNightVisionStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.UpdateFOVDefault
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::UpdateFOVDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.UpdateFOVDefault");
        
        UGBPlayerSettings_UpdateFOVDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.SetPlayerUseElementCallSign
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewPlayerUseElementCallSign                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::SetPlayerUseElementCallSign(bool bNewPlayerUseElementCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.SetPlayerUseElementCallSign");
        
        UGBPlayerSettings_SetPlayerUseElementCallSign_Params params {};
        params.bNewPlayerUseElementCallSign = bNewPlayerUseElementCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.SetPlayerName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewPlayerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::SetPlayerName(const BasicTypes::FString& NewPlayerName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.SetPlayerName");
        
        UGBPlayerSettings_SetPlayerName_Params params {};
        params.NewPlayerName = NewPlayerName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.SetPlayerCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewPlayerCallSign                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::SetPlayerCallSign(const BasicTypes::FString& NewPlayerCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.SetPlayerCallSign");
        
        UGBPlayerSettings_SetPlayerCallSign_Params params {};
        params.NewPlayerCallSign = NewPlayerCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.SetPIPScopeResolutionScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewPIPScopeResolutionScale                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::SetPIPScopeResolutionScale(float NewPIPScopeResolutionScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.SetPIPScopeResolutionScale");
        
        UGBPlayerSettings_SetPIPScopeResolutionScale_Params params {};
        params.NewPIPScopeResolutionScale = NewPIPScopeResolutionScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.SetNVGVerticalScreenExtent
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewNVGVerticalScreenExtent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::SetNVGVerticalScreenExtent(float NewNVGVerticalScreenExtent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.SetNVGVerticalScreenExtent");
        
        UGBPlayerSettings_SetNVGVerticalScreenExtent_Params params {};
        params.NewNVGVerticalScreenExtent = NewNVGVerticalScreenExtent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.SceneViewportResized
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector2D                             ViewportSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::SceneViewportResized(const CoreUObject::FVector2D& ViewportSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.SceneViewportResized");
        
        UGBPlayerSettings_SceneViewportResized_Params params {};
        params.ViewportSize = ViewportSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.ResetHints
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::ResetHints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.ResetHints");
        
        UGBPlayerSettings_ResetHints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.ResetHiddenDiaglogs
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::ResetHiddenDiaglogs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.ResetHiddenDiaglogs");
        
        UGBPlayerSettings_ResetHiddenDiaglogs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.LoadSettings
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::LoadSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.LoadSettings");
        
        UGBPlayerSettings_LoadSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.HintValid
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBPlayerSettings::HintValid(const BasicTypes::FName& HintName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.HintValid");
        
        UGBPlayerSettings_HintValid_Params params {};
        params.HintName = HintName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.HideDialog
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  DialogName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::HideDialog(const BasicTypes::FName& DialogName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.HideDialog");
        
        UGBPlayerSettings_HideDialog_Params params {};
        params.DialogName = DialogName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.GetPlayerUseElementCallSign
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBPlayerSettings::GetPlayerUseElementCallSign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.GetPlayerUseElementCallSign");
        
        UGBPlayerSettings_GetPlayerUseElementCallSign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.GetPlayerName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBPlayerSettings::GetPlayerName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.GetPlayerName");
        
        UGBPlayerSettings_GetPlayerName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.GetPlayerCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBPlayerSettings::GetPlayerCallSign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.GetPlayerCallSign");
        
        UGBPlayerSettings_GetPlayerCallSign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.GetPIPScopeResolutionScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBPlayerSettings::GetPIPScopeResolutionScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.GetPIPScopeResolutionScale");
        
        UGBPlayerSettings_GetPIPScopeResolutionScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.CanShowDialog
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  DialogName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBPlayerSettings::CanShowDialog(const BasicTypes::FName& DialogName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.CanShowDialog");
        
        UGBPlayerSettings_CanShowDialog_Params params {};
        params.DialogName = DialogName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.BindSceneViewportResized
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::BindSceneViewportResized()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.BindSceneViewportResized");
        
        UGBPlayerSettings_BindSceneViewportResized_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.ApplySettings
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::ApplySettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.ApplySettings");
        
        UGBPlayerSettings_ApplySettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerSettings.ApplyNVIDIASettings
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBPlayerSettings::ApplyNVIDIASettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerSettings.ApplyNVIDIASettings");
        
        UGBPlayerSettings_ApplyNVIDIASettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmoPouch.SetModularity
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAmmoPouchModularity               NewModularity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAmmoPouch::SetModularity(GroundBranch::EGBAmmoPouchModularity NewModularity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmoPouch.SetModularity");
        
        AGBAmmoPouch_SetModularity_Params params {};
        params.NewModularity = NewModularity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmoPouch.OnLoadReplacementAmmoPouchAssetId
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAmmoPouch::OnLoadReplacementAmmoPouchAssetId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmoPouch.OnLoadReplacementAmmoPouchAssetId");
        
        AGBAmmoPouch_OnLoadReplacementAmmoPouchAssetId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmoPouch.InventoryItemAdded
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInvItem*                          InvItem                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAmmoPouch::InventoryItemAdded(GroundBranch::AGBCharacter* Character, GroundBranch::AGBInvItem* InvItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmoPouch.InventoryItemAdded");
        
        AGBAmmoPouch_InventoryItemAdded_Params params {};
        params.Character = Character;
        params.InvItem = InvItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmoPouch.InitReplacement
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAmmoPouchModularity               NewModularity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBAmmoPouch::InitReplacement(GroundBranch::EGBAmmoPouchModularity NewModularity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmoPouch.InitReplacement");
        
        AGBAmmoPouch_InitReplacement_Params params {};
        params.NewModularity = NewModularity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmoPouch.GetBestMatchingAmmoPouchId
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FPrimaryAssetId>   PouchItemAssetIds                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBAmmoPouchModularity               DesiredModularity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       CurrentAmmoPouchId                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FPrimaryAssetId                       OutAmmoPouchId                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBAmmoPouch::GetBestMatchingAmmoPouchId(BasicTypes::TArray<CoreUObject::FPrimaryAssetId> PouchItemAssetIds, GroundBranch::EGBAmmoPouchModularity DesiredModularity, const CoreUObject::FPrimaryAssetId& CurrentAmmoPouchId, CoreUObject::FPrimaryAssetId* OutAmmoPouchId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmoPouch.GetBestMatchingAmmoPouchId");
        
        AGBAmmoPouch_GetBestMatchingAmmoPouchId_Params params {};
        params.PouchItemAssetIds = PouchItemAssetIds;
        params.DesiredModularity = DesiredModularity;
        params.CurrentAmmoPouchId = CurrentAmmoPouchId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAmmoPouchId != nullptr)
            *OutAmmoPouchId = params.OutAmmoPouchId;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmoPouch.DelayedInit
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBAmmoPouch::DelayedInit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmoPouch.DelayedInit");
        
        AGBAmmoPouch_DelayedInit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayloadBase.GetRootInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBInvItemDragDropPayloadBase::GetRootInvItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayloadBase.GetRootInvItem");
        
        UGBInvItemDragDropPayloadBase_GetRootInvItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayloadBase.GetInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBInvItemDragDropPayloadBase::GetInvItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayloadBase.GetInvItem");
        
        UGBInvItemDragDropPayloadBase_GetInvItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayload.SetInvItemSkinAssetId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewInvItemSkinAssetId                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropPayload::SetInvItemSkinAssetId(const CoreUObject::FPrimaryAssetId& NewInvItemSkinAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayload.SetInvItemSkinAssetId");
        
        UGBInvItemDragDropPayload_SetInvItemSkinAssetId_Params params {};
        params.NewInvItemSkinAssetId = NewInvItemSkinAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayload.OnLoadAssetsComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropPayload::OnLoadAssetsComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayload.OnLoadAssetsComplete");
        
        UGBInvItemDragDropPayload_OnLoadAssetsComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayload.OnInit
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropPayload::OnInit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayload.OnInit");
        
        UGBInvItemDragDropPayload_OnInit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayload.LoadingAssetsComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropPayload::LoadingAssetsComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayload.LoadingAssetsComplete");
        
        UGBInvItemDragDropPayload_LoadingAssetsComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayload.InitModInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropPayload::InitModInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayload.InitModInfo");
        
        UGBInvItemDragDropPayload_InitModInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBInvItemDragDropPayload.Init
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBInvItemDragDropPayload::Init()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBInvItemDragDropPayload.Init");
        
        UGBInvItemDragDropPayload_Init_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPouchDragDropPayload.GetFillWithClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* UGBPouchDragDropPayload::GetFillWithClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPouchDragDropPayload.GetFillWithClass");
        
        UGBPouchDragDropPayload_GetFillWithClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytStatics.IsOnNavMesh
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PointToCheck                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ErrorTolerance                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutResolvedLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKytStatics::IsOnNavMesh(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& PointToCheck, const CoreUObject::FVector& ErrorTolerance, CoreUObject::FVector* OutResolvedLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytStatics.IsOnNavMesh");
        
        UGBKytStatics_IsOnNavMesh_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PointToCheck = PointToCheck;
        params.ErrorTolerance = ErrorTolerance;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutResolvedLocation != nullptr)
            *OutResolvedLocation = params.OutResolvedLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytStatics.GetRandomReachablePointInRadius
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InOrigin                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutRandomPoint                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKytStatics::GetRandomReachablePointInRadius(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& InOrigin, float Radius, CoreUObject::FVector* OutRandomPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytStatics.GetRandomReachablePointInRadius");
        
        UGBKytStatics_GetRandomReachablePointInRadius_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InOrigin = InOrigin;
        params.Radius = Radius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutRandomPoint != nullptr)
            *OutRandomPoint = params.OutRandomPoint;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBKytStatics.DoesPathExist
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InStart                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InEnd                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBKytStatics::DoesPathExist(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& InStart, const CoreUObject::FVector& InEnd)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBKytStatics.DoesPathExist");
        
        UGBKytStatics_DoesPathExist_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InStart = InStart;
        params.InEnd = InEnd;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLadder.SetupLadder
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBLadder::SetupLadder()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLadder.SetupLadder");
        
        AGBLadder_SetupLadder_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLadder.OnEndCursorOver
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       TouchedComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBLadder::OnEndCursorOver(Engine::UPrimitiveComponent* TouchedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLadder.OnEndCursorOver");
        
        AGBLadder_OnEndCursorOver_Params params {};
        params.TouchedComponent = TouchedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLadder.OnBeginCursorOver
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       TouchedComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBLadder::OnBeginCursorOver(Engine::UPrimitiveComponent* TouchedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLadder.OnBeginCursorOver");
        
        AGBLadder_OnBeginCursorOver_Params params {};
        params.TouchedComponent = TouchedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLadderComponent.GetLadderTop
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBLadderComponent::GetLadderTop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLadderComponent.GetLadderTop");
        
        UGBLadderComponent_GetLadderTop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLadderComponent.GetLadderBottom
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBLadderComponent::GetLadderBottom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLadderComponent.GetLadderBottom");
        
        UGBLadderComponent_GetLadderBottom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLocalPlayer.GetPlayerSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBPlayerSettings*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBPlayerSettings* UGBLocalPlayer::GetPlayerSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLocalPlayer.GetPlayerSettings");
        
        UGBLocalPlayer_GetPlayerSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLocalPlayer.Benchmark
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLocalPlayer::Benchmark(const BasicTypes::FString& Parameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLocalPlayer.Benchmark");
        
        UGBLocalPlayer_Benchmark_Params params {};
        params.Parameters = Parameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.ToString
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::ToString(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.ToString");
        
        UGBLuaActorPackage_ToString_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.SetTeamId
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::SetTeamId(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InTeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.SetTeamId");
        
        UGBLuaActorPackage_SetTeamId_Params params {};
        params.InActor = InActor;
        params.InTeamId = InTeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.SetHidden
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              inHidden                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaActorPackage::SetHidden(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& inHidden)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.SetHidden");
        
        UGBLuaActorPackage_SetHidden_Params params {};
        params.InActor = InActor;
        params.inHidden = inHidden;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.SetEnableCollision
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              Enabled                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaActorPackage::SetEnableCollision(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& Enabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.SetEnableCollision");
        
        UGBLuaActorPackage_SetEnableCollision_Params params {};
        params.InActor = InActor;
        params.Enabled = Enabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.SetActive
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewActive                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaActorPackage::SetActive(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InNewActive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.SetActive");
        
        UGBLuaActorPackage_SetActive_Params params {};
        params.InActor = InActor;
        params.InNewActive = InNewActive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.RemoveTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaActorPackage::RemoveTag(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.RemoveTag");
        
        UGBLuaActorPackage_RemoveTag_Params params {};
        params.InActor = InActor;
        params.InTag = InTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.IsWithinTriggerVolume
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InGameTrigger                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::IsWithinTriggerVolume(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InGameTrigger)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.IsWithinTriggerVolume");
        
        UGBLuaActorPackage_IsWithinTriggerVolume_Params params {};
        params.InActor = InActor;
        params.InGameTrigger = InGameTrigger;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.IsOverlapping
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              OtherActor                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::IsOverlapping(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& OtherActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.IsOverlapping");
        
        UGBLuaActorPackage_IsOverlapping_Params params {};
        params.InActor = InActor;
        params.OtherActor = OtherActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.IsColliding
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::IsColliding(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.IsColliding");
        
        UGBLuaActorPackage_IsColliding_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.IsActive
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::IsActive(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.IsActive");
        
        UGBLuaActorPackage_IsActive_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.HasTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::HasTag(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.HasTag");
        
        UGBLuaActorPackage_HasTag_Params params {};
        params.InActor = InActor;
        params.InTag = InTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetTeamId
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetTeamId(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetTeamId");
        
        UGBLuaActorPackage_GetTeamId_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetTags
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetTags(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetTags");
        
        UGBLuaActorPackage_GetTags_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              Index                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetTag(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetTag");
        
        UGBLuaActorPackage_GetTag_Params params {};
        params.InActor = InActor;
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetRotation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetRotation(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetRotation");
        
        UGBLuaActorPackage_GetRotation_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetOverlaps
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InActorClass                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetOverlaps(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InActorClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetOverlaps");
        
        UGBLuaActorPackage_GetOverlaps_Params params {};
        params.InActor = InActor;
        params.InActorClass = InActorClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetOverlappingPlayers
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetOverlappingPlayers(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetOverlappingPlayers");
        
        UGBLuaActorPackage_GetOverlappingPlayers_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetName(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetName");
        
        UGBLuaActorPackage_GetName_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetLocation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaActorPackage::GetLocation(const LuaMachine::FLuaValue& InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetLocation");
        
        UGBLuaActorPackage_GetLocation_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.GetActorRefInternal
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              PossibleActor                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* UGBLuaActorPackage::GetActorRefInternal(const LuaMachine::FLuaValue& PossibleActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.GetActorRefInternal");
        
        UGBLuaActorPackage_GetActorRefInternal_Params params {};
        params.PossibleActor = PossibleActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaActorPackage.AddTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActor                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaActorPackage::AddTag(const LuaMachine::FLuaValue& InActor, const LuaMachine::FLuaValue& InTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaActorPackage.AddTag");
        
        UGBLuaActorPackage_AddTag_Params params {};
        params.InActor = InActor;
        params.InTag = InTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.VerifyAILoadoutExists
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InLoadoutFilename                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::VerifyAILoadoutExists(const LuaMachine::FLuaValue& InLoadoutFilename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.VerifyAILoadoutExists");
        
        UGBLuaAIPackage_VerifyAILoadoutExists_Params params {};
        params.InLoadoutFilename = InLoadoutFilename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.TriggerFleeState
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              FleeFromLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::TriggerFleeState(const LuaMachine::FLuaValue& FleeFromLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.TriggerFleeState");
        
        UGBLuaAIPackage_TriggerFleeState_Params params {};
        params.FleeFromLocation = FleeFromLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.SetSquadSearchTarget
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InControllerClass                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSquadId                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTargetLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSearchTime                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::SetSquadSearchTarget(const LuaMachine::FLuaValue& InControllerClass, const LuaMachine::FLuaValue& InTag, const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InSquadId, const LuaMachine::FLuaValue& InTargetLocation, const LuaMachine::FLuaValue& InSearchTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.SetSquadSearchTarget");
        
        UGBLuaAIPackage_SetSquadSearchTarget_Params params {};
        params.InControllerClass = InControllerClass;
        params.InTag = InTag;
        params.InTeamId = InTeamId;
        params.InSquadId = InSquadId;
        params.InTargetLocation = InTargetLocation;
        params.InSearchTime = InSearchTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.SetSquadOrdersForAIController
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIController                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSquadOrders                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::SetSquadOrdersForAIController(const LuaMachine::FLuaValue& InAIController, const LuaMachine::FLuaValue& InSquadOrders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.SetSquadOrdersForAIController");
        
        UGBLuaAIPackage_SetSquadOrdersForAIController_Params params {};
        params.InAIController = InAIController;
        params.InSquadOrders = InSquadOrders;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.SetSquadOrders
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InControllerClass                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSquadId                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSquadOrders                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::SetSquadOrders(const LuaMachine::FLuaValue& InControllerClass, const LuaMachine::FLuaValue& InTag, const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InSquadId, const LuaMachine::FLuaValue& InSquadOrders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.SetSquadOrders");
        
        UGBLuaAIPackage_SetSquadOrders_Params params {};
        params.InControllerClass = InControllerClass;
        params.InTag = InTag;
        params.InTeamId = InTeamId;
        params.InSquadId = InSquadId;
        params.InSquadOrders = InSquadOrders;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.SetSearchTarget
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIController                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTargetLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSearchTime                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::SetSearchTarget(const LuaMachine::FLuaValue& InAIController, const LuaMachine::FLuaValue& InTargetLocation, const LuaMachine::FLuaValue& InSearchTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.SetSearchTarget");
        
        UGBLuaAIPackage_SetSearchTarget_Params params {};
        params.InAIController = InAIController;
        params.InTargetLocation = InTargetLocation;
        params.InSearchTime = InSearchTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.ProjectPointToNavigation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPoint                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InQueryExtent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::ProjectPointToNavigation(const LuaMachine::FLuaValue& InPoint, const LuaMachine::FLuaValue& InQueryExtent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.ProjectPointToNavigation");
        
        UGBLuaAIPackage_ProjectPointToNavigation_Params params {};
        params.InPoint = InPoint;
        params.InQueryExtent = InQueryExtent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.KillAI
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              AIController                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::KillAI(const LuaMachine::FLuaValue& AIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.KillAI");
        
        UGBLuaAIPackage_KillAI_Params params {};
        params.AIController = AIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.IsSpawnPointInHotspot
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAISpawnPoint                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAIHotspot                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::IsSpawnPointInHotspot(const LuaMachine::FLuaValue& InAISpawnPoint, const LuaMachine::FLuaValue& InAIHotspot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.IsSpawnPointInHotspot");
        
        UGBLuaAIPackage_IsSpawnPointInHotspot_Params params {};
        params.InAISpawnPoint = InAISpawnPoint;
        params.InAIHotspot = InAIHotspot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.IsOnNavMesh
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InLocationOrActor                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::IsOnNavMesh(const LuaMachine::FLuaValue& InLocationOrActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.IsOnNavMesh");
        
        UGBLuaAIPackage_IsOnNavMesh_Params params {};
        params.InLocationOrActor = InLocationOrActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.IsAI
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIController                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAIControllerTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::IsAI(const LuaMachine::FLuaValue& InAIController, const LuaMachine::FLuaValue& InAIControllerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.IsAI");
        
        UGBLuaAIPackage_IsAI_Params params {};
        params.InAIController = InAIController;
        params.InAIControllerTag = InAIControllerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetSquadOrders
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIController                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetSquadOrders(const LuaMachine::FLuaValue& InAIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetSquadOrders");
        
        UGBLuaAIPackage_GetSquadOrders_Params params {};
        params.InAIController = InAIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetSquadId
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIController                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetSquadId(const LuaMachine::FLuaValue& InAIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetSquadId");
        
        UGBLuaAIPackage_GetSquadId_Params params {};
        params.InAIController = InAIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetSpawnPointInfo
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSpawnPoint                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetSpawnPointInfo(const LuaMachine::FLuaValue& InSpawnPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetSpawnPointInfo");
        
        UGBLuaAIPackage_GetSpawnPointInfo_Params params {};
        params.InSpawnPoint = InSpawnPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetSpawnIsActiveAtCurrentTimeOfDay
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSpawnPoint                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetSpawnIsActiveAtCurrentTimeOfDay(const LuaMachine::FLuaValue& InSpawnPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetSpawnIsActiveAtCurrentTimeOfDay");
        
        UGBLuaAIPackage_GetSpawnIsActiveAtCurrentTimeOfDay_Params params {};
        params.InSpawnPoint = InSpawnPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetRandomReachablePointInRadius
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InOrigin                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InRadius                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetRandomReachablePointInRadius(const LuaMachine::FLuaValue& InOrigin, const LuaMachine::FLuaValue& InRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetRandomReachablePointInRadius");
        
        UGBLuaAIPackage_GetRandomReachablePointInRadius_Params params {};
        params.InOrigin = InOrigin;
        params.InRadius = InRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetMaxCount
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetMaxCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetMaxCount");
        
        UGBLuaAIPackage_GetMaxCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetGuardPointName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InGuardPoint                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetGuardPointName(const LuaMachine::FLuaValue& InGuardPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetGuardPointName");
        
        UGBLuaAIPackage_GetGuardPointName_Params params {};
        params.InGuardPoint = InGuardPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetControllers
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InControllerClass                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSquadId                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetControllers(const LuaMachine::FLuaValue& InControllerClass, const LuaMachine::FLuaValue& InTag, const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InSquadId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetControllers");
        
        UGBLuaAIPackage_GetControllers_Params params {};
        params.InControllerClass = InControllerClass;
        params.InTag = InTag;
        params.InTeamId = InTeamId;
        params.InSquadId = InSquadId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.GetAIHotspotName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIHotspot                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::GetAIHotspotName(const LuaMachine::FLuaValue& InAIHotspot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.GetAIHotspotName");
        
        UGBLuaAIPackage_GetAIHotspotName_Params params {};
        params.InAIHotspot = InAIHotspot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.DisableFleeState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::DisableFleeState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.DisableFleeState");
        
        UGBLuaAIPackage_DisableFleeState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.CreateWithTransform
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InVirtualSpawnPoint                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InSpawnTransform                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAIControllerTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFreezeTime                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::CreateWithTransform(const LuaMachine::FLuaValue& InVirtualSpawnPoint, const LuaMachine::FLuaValue& InSpawnTransform, const LuaMachine::FLuaValue& InAIControllerTag, const LuaMachine::FLuaValue& InFreezeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.CreateWithTransform");
        
        UGBLuaAIPackage_CreateWithTransform_Params params {};
        params.InVirtualSpawnPoint = InVirtualSpawnPoint;
        params.InSpawnTransform = InSpawnTransform;
        params.InAIControllerTag = InAIControllerTag;
        params.InFreezeTime = InFreezeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.CreateOverDuration
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InCount                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InOrderedSpawnPoints                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAIControllerTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::CreateOverDuration(const LuaMachine::FLuaValue& InDuration, const LuaMachine::FLuaValue& InCount, const LuaMachine::FLuaValue& InOrderedSpawnPoints, const LuaMachine::FLuaValue& InAIControllerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.CreateOverDuration");
        
        UGBLuaAIPackage_CreateOverDuration_Params params {};
        params.InDuration = InDuration;
        params.InCount = InCount;
        params.InOrderedSpawnPoints = InOrderedSpawnPoints;
        params.InAIControllerTag = InAIControllerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.Create
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSpawnPoint                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAIControllerTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFreezeTime                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::Create(const LuaMachine::FLuaValue& InSpawnPoint, const LuaMachine::FLuaValue& InAIControllerTag, const LuaMachine::FLuaValue& InFreezeTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.Create");
        
        UGBLuaAIPackage_Create_Params params {};
        params.InSpawnPoint = InSpawnPoint;
        params.InAIControllerTag = InAIControllerTag;
        params.InFreezeTime = InFreezeTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.CleanUp
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAIControllerTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaAIPackage::CleanUp(const LuaMachine::FLuaValue& InAIControllerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.CleanUp");
        
        UGBLuaAIPackage_CleanUp_Params params {};
        params.InAIControllerTag = InAIControllerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaAIPackage.CheckLocationReachable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InStartLoc                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InEndLoc                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaAIPackage::CheckLocationReachable(const LuaMachine::FLuaValue& InStartLoc, const LuaMachine::FLuaValue& InEndLoc)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaAIPackage.CheckLocationReachable");
        
        UGBLuaAIPackage_CheckLocationReachable_Params params {};
        params.InStartLoc = InStartLoc;
        params.InEndLoc = InEndLoc;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerStart.SetGroup
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewGroupName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerStart::SetGroup(const BasicTypes::FName& NewGroupName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerStart.SetGroup");
        
        AGBPlayerStart_SetGroup_Params params {};
        params.NewGroupName = NewGroupName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerStart.IsValidFor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerStart::IsValidFor(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerStart.IsValidFor");
        
        AGBPlayerStart_IsValidFor_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerStart.GetStartingStance
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBPlayerStance                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBPlayerStance AGBPlayerStart::GetStartingStance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerStart.GetStartingStance");
        
        AGBPlayerStart_GetStartingStance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerStart.GetGroup
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBPlayerStart::GetGroup()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerStart.GetGroup");
        
        AGBPlayerStart_GetGroup_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.WasInPlay
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::WasInPlay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.WasInPlay");
        
        AGBPlayerState_WasInPlay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.UpdateTeamElementNumber
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::UpdateTeamElementNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.UpdateTeamElementNumber");
        
        AGBPlayerState_UpdateTeamElementNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.UpdateRichPresence
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::UpdateRichPresence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.UpdateRichPresence");
        
        AGBPlayerState_UpdateRichPresence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SyncPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SyncPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SyncPlayerScores");
        
        AGBPlayerState_SyncPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetWasInPlay
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewWasInPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetWasInPlay(bool bNewWasInPlay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetWasInPlay");
        
        AGBPlayerState_SetWasInPlay_Params params {};
        params.bNewWasInPlay = bNewWasInPlay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetUseElementCallSign
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewUseElementCallSign                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetUseElementCallSign(bool bNewUseElementCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetUseElementCallSign");
        
        AGBPlayerState_SetUseElementCallSign_Params params {};
        params.bNewUseElementCallSign = bNewUseElementCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetTeamElementNumber
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewTeamElementNumber                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetTeamElementNumber(int32_t NewTeamElementNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetTeamElementNumber");
        
        AGBPlayerState_SetTeamElementNumber_Params params {};
        params.NewTeamElementNumber = NewTeamElementNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetTeamElement
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ETeamElement                         NewTeamElement                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetTeamElement(GroundBranch::ETeamElement NewTeamElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetTeamElement");
        
        AGBPlayerState_SetTeamElement_Params params {};
        params.NewTeamElement = NewTeamElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetServerConnectString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewServerConnectString                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetServerConnectString(const BasicTypes::FString& NewServerConnectString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetServerConnectString");
        
        AGBPlayerState_SetServerConnectString_Params params {};
        params.NewServerConnectString = NewServerConnectString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EReadyStatus                         NewStatus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetReadyStatus(GroundBranch::EReadyStatus NewStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetReadyStatus");
        
        AGBPlayerState_SetReadyStatus_Params params {};
        params.NewStatus = NewStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetReadyRoomStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EReadyRoomStatus                     NewStatus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetReadyRoomStatus(GroundBranch::EReadyRoomStatus NewStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetReadyRoomStatus");
        
        AGBPlayerState_SetReadyRoomStatus_Params params {};
        params.NewStatus = NewStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetPlayerVolunteered
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewPlayerVolunteered                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetPlayerVolunteered(bool bNewPlayerVolunteered)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetPlayerVolunteered");
        
        AGBPlayerState_SetPlayerVolunteered_Params params {};
        params.bNewPlayerVolunteered = bNewPlayerVolunteered;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetPlayerInteraction
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBPlayerInteractionStatus           NewPlayerInteractionStatus                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      OtherPlayerState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetPlayerInteraction(GroundBranch::EGBPlayerInteractionStatus NewPlayerInteractionStatus, GroundBranch::AGBPlayerState* OtherPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetPlayerInteraction");
        
        AGBPlayerState_SetPlayerInteraction_Params params {};
        params.NewPlayerInteractionStatus = NewPlayerInteractionStatus;
        params.OtherPlayerState = OtherPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetOnDuty
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewOnDuty                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetOnDuty(bool bNewOnDuty)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetOnDuty");
        
        AGBPlayerState_SetOnDuty_Params params {};
        params.bNewOnDuty = bNewOnDuty;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetLives
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewLives                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetLives(uint8_t NewLives)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetLives");
        
        AGBPlayerState_SetLives_Params params {};
        params.NewLives = NewLives;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInsertionPoint*                   NewInsertionPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetInsertionPoint(GroundBranch::AGBInsertionPoint* NewInsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetInsertionPoint");
        
        AGBPlayerState_SetInsertionPoint_Params params {};
        params.NewInsertionPoint = NewInsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewCallSign                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetCallSign(const BasicTypes::FString& NewCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetCallSign");
        
        AGBPlayerState_SetCallSign_Params params {};
        params.NewCallSign = NewCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetAllowedToRestart
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewAllowedToRestart                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetAllowedToRestart(bool bNewAllowedToRestart)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetAllowedToRestart");
        
        AGBPlayerState_SetAllowedToRestart_Params params {};
        params.bNewAllowedToRestart = bNewAllowedToRestart;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.SetAlertLevel
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAlertLevel                          NewAlertLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::SetAlertLevel(GroundBranch::EAlertLevel NewAlertLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.SetAlertLevel");
        
        AGBPlayerState_SetAlertLevel_Params params {};
        params.NewAlertLevel = NewAlertLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ServerSyncPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ServerSyncPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ServerSyncPlayerScores");
        
        AGBPlayerState_ServerSyncPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ServerSetPlayerVolunteered
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewPlayerVolunteered                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ServerSetPlayerVolunteered(bool bNewPlayerVolunteered)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ServerSetPlayerVolunteered");
        
        AGBPlayerState_ServerSetPlayerVolunteered_Params params {};
        params.bNewPlayerVolunteered = bNewPlayerVolunteered;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ServerReportClientMissingAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                AssetName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ServerReportClientMissingAsset(const BasicTypes::FString& AssetName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ServerReportClientMissingAsset");
        
        AGBPlayerState_ServerReportClientMissingAsset_Params params {};
        params.AssetName = AssetName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ServerRegisterPlayerWithSession
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        AuthSessionTicket                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ServerRegisterPlayerWithSession(BasicTypes::TArray<uint8_t> AuthSessionTicket)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ServerRegisterPlayerWithSession");
        
        AGBPlayerState_ServerRegisterPlayerWithSession_Params params {};
        params.AuthSessionTicket = AuthSessionTicket;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ServerApplyPlayerSettingsGameplayTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                PlayerSettingTags                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ServerApplyPlayerSettingsGameplayTags(const GameplayTags::FGameplayTagContainer& PlayerSettingTags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ServerApplyPlayerSettingsGameplayTags");
        
        AGBPlayerState_ServerApplyPlayerSettingsGameplayTags_Params params {};
        params.PlayerSettingTags = PlayerSettingTags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ResetStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ResetStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ResetStats");
        
        AGBPlayerState_ResetStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ResetPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ResetPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ResetPlayerScores");
        
        AGBPlayerState_ResetPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ResetBadWordCount
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ResetBadWordCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ResetBadWordCount");
        
        AGBPlayerState_ResetBadWordCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ReportClientMissingAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                AssetName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ReportClientMissingAsset(const BasicTypes::FString& AssetName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ReportClientMissingAsset");
        
        AGBPlayerState_ReportClientMissingAsset_Params params {};
        params.AssetName = AssetName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.PlayerInteractionChangedEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBPlayerInteraction                 NewPlayerInteraction                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::PlayerInteractionChangedEvent(const GroundBranch::FGBPlayerInteraction& NewPlayerInteraction)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.PlayerInteractionChangedEvent");
        
        AGBPlayerState_PlayerInteractionChangedEvent_Params params {};
        params.NewPlayerInteraction = NewPlayerInteraction;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRepPlayerNameEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bBeenWelcomed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRepPlayerNameEvent(bool bBeenWelcomed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRepPlayerNameEvent");
        
        AGBPlayerState_OnRepPlayerNameEvent_Params params {};
        params.bBeenWelcomed = bBeenWelcomed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_TeamId
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_TeamId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_TeamId");
        
        AGBPlayerState_OnRep_TeamId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_TeamElementNumber
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_TeamElementNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_TeamElementNumber");
        
        AGBPlayerState_OnRep_TeamElementNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_TeamElement
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_TeamElement()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_TeamElement");
        
        AGBPlayerState_OnRep_TeamElement_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_ReplicatedPlayerStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_ReplicatedPlayerStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_ReplicatedPlayerStats");
        
        AGBPlayerState_OnRep_ReplicatedPlayerStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_ReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_ReadyStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_ReadyStatus");
        
        AGBPlayerState_OnRep_ReadyStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_ReadyRoomStatus
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_ReadyRoomStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_ReadyRoomStatus");
        
        AGBPlayerState_OnRep_ReadyRoomStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerVolunteered
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_PlayerVolunteered()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerVolunteered");
        
        AGBPlayerState_OnRep_PlayerVolunteered_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_PlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerScores");
        
        AGBPlayerState_OnRep_PlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerInteraction
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_PlayerInteraction()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerInteraction");
        
        AGBPlayerState_OnRep_PlayerInteraction_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerCallSign
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_PlayerCallSign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_PlayerCallSign");
        
        AGBPlayerState_OnRep_PlayerCallSign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_ClientAssetIsMissing
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_ClientAssetIsMissing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_ClientAssetIsMissing");
        
        AGBPlayerState_OnRep_ClientAssetIsMissing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.OnRep_AlertLevel
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::OnRep_AlertLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.OnRep_AlertLevel");
        
        AGBPlayerState_OnRep_AlertLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IsPlayerRestrained
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::IsPlayerRestrained()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IsPlayerRestrained");
        
        AGBPlayerState_IsPlayerRestrained_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IsPlayerControllingOther
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::IsPlayerControllingOther()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IsPlayerControllingOther");
        
        AGBPlayerState_IsPlayerControllingOther_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IsPlayerControlledByOther
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::IsPlayerControlledByOther()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IsPlayerControlledByOther");
        
        AGBPlayerState_IsPlayerControlledByOther_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IsOnlyASpectatorBP
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::IsOnlyASpectatorBP()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IsOnlyASpectatorBP");
        
        AGBPlayerState_IsOnlyASpectatorBP_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IsLocal
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::IsLocal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IsLocal");
        
        AGBPlayerState_IsLocal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IsBenchmarking
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::IsBenchmarking()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IsBenchmarking");
        
        AGBPlayerState_IsBenchmarking_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IncrementStat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StatKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::IncrementStat(const BasicTypes::FName& StatName, const BasicTypes::FString& StatKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IncrementStat");
        
        AGBPlayerState_IncrementStat_Params params {};
        params.StatName = StatName;
        params.StatKey = StatKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.IncrementBadWordCount
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::IncrementBadWordCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.IncrementBadWordCount");
        
        AGBPlayerState_IncrementBadWordCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetUseElementCallSign
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::GetUseElementCallSign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetUseElementCallSign");
        
        AGBPlayerState_GetUseElementCallSign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetTotalStatValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetTotalStatValue(const BasicTypes::FName& StatName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetTotalStatValue");
        
        AGBPlayerState_GetTotalStatValue_Params params {};
        params.StatName = StatName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetTimeSinceLastBadWord
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetTimeSinceLastBadWord()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetTimeSinceLastBadWord");
        
        AGBPlayerState_GetTimeSinceLastBadWord_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetTeamElementNumber
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetTeamElementNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetTeamElementNumber");
        
        AGBPlayerState_GetTeamElementNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetTeamElementLetter
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBPlayerState::GetTeamElementLetter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetTeamElementLetter");
        
        AGBPlayerState_GetTeamElementLetter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetTeamElement
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ETeamElement                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::ETeamElement AGBPlayerState::GetTeamElement()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetTeamElement");
        
        AGBPlayerState_GetTeamElement_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetStatValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StatKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetStatValue(const BasicTypes::FName& StatName, const BasicTypes::FString& StatKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetStatValue");
        
        AGBPlayerState_GetStatValue_Params params {};
        params.StatName = StatName;
        params.StatKey = StatKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetStatKeys
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBPlayerState::GetStatKeys(const BasicTypes::FName& StatName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetStatKeys");
        
        AGBPlayerState_GetStatKeys_Params params {};
        params.StatName = StatName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetServerConnectString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBPlayerState::GetServerConnectString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetServerConnectString");
        
        AGBPlayerState_GetServerConnectString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetReplicatedPlayerStats
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBPlayerState::GetReplicatedPlayerStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetReplicatedPlayerStats");
        
        AGBPlayerState_GetReplicatedPlayerStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetReadyStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EReadyStatus                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EReadyStatus AGBPlayerState::GetReadyStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetReadyStatus");
        
        AGBPlayerState_GetReadyStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetReadyRoomStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EReadyRoomStatus                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EReadyRoomStatus AGBPlayerState::GetReadyRoomStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetReadyRoomStatus");
        
        AGBPlayerState_GetReadyRoomStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetQuickAdminCommands
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBPlayerState::GetQuickAdminCommands()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetQuickAdminCommands");
        
        AGBPlayerState_GetQuickAdminCommands_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetPlayerVolunteered
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::GetPlayerVolunteered()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetPlayerVolunteered");
        
        AGBPlayerState_GetPlayerVolunteered_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBScoreLine>     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBScoreLine> AGBPlayerState::GetPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetPlayerScores");
        
        AGBPlayerState_GetPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetPlayerRotation
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerState::GetPlayerRotation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetPlayerRotation");
        
        AGBPlayerState_GetPlayerRotation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetPlayerLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBPlayerState::GetPlayerLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetPlayerLocation");
        
        AGBPlayerState_GetPlayerLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetPlayerInteraction
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBPlayerInteraction                 ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBPlayerInteraction AGBPlayerState::GetPlayerInteraction()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetPlayerInteraction");
        
        AGBPlayerState_GetPlayerInteraction_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetPingInMillisecondsGetPing
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBPlayerState::GetPingInMillisecondsGetPing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetPingInMillisecondsGetPing");
        
        AGBPlayerState_GetPingInMillisecondsGetPing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetOnDuty
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::GetOnDuty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetOnDuty");
        
        AGBPlayerState_GetOnDuty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetOldName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBPlayerState::GetOldName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetOldName");
        
        AGBPlayerState_GetOldName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetNoReceiveTeamVOIP
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::GetNoReceiveTeamVOIP()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetNoReceiveTeamVOIP");
        
        AGBPlayerState_GetNoReceiveTeamVOIP_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetNextMapVoteIndex
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetNextMapVoteIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetNextMapVoteIndex");
        
        AGBPlayerState_GetNextMapVoteIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetLives
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBPlayerState::GetLives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetLives");
        
        AGBPlayerState_GetLives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetLastBadWordSeconds
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetLastBadWordSeconds()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetLastBadWordSeconds");
        
        AGBPlayerState_GetLastBadWordSeconds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetInteractingPlayer
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerState* AGBPlayerState::GetInteractingPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetInteractingPlayer");
        
        AGBPlayerState_GetInteractingPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInsertionPoint*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInsertionPoint* AGBPlayerState::GetInsertionPoint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetInsertionPoint");
        
        AGBPlayerState_GetInsertionPoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* AGBPlayerState::GetCharacter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetCharacter");
        
        AGBPlayerState_GetCharacter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBPlayerState::GetCallSign()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetCallSign");
        
        AGBPlayerState_GetCallSign_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetBadWordCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBPlayerState::GetBadWordCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetBadWordCount");
        
        AGBPlayerState_GetBadWordCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.GetAlertLevel
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EAlertLevel                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EAlertLevel AGBPlayerState::GetAlertLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.GetAlertLevel");
        
        AGBPlayerState_GetAlertLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ClearStat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StatKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ClearStat(const BasicTypes::FName& StatName, const BasicTypes::FString& StatKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ClearStat");
        
        AGBPlayerState_ClearStat_Params params {};
        params.StatName = StatName;
        params.StatKey = StatKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ClearReplicatedPlayerStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ClearReplicatedPlayerStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ClearReplicatedPlayerStats");
        
        AGBPlayerState_ClearReplicatedPlayerStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ClearPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ClearPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ClearPlayerScores");
        
        AGBPlayerState_ClearPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.AwardPlayerScore
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ScoreMultiple                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::AwardPlayerScore(const BasicTypes::FName& ScoreName, int32_t ScoreMultiple)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.AwardPlayerScore");
        
        AGBPlayerState_AwardPlayerScore_Params params {};
        params.ScoreName = ScoreName;
        params.ScoreMultiple = ScoreMultiple;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ArePlayerScoresInitialised
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::ArePlayerScoresInitialised()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ArePlayerScoresInitialised");
        
        AGBPlayerState_ArePlayerScoresInitialised_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.ApplyPlayerScoreTemplateFromGameState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPlayerState::ApplyPlayerScoreTemplateFromGameState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.ApplyPlayerScoreTemplateFromGameState");
        
        AGBPlayerState_ApplyPlayerScoreTemplateFromGameState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.AllowedToRestart
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::AllowedToRestart()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.AllowedToRestart");
        
        AGBPlayerState_AllowedToRestart_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.AllowedToChangeKit
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBPlayerState::AllowedToChangeKit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.AllowedToChangeKit");
        
        AGBPlayerState_AllowedToChangeKit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPlayerState.AddReplicatedPlayerStat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                StatString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPlayerState::AddReplicatedPlayerStat(const BasicTypes::FString& StatString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPlayerState.AddReplicatedPlayerStat");
        
        AGBPlayerState_AddReplicatedPlayerStat_Params params {};
        params.StatString = StatString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPortalSystemManager.RemoveLight
     *         Flags  -> ()
     * Parameters:
     *         Engine::ULightComponent*                           LightComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPortalSystemManager::RemoveLight(Engine::ULightComponent* LightComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPortalSystemManager.RemoveLight");
        
        AGBPortalSystemManager_RemoveLight_Params params {};
        params.LightComponent = LightComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.ShowRadialMenu
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBRadialMenuOption> MenuOptions                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::ShowRadialMenu(BasicTypes::TArray<GroundBranch::FGBRadialMenuOption> MenuOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.ShowRadialMenu");
        
        UGBRadialMenuWidget_ShowRadialMenu_Params params {};
        params.MenuOptions = MenuOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.SetSelectedIndex
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewIdx                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::SetSelectedIndex(int32_t NewIdx)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.SetSelectedIndex");
        
        UGBRadialMenuWidget_SetSelectedIndex_Params params {};
        params.NewIdx = NewIdx;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.GetSelectedIndex
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBRadialMenuWidget::GetSelectedIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.GetSelectedIndex");
        
        UGBRadialMenuWidget_GetSelectedIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> DelegateFunction /Script/GroundBranch.GBRadialMenuWidget.GBRadialMenuEvent__DelegateSignature
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Idx                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::GBRadialMenuEvent__DelegateSignature(int32_t Idx)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GroundBranch.GBRadialMenuWidget.GBRadialMenuEvent__DelegateSignature");
        
        UGBRadialMenuWidget_GBRadialMenuEvent__DelegateSignature_Params params {};
        params.Idx = Idx;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.CloseRadialMenu
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::CloseRadialMenu()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.CloseRadialMenu");
        
        UGBRadialMenuWidget_CloseRadialMenu_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.BPEvent_SetDynamicMaterialParams
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NumberOfDivisions                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::BPEvent_SetDynamicMaterialParams(int32_t NumberOfDivisions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.BPEvent_SetDynamicMaterialParams");
        
        UGBRadialMenuWidget_BPEvent_SetDynamicMaterialParams_Params params {};
        params.NumberOfDivisions = NumberOfDivisions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.BPEvent_NewActiveSelection
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::BPEvent_NewActiveSelection(int32_t NewIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.BPEvent_NewActiveSelection");
        
        UGBRadialMenuWidget_BPEvent_NewActiveSelection_Params params {};
        params.NewIndex = NewIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRadialMenuWidget.BPEvent_ClearCurrentSelection
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBRadialMenuWidget::BPEvent_ClearCurrentSelection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRadialMenuWidget.BPEvent_ClearCurrentSelection");
        
        UGBRadialMenuWidget_BPEvent_ClearCurrentSelection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.StackCheck
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBRailComponent*                    RailComp                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBRailAttachment::StackCheck(GroundBranch::UGBRailComponent* RailComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.StackCheck");
        
        AGBRailAttachment_StackCheck_Params params {};
        params.RailComp = RailComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.SetRecoilSlot
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewRecoilSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRailAttachment::SetRecoilSlot(int32_t NewRecoilSlot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.SetRecoilSlot");
        
        AGBRailAttachment_SetRecoilSlot_Params params {};
        params.NewRecoilSlot = NewRecoilSlot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.OnRep_RailAttachmentReplication
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBRailAttachment::OnRep_RailAttachmentReplication()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.OnRep_RailAttachmentReplication");
        
        AGBRailAttachment_OnRep_RailAttachmentReplication_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.IsNotTooFarForward
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBFirearm*                          ParentFirearm                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBRailAttachment::IsNotTooFarForward(GroundBranch::AGBFirearm* ParentFirearm, const CoreUObject::FVector& WorldLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.IsNotTooFarForward");
        
        AGBRailAttachment_IsNotTooFarForward_Params params {};
        params.ParentFirearm = ParentFirearm;
        params.WorldLocation = WorldLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.IsNotTooFarBack
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBFirearm*                          ParentFirearm                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBRailAttachment::IsNotTooFarBack(GroundBranch::AGBFirearm* ParentFirearm, const CoreUObject::FVector& WorldLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.IsNotTooFarBack");
        
        AGBRailAttachment_IsNotTooFarBack_Params params {};
        params.ParentFirearm = ParentFirearm;
        params.WorldLocation = WorldLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.IsCompatibleWithRail
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBRailComponent*                    RailComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBRailAttachment::IsCompatibleWithRail(GroundBranch::UGBRailComponent* RailComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.IsCompatibleWithRail");
        
        AGBRailAttachment_IsCompatibleWithRail_Params params {};
        params.RailComp = RailComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetValidRailOffsetsFor
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBFirearm*                          ParentFirearm                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::FValidatedRecoilSlots> OutValidatedRecoilSlots                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRailAttachment::GetValidRailOffsetsFor(GroundBranch::AGBFirearm* ParentFirearm, BasicTypes::TArray<GroundBranch::FValidatedRecoilSlots>* OutValidatedRecoilSlots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetValidRailOffsetsFor");
        
        AGBRailAttachment_GetValidRailOffsetsFor_Params params {};
        params.ParentFirearm = ParentFirearm;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutValidatedRecoilSlots != nullptr)
            *OutValidatedRecoilSlots = params.OutValidatedRecoilSlots;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetValidMountPointOffsets
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          BaseItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> AGBRailAttachment::GetValidMountPointOffsets(GroundBranch::AGBInvItem* BaseItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetValidMountPointOffsets");
        
        AGBRailAttachment_GetValidMountPointOffsets_Params params {};
        params.BaseItem = BaseItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetRecoilSlot
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBRailAttachment::GetRecoilSlot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetRecoilSlot");
        
        AGBRailAttachment_GetRecoilSlot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetRailMountValidation
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ERailMountValidation                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::ERailMountValidation AGBRailAttachment::GetRailMountValidation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetRailMountValidation");
        
        AGBRailAttachment_GetRailMountValidation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetMountPoints
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::UGBRailMountComponent*> ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::UGBRailMountComponent*> AGBRailAttachment::GetMountPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetMountPoints");
        
        AGBRailAttachment_GetMountPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetBackOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               OutBackOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBRailAttachment::GetBackOffset(CoreUObject::FVector* OutBackOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetBackOffset");
        
        AGBRailAttachment_GetBackOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBackOffset != nullptr)
            *OutBackOffset = params.OutBackOffset;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailAttachment.GetAttachmentOverlaps
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bForceCollision                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBRailAttachment*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBRailAttachment*> AGBRailAttachment::GetAttachmentOverlaps(bool bForceCollision)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailAttachment.GetAttachmentOverlaps");
        
        AGBRailAttachment_GetAttachmentOverlaps_Params params {};
        params.bForceCollision = bForceCollision;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailComponent.GetRecoilSlots
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBRailComponent::GetRecoilSlots()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailComponent.GetRecoilSlots");
        
        UGBRailComponent_GetRecoilSlots_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailComponent.GetRailComponentTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBRailComponent::GetRailComponentTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailComponent.GetRailComponentTags");
        
        UGBRailComponent_GetRailComponentTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRailComponent.GetOrientationRailTypeTag
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBRailComponent::GetOrientationRailTypeTag()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRailComponent.GetOrientationRailTypeTag");
        
        UGBRailComponent_GetOrientationRailTypeTag_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFoliageVisibilityAssetData.GetVisibilityMesh
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FSoftObjectPath UGBFoliageVisibilityAssetData::GetVisibilityMesh()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFoliageVisibilityAssetData.GetVisibilityMesh");
        
        UGBFoliageVisibilityAssetData_GetVisibilityMesh_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFrontSightPostComponent.ServerFrontSightPostHeightOffset
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewFrontSightPostHeightOffset                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFrontSightPostComponent::ServerFrontSightPostHeightOffset(float NewFrontSightPostHeightOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFrontSightPostComponent.ServerFrontSightPostHeightOffset");
        
        UGBFrontSightPostComponent_ServerFrontSightPostHeightOffset_Params params {};
        params.NewFrontSightPostHeightOffset = NewFrontSightPostHeightOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFrontSightPostComponent.OnRep_FrontSightPostHeightOffset
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBFrontSightPostComponent::OnRep_FrontSightPostHeightOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFrontSightPostComponent.OnRep_FrontSightPostHeightOffset");
        
        UGBFrontSightPostComponent_OnRep_FrontSightPostHeightOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFrontSightPostComponent.GetFrontSightPostHeightOffset
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFrontSightPostComponent::GetFrontSightPostHeightOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFrontSightPostComponent.GetFrontSightPostHeightOffset");
        
        UGBFrontSightPostComponent_GetFrontSightPostHeightOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ViewportPositionDeproject
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ViewportPosition                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldOrigin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ViewportPositionDeproject(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector2D& ViewportPosition, CoreUObject::FVector* OutWorldOrigin, CoreUObject::FVector* OutWorldDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ViewportPositionDeproject");
        
        UGBFunctionLibrary_ViewportPositionDeproject_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ViewportPosition = ViewportPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWorldOrigin != nullptr)
            *OutWorldOrigin = params.OutWorldOrigin;
        if (OutWorldDirection != nullptr)
            *OutWorldDirection = params.OutWorldDirection;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.VerticalFOV
     *         Flags  -> ()
     * Parameters:
     *         float                                              HorizontalFOV                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AspectRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::VerticalFOV(float HorizontalFOV, float AspectRatio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.VerticalFOV");
        
        UGBFunctionLibrary_VerticalFOV_Params params {};
        params.HorizontalFOV = HorizontalFOV;
        params.AspectRatio = AspectRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.UpdateMissionParametersFromMaplist
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            PermittedMissions                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::UpdateMissionParametersFromMaplist(const BasicTypes::FString& Parameters, BasicTypes::TArray<BasicTypes::FString> PermittedMissions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.UpdateMissionParametersFromMaplist");
        
        UGBFunctionLibrary_UpdateMissionParametersFromMaplist_Params params {};
        params.Parameters = Parameters;
        params.PermittedMissions = PermittedMissions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.UpdateMissionModBase
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    NewModID                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            MatchingGameModes                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bOnlyStagedMod                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::UpdateMissionModBase(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& Filename, const ModKit::FUInt64& NewModID, BasicTypes::TArray<BasicTypes::FString> MatchingGameModes, bool bOnlyStagedMod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.UpdateMissionModBase");
        
        UGBFunctionLibrary_UpdateMissionModBase_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Filename = Filename;
        params.NewModID = NewModID;
        params.MatchingGameModes = MatchingGameModes;
        params.bOnlyStagedMod = bOnlyStagedMod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.TrimExtension
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SourceStr                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::TrimExtension(const BasicTypes::FString& SourceStr)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.TrimExtension");
        
        UGBFunctionLibrary_TrimExtension_Params params {};
        params.SourceStr = SourceStr;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.TrimDigitsFromString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::TrimDigitsFromString(const BasicTypes::FString& inString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.TrimDigitsFromString");
        
        UGBFunctionLibrary_TrimDigitsFromString_Params params {};
        params.inString = inString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Time_GetOSTime
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            MilliSeconds                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Seconds                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Minutes                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Hours12                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Hours24                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Day                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Month                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Year                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::Time_GetOSTime(int32_t* MilliSeconds, int32_t* Seconds, int32_t* Minutes, int32_t* Hours12, int32_t* Hours24, int32_t* Day, int32_t* Month, int32_t* Year)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Time_GetOSTime");
        
        UGBFunctionLibrary_Time_GetOSTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (MilliSeconds != nullptr)
            *MilliSeconds = params.MilliSeconds;
        if (Seconds != nullptr)
            *Seconds = params.Seconds;
        if (Minutes != nullptr)
            *Minutes = params.Minutes;
        if (Hours12 != nullptr)
            *Hours12 = params.Hours12;
        if (Hours24 != nullptr)
            *Hours24 = params.Hours24;
        if (Day != nullptr)
            *Day = params.Day;
        if (Month != nullptr)
            *Month = params.Month;
        if (Year != nullptr)
            *Year = params.Year;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.StripBBCode
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SourceString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::StripBBCode(const BasicTypes::FString& SourceString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.StripBBCode");
        
        UGBFunctionLibrary_StripBBCode_Params params {};
        params.SourceString = SourceString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.StringToDisplayString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsBool                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::StringToDisplayString(const BasicTypes::FString& inString, bool bIsBool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.StringToDisplayString");
        
        UGBFunctionLibrary_StringToDisplayString_Params params {};
        params.inString = inString;
        params.bIsBool = bIsBool;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.StringHash
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                StringToHash                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::StringHash(const BasicTypes::FString& StringToHash)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.StringHash");
        
        UGBFunctionLibrary_StringHash_Params params {};
        params.StringToHash = StringToHash;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SortStringArrayWithPriorityCharacter
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            StringArray                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            StringArrayRef                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                PriorityCharacter                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SortStringArrayWithPriorityCharacter(BasicTypes::TArray<BasicTypes::FString>* StringArray, BasicTypes::TArray<BasicTypes::FString>* StringArrayRef, const BasicTypes::FString& PriorityCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SortStringArrayWithPriorityCharacter");
        
        UGBFunctionLibrary_SortStringArrayWithPriorityCharacter_Params params {};
        params.PriorityCharacter = PriorityCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (StringArray != nullptr)
            *StringArray = params.StringArray;
        if (StringArrayRef != nullptr)
            *StringArrayRef = params.StringArrayRef;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SortStringArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            StringArray                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            StringArrayRef                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bSortByLeafName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SortStringArray(BasicTypes::TArray<BasicTypes::FString>* StringArray, BasicTypes::TArray<BasicTypes::FString>* StringArrayRef, bool bSortByLeafName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SortStringArray");
        
        UGBFunctionLibrary_SortStringArray_Params params {};
        params.bSortByLeafName = bSortByLeafName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (StringArray != nullptr)
            *StringArray = params.StringArray;
        if (StringArrayRef != nullptr)
            *StringArrayRef = params.StringArrayRef;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SortIntArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<int32_t>                        IntArray                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<int32_t>                        IntArrayRef                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SortIntArray(BasicTypes::TArray<int32_t>* IntArray, BasicTypes::TArray<int32_t>* IntArrayRef)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SortIntArray");
        
        UGBFunctionLibrary_SortIntArray_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (IntArray != nullptr)
            *IntArray = params.IntArray;
        if (IntArrayRef != nullptr)
            *IntArrayRef = params.IntArrayRef;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SortFloatArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<float>                          FloatArray                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          FloatArrayRef                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SortFloatArray(BasicTypes::TArray<float>* FloatArray, BasicTypes::TArray<float>* FloatArrayRef)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SortFloatArray");
        
        UGBFunctionLibrary_SortFloatArray_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (FloatArray != nullptr)
            *FloatArray = params.FloatArray;
        if (FloatArrayRef != nullptr)
            *FloatArrayRef = params.FloatArrayRef;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SortActorArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<Engine::AActor*>                ActorArray                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                ActorArrayRef                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SortActorArray(BasicTypes::TArray<Engine::AActor*>* ActorArray, BasicTypes::TArray<Engine::AActor*>* ActorArrayRef)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SortActorArray");
        
        UGBFunctionLibrary_SortActorArray_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ActorArray != nullptr)
            *ActorArray = params.ActorArray;
        if (ActorArrayRef != nullptr)
            *ActorArrayRef = params.ActorArrayRef;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SignedAlphaToByte
     *         Flags  -> ()
     * Parameters:
     *         float                                              AlphaValue                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UGBFunctionLibrary::SignedAlphaToByte(float AlphaValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SignedAlphaToByte");
        
        UGBFunctionLibrary_SignedAlphaToByte_Params params {};
        params.AlphaValue = AlphaValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetRenderInDepthPass
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       PrimitiveComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetRenderInDepthPass(Engine::UPrimitiveComponent* PrimitiveComp, bool bValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetRenderInDepthPass");
        
        UGBFunctionLibrary_SetRenderInDepthPass_Params params {};
        params.PrimitiveComp = PrimitiveComp;
        params.bValue = bValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetGlobalGravity
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              GlobalGravity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetGlobalGravity(CoreUObject::UObject* WorldContextObject, float GlobalGravity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetGlobalGravity");
        
        UGBFunctionLibrary_SetGlobalGravity_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.GlobalGravity = GlobalGravity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetGenericTeamId
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            NewTeamId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::SetGenericTeamId(Engine::AActor* Target, uint8_t NewTeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetGenericTeamId");
        
        UGBFunctionLibrary_SetGenericTeamId_Params params {};
        params.Target = Target;
        params.NewTeamId = NewTeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetDrownEffectIntensity
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPostProcessComponent*                     PostProcessSettings                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EffectAmount                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetDrownEffectIntensity(Engine::UPostProcessComponent* PostProcessSettings, float EffectAmount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetDrownEffectIntensity");
        
        UGBFunctionLibrary_SetDrownEffectIntensity_Params params {};
        params.PostProcessSettings = PostProcessSettings;
        params.EffectAmount = EffectAmount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StringValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetConsoleString(const BasicTypes::FString& ConsoleVar, const BasicTypes::FString& StringValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleString");
        
        UGBFunctionLibrary_SetConsoleString_Params params {};
        params.ConsoleVar = ConsoleVar;
        params.StringValue = StringValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleInt
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            IntValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetConsoleInt(const BasicTypes::FString& ConsoleVar, int32_t IntValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleInt");
        
        UGBFunctionLibrary_SetConsoleInt_Params params {};
        params.ConsoleVar = ConsoleVar;
        params.IntValue = IntValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleFloat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FloatValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetConsoleFloat(const BasicTypes::FString& ConsoleVar, float FloatValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleFloat");
        
        UGBFunctionLibrary_SetConsoleFloat_Params params {};
        params.ConsoleVar = ConsoleVar;
        params.FloatValue = FloatValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleBool
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               BoolValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::SetConsoleBool(const BasicTypes::FString& ConsoleVar, bool BoolValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SetConsoleBool");
        
        UGBFunctionLibrary_SetConsoleBool_Params params {};
        params.ConsoleVar = ConsoleVar;
        params.BoolValue = BoolValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.SaveStringToFile
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                String                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOverWrite                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::SaveStringToFile(const BasicTypes::FString& Filename, const BasicTypes::FString& String, bool bOverWrite)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.SaveStringToFile");
        
        UGBFunctionLibrary_SaveStringToFile_Params params {};
        params.Filename = Filename;
        params.String = String;
        params.bOverWrite = bOverWrite;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ResetGlobalGravity
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::ResetGlobalGravity(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ResetGlobalGravity");
        
        UGBFunctionLibrary_ResetGlobalGravity_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.RenameActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    TargetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                NewActorName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::RenameActor(Engine::AActor* TargetActor, const BasicTypes::FString& NewActorName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.RenameActor");
        
        UGBFunctionLibrary_RenameActor_Params params {};
        params.TargetActor = TargetActor;
        params.NewActorName = NewActorName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.RemoveSpacesInline
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SourceString                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::RemoveSpacesInline(BasicTypes::FString* SourceString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.RemoveSpacesInline");
        
        UGBFunctionLibrary_RemoveSpacesInline_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SourceString != nullptr)
            *SourceString = params.SourceString;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.RemoveSpaces
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SourceString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::RemoveSpaces(const BasicTypes::FString& SourceString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.RemoveSpaces");
        
        UGBFunctionLibrary_RemoveSpaces_Params params {};
        params.SourceString = SourceString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Project
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FTransform                            ViewTM                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              FOV                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutScreenPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Project(const CoreUObject::FTransform& ViewTM, float FOV, const CoreUObject::FVector2D& ScreenSize, const CoreUObject::FVector& WorldLocation, CoreUObject::FVector2D* OutScreenPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Project");
        
        UGBFunctionLibrary_Project_Params params {};
        params.ViewTM = ViewTM;
        params.FOV = FOV;
        params.ScreenSize = ScreenSize;
        params.WorldLocation = WorldLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutScreenPosition != nullptr)
            *OutScreenPosition = params.OutScreenPosition;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.PrintStringToLog
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                StringToPrint                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLogVerbose                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeNetworkRoleInLog                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeNameInLog                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ThisRef                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::PrintStringToLog(const BasicTypes::FString& StringToPrint, bool bLogVerbose, bool bIncludeNetworkRoleInLog, bool bIncludeNameInLog, CoreUObject::UObject* ThisRef)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.PrintStringToLog");
        
        UGBFunctionLibrary_PrintStringToLog_Params params {};
        params.StringToPrint = StringToPrint;
        params.bLogVerbose = bLogVerbose;
        params.bIncludeNetworkRoleInLog = bIncludeNetworkRoleInLog;
        params.bIncludeNameInLog = bIncludeNameInLog;
        params.ThisRef = ThisRef;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.PrettifyJsonString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                JsonString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutPrettyKitString                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::PrettifyJsonString(const BasicTypes::FString& JsonString, BasicTypes::FString* OutPrettyKitString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.PrettifyJsonString");
        
        UGBFunctionLibrary_PrettifyJsonString_Params params {};
        params.JsonString = JsonString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPrettyKitString != nullptr)
            *OutPrettyKitString = params.OutPrettyKitString;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_String
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Value                                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ParseValue_String(const BasicTypes::FString& Options, const BasicTypes::FString& Match, BasicTypes::FString* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_String");
        
        UGBFunctionLibrary_ParseValue_String_Params params {};
        params.Options = Options;
        params.Match = Match;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Name
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ParseValue_Name(const BasicTypes::FString& Options, const BasicTypes::FString& Match, BasicTypes::FName* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Name");
        
        UGBFunctionLibrary_ParseValue_Name_Params params {};
        params.Options = Options;
        params.Match = Match;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Integer
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ParseValue_Integer(const BasicTypes::FString& Options, const BasicTypes::FString& Match, int32_t* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Integer");
        
        UGBFunctionLibrary_ParseValue_Integer_Params params {};
        params.Options = Options;
        params.Match = Match;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Float
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ParseValue_Float(const BasicTypes::FString& Options, const BasicTypes::FString& Match, float* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Float");
        
        UGBFunctionLibrary_ParseValue_Float_Params params {};
        params.Options = Options;
        params.Match = Match;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Bool
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ParseValue_Bool(const BasicTypes::FString& Options, const BasicTypes::FString& Match, bool* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ParseValue_Bool");
        
        UGBFunctionLibrary_ParseValue_Bool_Params params {};
        params.Options = Options;
        params.Match = Match;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.OnSameTeam
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ActorA                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ActorB                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::OnSameTeam(Engine::AActor* ActorA, Engine::AActor* ActorB)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.OnSameTeam");
        
        UGBFunctionLibrary_OnSameTeam_Params params {};
        params.ActorA = ActorA;
        params.ActorB = ActorB;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.NamesMatch
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SourceName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SearchName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ESearchFix                           SearchFix                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::NamesMatch(const BasicTypes::FName& SourceName, const BasicTypes::FName& SearchName, GroundBranch::ESearchFix SearchFix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.NamesMatch");
        
        UGBFunctionLibrary_NamesMatch_Params params {};
        params.SourceName = SourceName;
        params.SearchName = SearchName;
        params.SearchFix = SearchFix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.NameArraysMatch
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              SourceNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              TargetNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::NameArraysMatch(BasicTypes::TArray<BasicTypes::FName> SourceNames, BasicTypes::TArray<BasicTypes::FName> TargetNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.NameArraysMatch");
        
        UGBFunctionLibrary_NameArraysMatch_Params params {};
        params.SourceNames = SourceNames;
        params.TargetNames = TargetNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.MakeValidString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Source                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InvalidChars                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::MakeValidString(const BasicTypes::FString& Source, const BasicTypes::FString& InvalidChars)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.MakeValidString");
        
        UGBFunctionLibrary_MakeValidString_Params params {};
        params.Source = Source;
        params.InvalidChars = InvalidChars;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.MakeValidCallSign
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Source                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::MakeValidCallSign(const BasicTypes::FString& Source)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.MakeValidCallSign");
        
        UGBFunctionLibrary_MakeValidCallSign_Params params {};
        params.Source = Source;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.MakeRedToGreenColorFromScalar
     *         Flags  -> ()
     * Parameters:
     *         float                                              Scalar                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FColor                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FColor UGBFunctionLibrary::MakeRedToGreenColorFromScalar(float Scalar)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.MakeRedToGreenColorFromScalar");
        
        UGBFunctionLibrary_MakeRedToGreenColorFromScalar_Params params {};
        params.Scalar = Scalar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.LogUObjectStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::LogUObjectStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.LogUObjectStats");
        
        UGBFunctionLibrary_LogUObjectStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.LoadStringFromFile
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutString                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLogWarnings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::LoadStringFromFile(const BasicTypes::FString& Filename, BasicTypes::FString* OutString, bool bLogWarnings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.LoadStringFromFile");
        
        UGBFunctionLibrary_LoadStringFromFile_Params params {};
        params.Filename = Filename;
        params.bLogWarnings = bLogWarnings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutString != nullptr)
            *OutString = params.OutString;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.LoadStringArrayFromFile
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutStringArray                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bLogWarnings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::LoadStringArrayFromFile(const BasicTypes::FString& Filename, BasicTypes::TArray<BasicTypes::FString>* OutStringArray, bool bLogWarnings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.LoadStringArrayFromFile");
        
        UGBFunctionLibrary_LoadStringArrayFromFile_Params params {};
        params.Filename = Filename;
        params.bLogWarnings = bLogWarnings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutStringArray != nullptr)
            *OutStringArray = params.OutStringArray;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.LoadKillhouseVariant
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                KillhouseLayoutClassName                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::LoadKillhouseVariant(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& KillhouseLayoutClassName, const CoreUObject::FVector& SpawnLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.LoadKillhouseVariant");
        
        UGBFunctionLibrary_LoadKillhouseVariant_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.KillhouseLayoutClassName = KillhouseLayoutClassName;
        params.SpawnLocation = SpawnLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.LoadExternalImage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ImagePath                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture2D*                                OutImage                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutWidth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutHeight                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::LoadExternalImage(const BasicTypes::FString& ImagePath, Engine::UTexture2D** OutImage, int32_t* OutWidth, int32_t* OutHeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.LoadExternalImage");
        
        UGBFunctionLibrary_LoadExternalImage_Params params {};
        params.ImagePath = ImagePath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutImage != nullptr)
            *OutImage = params.OutImage;
        if (OutWidth != nullptr)
            *OutWidth = params.OutWidth;
        if (OutHeight != nullptr)
            *OutHeight = params.OutHeight;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Key_GetString
     *         Flags  -> ()
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::Key_GetString(const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Key_GetString");
        
        UGBFunctionLibrary_Key_GetString_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Key_GetName
     *         Flags  -> ()
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBFunctionLibrary::Key_GetName(const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Key_GetName");
        
        UGBFunctionLibrary_Key_GetName_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsValidSoftObjectPath
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       SoftObjectPath                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsValidSoftObjectPath(const CoreUObject::FSoftObjectPath& SoftObjectPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsValidSoftObjectPath");
        
        UGBFunctionLibrary_IsValidSoftObjectPath_Params params {};
        params.SoftObjectPath = SoftObjectPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsSimulatingInEditor
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsSimulatingInEditor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsSimulatingInEditor");
        
        UGBFunctionLibrary_IsSimulatingInEditor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.isReadOnly
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                PathOrFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::isReadOnly(const BasicTypes::FString& PathOrFilename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.isReadOnly");
        
        UGBFunctionLibrary_isReadOnly_Params params {};
        params.PathOrFilename = PathOrFilename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsProbablyAYearOrYearRange
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SuspectedYearString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsProbablyAYearOrYearRange(const BasicTypes::FString& SuspectedYearString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsProbablyAYearOrYearRange");
        
        UGBFunctionLibrary_IsProbablyAYearOrYearRange_Params params {};
        params.SuspectedYearString = SuspectedYearString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsListenServerSession
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsListenServerSession(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsListenServerSession");
        
        UGBFunctionLibrary_IsListenServerSession_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsKeyBoundToActionDown
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsKeyBoundToActionDown(Engine::APlayerController* PlayerController, const BasicTypes::FName& ActionName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsKeyBoundToActionDown");
        
        UGBFunctionLibrary_IsKeyBoundToActionDown_Params params {};
        params.PlayerController = PlayerController;
        params.ActionName = ActionName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsInState
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InStateName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsInState(Engine::AController* Target, const BasicTypes::FName& InStateName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsInState");
        
        UGBFunctionLibrary_IsInState_Params params {};
        params.Target = Target;
        params.InStateName = InStateName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsGameWorld
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsGameWorld(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsGameWorld");
        
        UGBFunctionLibrary_IsGameWorld_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsFriendly
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ActorA                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ActorB                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsFriendly(Engine::AActor* ActorA, Engine::AActor* ActorB)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsFriendly");
        
        UGBFunctionLibrary_IsFriendly_Params params {};
        params.ActorA = ActorA;
        params.ActorB = ActorB;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsFacing
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MinForwardDot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIgnoreVerticalFacing                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsFacing(Engine::AActor* Target, const CoreUObject::FVector& Location, float MinForwardDot, bool bIgnoreVerticalFacing)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsFacing");
        
        UGBFunctionLibrary_IsFacing_Params params {};
        params.Target = Target;
        params.Location = Location;
        params.MinForwardDot = MinForwardDot;
        params.bIgnoreVerticalFacing = bIgnoreVerticalFacing;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsEditorWorld
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsEditorWorld(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsEditorWorld");
        
        UGBFunctionLibrary_IsEditorWorld_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsEditor
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsEditor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsEditor");
        
        UGBFunctionLibrary_IsEditor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsDedicatedServerSession
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsDedicatedServerSession(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsDedicatedServerSession");
        
        UGBFunctionLibrary_IsDedicatedServerSession_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsDebugDisplayOn
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DebugType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsDebugDisplayOn(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& DebugType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsDebugDisplayOn");
        
        UGBFunctionLibrary_IsDebugDisplayOn_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.DebugType = DebugType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsCommunityTestBuild
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsCommunityTestBuild()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsCommunityTestBuild");
        
        UGBFunctionLibrary_IsCommunityTestBuild_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.IsAuthorProprietary
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InAuthorName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::IsAuthorProprietary(const BasicTypes::FString& InAuthorName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.IsAuthorProprietary");
        
        UGBFunctionLibrary_IsAuthorProprietary_Params params {};
        params.InAuthorName = InAuthorName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.HorizontalFOV
     *         Flags  -> ()
     * Parameters:
     *         float                                              VerticalFOV                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AspectRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::HorizontalFOV(float VerticalFOV, float AspectRatio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.HorizontalFOV");
        
        UGBFunctionLibrary_HorizontalFOV_Params params {};
        params.VerticalFOV = VerticalFOV;
        params.AspectRatio = AspectRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetViewportPositionHitResultByChannel
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ViewportPosition                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ECollisionChannel                          TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTraceComplex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 OutHitResult                                               (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetViewportPositionHitResultByChannel(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector2D& ViewportPosition, Engine::ECollisionChannel TraceChannel, bool bTraceComplex, BasicTypes::TArray<Engine::AActor*> IgnoreActors, Engine::FHitResult* OutHitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetViewportPositionHitResultByChannel");
        
        UGBFunctionLibrary_GetViewportPositionHitResultByChannel_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ViewportPosition = ViewportPosition;
        params.TraceChannel = TraceChannel;
        params.bTraceComplex = bTraceComplex;
        params.IgnoreActors = IgnoreActors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHitResult != nullptr)
            *OutHitResult = params.OutHitResult;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetViewportPosition
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutViewportPosition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetViewportPosition(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector2D& ScreenPosition, CoreUObject::FVector2D* OutViewportPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetViewportPosition");
        
        UGBFunctionLibrary_GetViewportPosition_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ScreenPosition = ScreenPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutViewportPosition != nullptr)
            *OutViewportPosition = params.OutViewportPosition;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetUserDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetUserDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetUserDir");
        
        UGBFunctionLibrary_GetUserDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetUObjectStatsString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetUObjectStatsString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetUObjectStatsString");
        
        UGBFunctionLibrary_GetUObjectStatsString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetUnixTimestamp
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBFunctionLibrary::GetUnixTimestamp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetUnixTimestamp");
        
        UGBFunctionLibrary_GetUnixTimestamp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetTimeOfDayDisplayStringAsText
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TimeOfDayString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UGBFunctionLibrary::GetTimeOfDayDisplayStringAsText(const BasicTypes::FString& TimeOfDayString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetTimeOfDayDisplayStringAsText");
        
        UGBFunctionLibrary_GetTimeOfDayDisplayStringAsText_Params params {};
        params.TimeOfDayString = TimeOfDayString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetTimeOfDayDisplayString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TimeOfDayString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bFormatAsDisplayString                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetTimeOfDayDisplayString(const BasicTypes::FString& TimeOfDayString, bool bFormatAsDisplayString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetTimeOfDayDisplayString");
        
        UGBFunctionLibrary_GetTimeOfDayDisplayString_Params params {};
        params.TimeOfDayString = TimeOfDayString;
        params.bFormatAsDisplayString = bFormatAsDisplayString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetTimeLabelText
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    TimeLabel                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UGBFunctionLibrary::GetTimeLabelText(GroundBranch::EMissionTimeLabel TimeLabel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetTimeLabelText");
        
        UGBFunctionLibrary_GetTimeLabelText_Params params {};
        params.TimeLabel = TimeLabel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetTimeAlive
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::GetTimeAlive(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetTimeAlive");
        
        UGBFunctionLibrary_GetTimeAlive_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetStateName
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBFunctionLibrary::GetStateName(Engine::AController* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetStateName");
        
        UGBFunctionLibrary_GetStateName_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetSkyActor
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBSky*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBSky* UGBFunctionLibrary::GetSkyActor(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetSkyActor");
        
        UGBFunctionLibrary_GetSkyActor_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetSeasonForDate
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InMonth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ESeason                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::ESeason UGBFunctionLibrary::GetSeasonForDate(int32_t InMonth, int32_t InDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetSeasonForDate");
        
        UGBFunctionLibrary_GetSeasonForDate_Params params {};
        params.InMonth = InMonth;
        params.InDay = InDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetScreenShotDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetScreenShotDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetScreenShotDir");
        
        UGBFunctionLibrary_GetScreenShotDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetSavedDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetSavedDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetSavedDir");
        
        UGBFunctionLibrary_GetSavedDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetSavedConfigDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetSavedConfigDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetSavedConfigDir");
        
        UGBFunctionLibrary_GetSavedConfigDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetRefPoseBoneTransform
     *         Flags  -> ()
     * Parameters:
     *         Engine::USkeletalMeshComponent*                    SkelMesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UGBFunctionLibrary::GetRefPoseBoneTransform(Engine::USkeletalMeshComponent* SkelMesh, const BasicTypes::FName& BoneName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetRefPoseBoneTransform");
        
        UGBFunctionLibrary_GetRefPoseBoneTransform_Params params {};
        params.SkelMesh = SkelMesh;
        params.BoneName = BoneName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetRandomWeatherPresetTypeInCategoryLimitByPreset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InCategory                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> PresetWhitelist                                            (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBFunctionLibrary::GetRandomWeatherPresetTypeInCategoryLimitByPreset(const BasicTypes::FName& InCategory, BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> PresetWhitelist)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetRandomWeatherPresetTypeInCategoryLimitByPreset");
        
        UGBFunctionLibrary_GetRandomWeatherPresetTypeInCategoryLimitByPreset_Params params {};
        params.InCategory = InCategory;
        params.PresetWhitelist = PresetWhitelist;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetRandomWeatherPresetTypeInCategoryLimitByFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InCategory                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            FilenamesWhitelist                                         (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBFunctionLibrary::GetRandomWeatherPresetTypeInCategoryLimitByFilename(const BasicTypes::FName& InCategory, BasicTypes::TArray<BasicTypes::FString> FilenamesWhitelist)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetRandomWeatherPresetTypeInCategoryLimitByFilename");
        
        UGBFunctionLibrary_GetRandomWeatherPresetTypeInCategoryLimitByFilename_Params params {};
        params.InCategory = InCategory;
        params.FilenamesWhitelist = FilenamesWhitelist;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetRandomAllowableDay
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            OutMonth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutDay                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<int32_t>                        AllowedMonths                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::GetRandomAllowableDay(int32_t* OutMonth, int32_t* OutDay, BasicTypes::TArray<int32_t> AllowedMonths)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetRandomAllowableDay");
        
        UGBFunctionLibrary_GetRandomAllowableDay_Params params {};
        params.AllowedMonths = AllowedMonths;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMonth != nullptr)
            *OutMonth = params.OutMonth;
        if (OutDay != nullptr)
            *OutDay = params.OutDay;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetRadiotelephonySpelling
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Source                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetRadiotelephonySpelling(const BasicTypes::FString& Source)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetRadiotelephonySpelling");
        
        UGBFunctionLibrary_GetRadiotelephonySpelling_Params params {};
        params.Source = Source;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetProjectVersion
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetProjectVersion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetProjectVersion");
        
        UGBFunctionLibrary_GetProjectVersion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetProhibitedNameCharacters
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetProhibitedNameCharacters()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetProhibitedNameCharacters");
        
        UGBFunctionLibrary_GetProhibitedNameCharacters_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetPlayerNightVisionStatusActor
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerNightVisionStatus*          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerNightVisionStatus* UGBFunctionLibrary::GetPlayerNightVisionStatusActor(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetPlayerNightVisionStatusActor");
        
        UGBFunctionLibrary_GetPlayerNightVisionStatusActor_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetPathLeaf
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetPathLeaf(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetPathLeaf");
        
        UGBFunctionLibrary_GetPathLeaf_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetOptionsFromCommandLine
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                CommandLine                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetOptionsFromCommandLine(const BasicTypes::FString& CommandLine)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetOptionsFromCommandLine");
        
        UGBFunctionLibrary_GetOptionsFromCommandLine_Params params {};
        params.CommandLine = CommandLine;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetOpForCountString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetOpForCountString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetOpForCountString");
        
        UGBFunctionLibrary_GetOpForCountString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetObjectFName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              Object                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBFunctionLibrary::GetObjectFName(CoreUObject::UObject* Object)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetObjectFName");
        
        UGBFunctionLibrary_GetObjectFName_Params params {};
        params.Object = Object;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetNetworkVersion
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBFunctionLibrary::GetNetworkVersion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetNetworkVersion");
        
        UGBFunctionLibrary_GetNetworkVersion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMissionTimeStandardHour
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    TimeLabel                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::GetMissionTimeStandardHour(GroundBranch::EMissionTimeLabel TimeLabel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMissionTimeStandardHour");
        
        UGBFunctionLibrary_GetMissionTimeStandardHour_Params params {};
        params.TimeLabel = TimeLabel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMissionLabelFromString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TimePart                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EMissionTimeLabel                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EMissionTimeLabel UGBFunctionLibrary::GetMissionLabelFromString(const BasicTypes::FString& TimePart)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMissionLabelFromString");
        
        UGBFunctionLibrary_GetMissionLabelFromString_Params params {};
        params.TimePart = TimePart;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMinimapForMissionVariant
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  CurrentVariantName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBMinimap*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBMinimap* UGBFunctionLibrary::GetMinimapForMissionVariant(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& CurrentVariantName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMinimapForMissionVariant");
        
        UGBFunctionLibrary_GetMinimapForMissionVariant_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CurrentVariantName = CurrentVariantName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMaterialInstanceStaticSwitchParameterValue
     *         Flags  -> ()
     * Parameters:
     *         Engine::UMaterialInstance*                         Instance                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ParameterName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCheckParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetMaterialInstanceStaticSwitchParameterValue(Engine::UMaterialInstance* Instance, const BasicTypes::FName& ParameterName, bool bCheckParent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMaterialInstanceStaticSwitchParameterValue");
        
        UGBFunctionLibrary_GetMaterialInstanceStaticSwitchParameterValue_Params params {};
        params.Instance = Instance;
        params.ParameterName = ParameterName;
        params.bCheckParent = bCheckParent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMatchTypeFromString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                MatchTypeString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBMatchType                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBMatchType UGBFunctionLibrary::GetMatchTypeFromString(const BasicTypes::FString& MatchTypeString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMatchTypeFromString");
        
        UGBFunctionLibrary_GetMatchTypeFromString_Params params {};
        params.MatchTypeString = MatchTypeString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMatchingSocketNames
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              SearchNames                                                (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           SceneComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              OutSocketNames                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         GroundBranch::ESearchFix                           SearchFix                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetMatchingSocketNames(BasicTypes::TArray<BasicTypes::FName> SearchNames, Engine::USceneComponent* SceneComp, BasicTypes::TArray<BasicTypes::FName>* OutSocketNames, GroundBranch::ESearchFix SearchFix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMatchingSocketNames");
        
        UGBFunctionLibrary_GetMatchingSocketNames_Params params {};
        params.SearchNames = SearchNames;
        params.SceneComp = SceneComp;
        params.SearchFix = SearchFix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSocketNames != nullptr)
            *OutSocketNames = params.OutSocketNames;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMatchingNames
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              SourceNames                                                (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              SearchNames                                                (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              OutMatchedNames                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         GroundBranch::ESearchFix                           SearchFix                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetMatchingNames(BasicTypes::TArray<BasicTypes::FName> SourceNames, BasicTypes::TArray<BasicTypes::FName> SearchNames, BasicTypes::TArray<BasicTypes::FName>* OutMatchedNames, GroundBranch::ESearchFix SearchFix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMatchingNames");
        
        UGBFunctionLibrary_GetMatchingNames_Params params {};
        params.SourceNames = SourceNames;
        params.SearchNames = SearchNames;
        params.SearchFix = SearchFix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMatchedNames != nullptr)
            *OutMatchedNames = params.OutMatchedNames;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMapPath
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTrimGame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetMapPath(CoreUObject::UObject* WorldContextObject, bool bTrimGame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMapPath");
        
        UGBFunctionLibrary_GetMapPath_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.bTrimGame = bTrimGame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMapFromCommandLine
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                CommandLine                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRemovePath                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetMapFromCommandLine(const BasicTypes::FString& CommandLine, bool bRemovePath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMapFromCommandLine");
        
        UGBFunctionLibrary_GetMapFromCommandLine_Params params {};
        params.CommandLine = CommandLine;
        params.bRemovePath = bRemovePath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetMapAssetPackageName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTrimGame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetMapAssetPackageName(CoreUObject::UObject* WorldContextObject, bool bTrimGame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetMapAssetPackageName");
        
        UGBFunctionLibrary_GetMapAssetPackageName_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.bTrimGame = bTrimGame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetLocalPlayer
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ULocalPlayer*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ULocalPlayer* UGBFunctionLibrary::GetLocalPlayer(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetLocalPlayer");
        
        UGBFunctionLibrary_GetLocalPlayer_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetLevelName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              CurrentObject                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetLevelName(CoreUObject::UObject* CurrentObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetLevelName");
        
        UGBFunctionLibrary_GetLevelName_Params params {};
        params.CurrentObject = CurrentObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetLastDigitsFromString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBFunctionLibrary::GetLastDigitsFromString(const BasicTypes::FString& inString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetLastDigitsFromString");
        
        UGBFunctionLibrary_GetLastDigitsFromString_Params params {};
        params.inString = inString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetKeysBoundToAction
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<InputCore::FKey>                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<InputCore::FKey> UGBFunctionLibrary::GetKeysBoundToAction(const BasicTypes::FName& ActionName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetKeysBoundToAction");
        
        UGBFunctionLibrary_GetKeysBoundToAction_Params params {};
        params.ActionName = ActionName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetJoinInProgressString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetJoinInProgressString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetJoinInProgressString");
        
        UGBFunctionLibrary_GetJoinInProgressString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGenericTeamId
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UGBFunctionLibrary::GetGenericTeamId(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGenericTeamId");
        
        UGBFunctionLibrary_GetGenericTeamId_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGBLocalPlayer
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBLocalPlayer*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBLocalPlayer* UGBFunctionLibrary::GetGBLocalPlayer(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGBLocalPlayer");
        
        UGBFunctionLibrary_GetGBLocalPlayer_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeTypeFromName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  GameModeTypeName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBGameModeType                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBGameModeType UGBFunctionLibrary::GetGameModeTypeFromName(const BasicTypes::FName& GameModeTypeName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeTypeFromName");
        
        UGBFunctionLibrary_GetGameModeTypeFromName_Params params {};
        params.GameModeTypeName = GameModeTypeName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeTypeFromFile
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ScriptFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBGameModeType                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBGameModeType UGBFunctionLibrary::GetGameModeTypeFromFile(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& ScriptFilename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeTypeFromFile");
        
        UGBFunctionLibrary_GetGameModeTypeFromFile_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ScriptFilename = ScriptFilename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeTable
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBFunctionLibrary::GetGameModeTable(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& ScriptName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeTable");
        
        UGBFunctionLibrary_GetGameModeTable_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ScriptName = ScriptName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeAuthor
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetGameModeAuthor(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& ScriptName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameModeAuthor");
        
        UGBFunctionLibrary_GetGameModeAuthor_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ScriptName = ScriptName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameLogDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetGameLogDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameLogDir");
        
        UGBFunctionLibrary_GetGameLogDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetGameDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameDir");
        
        UGBFunctionLibrary_GetGameDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetGameContentDir
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetGameContentDir()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetGameContentDir");
        
        UGBFunctionLibrary_GetGameContentDir_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetFriendlyAICountString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetFriendlyAICountString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetFriendlyAICountString");
        
        UGBFunctionLibrary_GetFriendlyAICountString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetFolderList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                FilePath                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            FolderList                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               RecurseIntoFolders                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetFolderList(const BasicTypes::FString& FilePath, BasicTypes::TArray<BasicTypes::FString>* FolderList, bool RecurseIntoFolders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetFolderList");
        
        UGBFunctionLibrary_GetFolderList_Params params {};
        params.FilePath = FilePath;
        params.RecurseIntoFolders = RecurseIntoFolders;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (FolderList != nullptr)
            *FolderList = params.FolderList;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetFileList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                FilePath                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Extension                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTrimPathAndExt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            FileList                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetFileList(const BasicTypes::FString& FilePath, const BasicTypes::FString& Extension, bool bTrimPathAndExt, BasicTypes::TArray<BasicTypes::FString>* FileList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetFileList");
        
        UGBFunctionLibrary_GetFileList_Params params {};
        params.FilePath = FilePath;
        params.Extension = Extension;
        params.bTrimPathAndExt = bTrimPathAndExt;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (FileList != nullptr)
            *FileList = params.FileList;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetDistanceAlongSplineAtSplineInputKey
     *         Flags  -> ()
     * Parameters:
     *         Engine::USplineComponent*                          SplineComp                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InKey                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::GetDistanceAlongSplineAtSplineInputKey(Engine::USplineComponent* SplineComp, float InKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetDistanceAlongSplineAtSplineInputKey");
        
        UGBFunctionLibrary_GetDistanceAlongSplineAtSplineInputKey_Params params {};
        params.SplineComp = SplineComp;
        params.InKey = InKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetDelayedSoundPosition
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ViewerPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ObjectOrigin                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ObjectVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ElapsedTime                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutDelayedPosition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetDelayedSoundPosition(const CoreUObject::FVector& ViewerPosition, const CoreUObject::FVector& ObjectOrigin, const CoreUObject::FVector& ObjectVelocity, float ElapsedTime, CoreUObject::FVector* OutDelayedPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetDelayedSoundPosition");
        
        UGBFunctionLibrary_GetDelayedSoundPosition_Params params {};
        params.ViewerPosition = ViewerPosition;
        params.ObjectOrigin = ObjectOrigin;
        params.ObjectVelocity = ObjectVelocity;
        params.ElapsedTime = ElapsedTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutDelayedPosition != nullptr)
            *OutDelayedPosition = params.OutDelayedPosition;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetCreationTime
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::GetCreationTime(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetCreationTime");
        
        UGBFunctionLibrary_GetCreationTime_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutString                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::GetConsoleString(const BasicTypes::FString& ConsoleVar, BasicTypes::FString* OutString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleString");
        
        UGBFunctionLibrary_GetConsoleString_Params params {};
        params.ConsoleVar = ConsoleVar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutString != nullptr)
            *OutString = params.OutString;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleInt
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutInt                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::GetConsoleInt(const BasicTypes::FString& ConsoleVar, int32_t* OutInt)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleInt");
        
        UGBFunctionLibrary_GetConsoleInt_Params params {};
        params.ConsoleVar = ConsoleVar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutInt != nullptr)
            *OutInt = params.OutInt;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleHelp
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutHelp                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::GetConsoleHelp(const BasicTypes::FString& ConsoleVar, BasicTypes::FString* OutHelp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleHelp");
        
        UGBFunctionLibrary_GetConsoleHelp_Params params {};
        params.ConsoleVar = ConsoleVar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHelp != nullptr)
            *OutHelp = params.OutHelp;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleFloat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutFloat                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::GetConsoleFloat(const BasicTypes::FString& ConsoleVar, float* OutFloat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleFloat");
        
        UGBFunctionLibrary_GetConsoleFloat_Params params {};
        params.ConsoleVar = ConsoleVar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFloat != nullptr)
            *OutFloat = params.OutFloat;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleBool
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutBool                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::GetConsoleBool(const BasicTypes::FString& ConsoleVar, int32_t* OutBool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetConsoleBool");
        
        UGBFunctionLibrary_GetConsoleBool_Params params {};
        params.ConsoleVar = ConsoleVar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBool != nullptr)
            *OutBool = params.OutBool;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetConfigFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ConfigFile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetConfigFilename(const BasicTypes::FString& ConfigFile)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetConfigFilename");
        
        UGBFunctionLibrary_GetConfigFilename_Params params {};
        params.ConfigFile = ConfigFile;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetComponentByName
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UActorComponent*                           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UActorComponent* UGBFunctionLibrary::GetComponentByName(Engine::AActor* Target, const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetComponentByName");
        
        UGBFunctionLibrary_GetComponentByName_Params params {};
        params.Target = Target;
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetClassDefaultObject
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              Class                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UGBFunctionLibrary::GetClassDefaultObject(CoreUObject::UObject* Class)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetClassDefaultObject");
        
        UGBFunctionLibrary_GetClassDefaultObject_Params params {};
        params.Class = Class;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetBuildType
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bIncludeEditor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetBuildType(bool bIncludeEditor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetBuildType");
        
        UGBFunctionLibrary_GetBuildType_Params params {};
        params.bIncludeEditor = bIncludeEditor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetBuildNumber
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetBuildNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetBuildNumber");
        
        UGBFunctionLibrary_GetBuildNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetBaseFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetBaseFilename(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetBaseFilename");
        
        UGBFunctionLibrary_GetBaseFilename_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetAudioSublevel
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ULevel*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ULevel* UGBFunctionLibrary::GetAudioSublevel(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetAudioSublevel");
        
        UGBFunctionLibrary_GetAudioSublevel_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetAssetSoftObjPtrs
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<CoreUObject::UObject>> OutAssetSoftObjPtrs                                        (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetAssetSoftObjPtrs(const BasicTypes::FString& Path, BasicTypes::TArray<BasicTypes::TSoftObjectPtr<CoreUObject::UObject>>* OutAssetSoftObjPtrs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetAssetSoftObjPtrs");
        
        UGBFunctionLibrary_GetAssetSoftObjPtrs_Params params {};
        params.Path = Path;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetSoftObjPtrs != nullptr)
            *OutAssetSoftObjPtrs = params.OutAssetSoftObjPtrs;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetAlphaNumeric
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Source                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Delimiter                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetAlphaNumeric(const BasicTypes::FString& Source, const BasicTypes::FString& Delimiter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetAlphaNumeric");
        
        UGBFunctionLibrary_GetAlphaNumeric_Params params {};
        params.Source = Source;
        params.Delimiter = Delimiter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetAllWeatherPresetFileNames
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bTrimPath                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UGBFunctionLibrary::GetAllWeatherPresetFileNames(bool bTrimPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetAllWeatherPresetFileNames");
        
        UGBFunctionLibrary_GetAllWeatherPresetFileNames_Params params {};
        params.bTrimPath = bTrimPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActorNameWithoutSuffix
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SoftReferenceString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GetActorNameWithoutSuffix(const BasicTypes::FString& SoftReferenceString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActorNameWithoutSuffix");
        
        UGBFunctionLibrary_GetActorNameWithoutSuffix_Params params {};
        params.SoftReferenceString = SoftReferenceString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshLocalBoundsWithAttachedActors
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                ExcludeActors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FBoxSphereBounds                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FBoxSphereBounds UGBFunctionLibrary::GetActorMeshLocalBoundsWithAttachedActors(Engine::AActor* Target, BasicTypes::TArray<Engine::AActor*> ExcludeActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshLocalBoundsWithAttachedActors");
        
        UGBFunctionLibrary_GetActorMeshLocalBoundsWithAttachedActors_Params params {};
        params.Target = Target;
        params.ExcludeActors = ExcludeActors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshLocalBounds
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FBoxSphereBounds                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FBoxSphereBounds UGBFunctionLibrary::GetActorMeshLocalBounds(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshLocalBounds");
        
        UGBFunctionLibrary_GetActorMeshLocalBounds_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshBoundsWithAttachedActors
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                ExcludeActors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FBoxSphereBounds                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FBoxSphereBounds UGBFunctionLibrary::GetActorMeshBoundsWithAttachedActors(Engine::AActor* Target, BasicTypes::TArray<Engine::AActor*> ExcludeActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshBoundsWithAttachedActors");
        
        UGBFunctionLibrary_GetActorMeshBoundsWithAttachedActors_Params params {};
        params.Target = Target;
        params.ExcludeActors = ExcludeActors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshBounds
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FBoxSphereBounds                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FBoxSphereBounds UGBFunctionLibrary::GetActorMeshBounds(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActorMeshBounds");
        
        UGBFunctionLibrary_GetActorMeshBounds_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActorCameraComponent
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UCameraComponent*                          ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UCameraComponent* UGBFunctionLibrary::GetActorCameraComponent(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActorCameraComponent");
        
        UGBFunctionLibrary_GetActorCameraComponent_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GetActor2DBoundingBox
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bNonColliding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutMins                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutMaxs                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::GetActor2DBoundingBox(Engine::AActor* Target, bool bNonColliding, CoreUObject::FVector2D* OutMins, CoreUObject::FVector2D* OutMaxs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GetActor2DBoundingBox");
        
        UGBFunctionLibrary_GetActor2DBoundingBox_Params params {};
        params.Target = Target;
        params.bNonColliding = bNonColliding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMins != nullptr)
            *OutMins = params.OutMins;
        if (OutMaxs != nullptr)
            *OutMaxs = params.OutMaxs;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Get_PhysicalMaterial
     *         Flags  -> ()
     * Parameters:
     *         Engine::UMaterial*                                 Material                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         PhysicsCore::UPhysicalMaterial*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    PhysicsCore::UPhysicalMaterial* UGBFunctionLibrary::Get_PhysicalMaterial(Engine::UMaterial* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Get_PhysicalMaterial");
        
        UGBFunctionLibrary_Get_PhysicalMaterial_Params params {};
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.GenerateMissionDisplayName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InMapName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InVariantName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::GenerateMissionDisplayName(const BasicTypes::FString& InMapName, const BasicTypes::FString& InVariantName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.GenerateMissionDisplayName");
        
        UGBFunctionLibrary_GenerateMissionDisplayName_Params params {};
        params.InMapName = InMapName;
        params.InVariantName = InVariantName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.FolderExists
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::FolderExists(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.FolderExists");
        
        UGBFunctionLibrary_FolderExists_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.FlushPressedKeys
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::FlushPressedKeys(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.FlushPressedKeys");
        
        UGBFunctionLibrary_FlushPressedKeys_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.FlushPressedActions
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              ActionNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::FlushPressedActions(Engine::APlayerController* PlayerController, BasicTypes::TArray<BasicTypes::FName> ActionNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.FlushPressedActions");
        
        UGBFunctionLibrary_FlushPressedActions_Params params {};
        params.PlayerController = PlayerController;
        params.ActionNames = ActionNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.FlushPressedAction
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::FlushPressedAction(Engine::APlayerController* PlayerController, const BasicTypes::FName& ActionName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.FlushPressedAction");
        
        UGBFunctionLibrary_FlushPressedAction_Params params {};
        params.PlayerController = PlayerController;
        params.ActionName = ActionName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.FindWeatherPresetFromWhitelist
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  DecodedWeatherCategory                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DecodedWeatherType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> WeatherPresetWhitelist                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SkyCreatorPlugin::USkyCreatorWeatherPreset* UGBFunctionLibrary::FindWeatherPresetFromWhitelist(const BasicTypes::FName& DecodedWeatherCategory, const BasicTypes::FName& DecodedWeatherType, BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> WeatherPresetWhitelist)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.FindWeatherPresetFromWhitelist");
        
        UGBFunctionLibrary_FindWeatherPresetFromWhitelist_Params params {};
        params.DecodedWeatherCategory = DecodedWeatherCategory;
        params.DecodedWeatherType = DecodedWeatherType;
        params.WeatherPresetWhitelist = WeatherPresetWhitelist;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.FindWeatherPreset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  DecodedWeatherCategory                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DecodedWeatherType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SkyCreatorPlugin::USkyCreatorWeatherPreset* UGBFunctionLibrary::FindWeatherPreset(const BasicTypes::FName& DecodedWeatherCategory, const BasicTypes::FName& DecodedWeatherType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.FindWeatherPreset");
        
        UGBFunctionLibrary_FindWeatherPreset_Params params {};
        params.DecodedWeatherCategory = DecodedWeatherCategory;
        params.DecodedWeatherType = DecodedWeatherType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.fileExists
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::fileExists(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.fileExists");
        
        UGBFunctionLibrary_fileExists_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ExtractAlphanumericText
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SourceStr                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllowHyphens                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::ExtractAlphanumericText(const BasicTypes::FString& SourceStr, bool bAllowHyphens)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ExtractAlphanumericText");
        
        UGBFunctionLibrary_ExtractAlphanumericText_Params params {};
        params.SourceStr = SourceStr;
        params.bAllowHyphens = bAllowHyphens;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EvalBool
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Option                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bDefaultValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::EvalBool(const BasicTypes::FString& Option, bool bDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EvalBool");
        
        UGBFunctionLibrary_EvalBool_Params params {};
        params.Option = Option;
        params.bDefaultValue = bDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeWeatherString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  WeatherCategory                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  WeatherType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeWeatherString(const BasicTypes::FName& WeatherCategory, const BasicTypes::FName& WeatherType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeWeatherString");
        
        UGBFunctionLibrary_EncodeWeatherString_Params params {};
        params.WeatherCategory = WeatherCategory;
        params.WeatherType = WeatherType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeWeatherPresetObjectName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  WeatherCategory                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  WeatherType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAddPath                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeWeatherPresetObjectName(const BasicTypes::FName& WeatherCategory, const BasicTypes::FName& WeatherType, bool bAddPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeWeatherPresetObjectName");
        
        UGBFunctionLibrary_EncodeWeatherPresetObjectName_Params params {};
        params.WeatherCategory = WeatherCategory;
        params.WeatherType = WeatherType;
        params.bAddPath = bAddPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeWeatherPresetFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  WeatherCategory                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  WeatherType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAddPath                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeWeatherPresetFileName(const BasicTypes::FName& WeatherCategory, const BasicTypes::FName& WeatherType, bool bAddPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeWeatherPresetFileName");
        
        UGBFunctionLibrary_EncodeWeatherPresetFileName_Params params {};
        params.WeatherCategory = WeatherCategory;
        params.WeatherType = WeatherType;
        params.bAddPath = bAddPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayTimeStringMins
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    MissionTimeLabel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            TimeInMins                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeTimeOfDayTimeStringMins(GroundBranch::EMissionTimeLabel MissionTimeLabel, int32_t TimeInMins)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayTimeStringMins");
        
        UGBFunctionLibrary_EncodeTimeOfDayTimeStringMins_Params params {};
        params.MissionTimeLabel = MissionTimeLabel;
        params.TimeInMins = TimeInMins;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayTimeStringHours
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    MissionTimeLabel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TimeInHours                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeTimeOfDayTimeStringHours(GroundBranch::EMissionTimeLabel MissionTimeLabel, float TimeInHours)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayTimeStringHours");
        
        UGBFunctionLibrary_EncodeTimeOfDayTimeStringHours_Params params {};
        params.MissionTimeLabel = MissionTimeLabel;
        params.TimeInHours = TimeInHours;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayStringMins
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    MissionTimeLabel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            TimeInMins                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Year                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Month                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Day                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeTimeOfDayStringMins(GroundBranch::EMissionTimeLabel MissionTimeLabel, int32_t TimeInMins, int32_t Year, int32_t Month, int32_t Day)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayStringMins");
        
        UGBFunctionLibrary_EncodeTimeOfDayStringMins_Params params {};
        params.MissionTimeLabel = MissionTimeLabel;
        params.TimeInMins = TimeInMins;
        params.Year = Year;
        params.Month = Month;
        params.Day = Day;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayStringHours
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    MissionTimeLabel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TimeInHours                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Year                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Month                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Day                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeTimeOfDayStringHours(GroundBranch::EMissionTimeLabel MissionTimeLabel, float TimeInHours, int32_t Year, int32_t Month, int32_t Day)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayStringHours");
        
        UGBFunctionLibrary_EncodeTimeOfDayStringHours_Params params {};
        params.MissionTimeLabel = MissionTimeLabel;
        params.TimeInHours = TimeInHours;
        params.Year = Year;
        params.Month = Month;
        params.Day = Day;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayDateString
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            Year                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Month                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Day                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeTimeOfDayDateString(int32_t Year, int32_t Month, int32_t Day)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeTimeOfDayDateString");
        
        UGBFunctionLibrary_EncodeTimeOfDayDateString_Params params {};
        params.Year = Year;
        params.Month = Month;
        params.Day = Day;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.EncodeServerTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ServerTag                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::EncodeServerTag(const BasicTypes::FString& ServerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.EncodeServerTag");
        
        UGBFunctionLibrary_EncodeServerTag_Params params {};
        params.ServerTag = ServerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DumpGameInfoToLog
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                DumpContext                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DumpGameInfoToLog(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& DumpContext)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DumpGameInfoToLog");
        
        UGBFunctionLibrary_DumpGameInfoToLog_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.DumpContext = DumpContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DrawDebugWideArrow
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineStart                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineEnd                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          LineColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DrawDebugWideArrow(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& LineStart, const CoreUObject::FVector& LineEnd, float Width, const CoreUObject::FLinearColor& LineColor, float Duration, float Thickness)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DrawDebugWideArrow");
        
        UGBFunctionLibrary_DrawDebugWideArrow_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LineStart = LineStart;
        params.LineEnd = LineEnd;
        params.Width = Width;
        params.LineColor = LineColor;
        params.Duration = Duration;
        params.Thickness = Thickness;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Deproject
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FTransform                            ViewTM                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              FOV                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Deproject(const CoreUObject::FTransform& ViewTM, float FOV, const CoreUObject::FVector2D& ScreenSize, const CoreUObject::FVector2D& ScreenPosition, CoreUObject::FVector* OutWorldLocation, CoreUObject::FVector* OutWorldDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Deproject");
        
        UGBFunctionLibrary_Deproject_Params params {};
        params.ViewTM = ViewTM;
        params.FOV = FOV;
        params.ScreenSize = ScreenSize;
        params.ScreenPosition = ScreenPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWorldLocation != nullptr)
            *OutWorldLocation = params.OutWorldLocation;
        if (OutWorldDirection != nullptr)
            *OutWorldDirection = params.OutWorldDirection;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.deleteFile
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLogWarnings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::deleteFile(const BasicTypes::FString& Filename, bool bLogWarnings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.deleteFile");
        
        UGBFunctionLibrary_deleteFile_Params params {};
        params.Filename = Filename;
        params.bLogWarnings = bLogWarnings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecompressAxisFromByte
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            CompressedAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::DecompressAxisFromByte(uint8_t CompressedAngle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecompressAxisFromByte");
        
        UGBFunctionLibrary_DecompressAxisFromByte_Params params {};
        params.CompressedAngle = CompressedAngle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecodeWeatherString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherCategory                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DecodeWeatherString(const BasicTypes::FString& inString, BasicTypes::FName* OutWeatherCategory, BasicTypes::FName* OutWeatherType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecodeWeatherString");
        
        UGBFunctionLibrary_DecodeWeatherString_Params params {};
        params.inString = inString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWeatherCategory != nullptr)
            *OutWeatherCategory = params.OutWeatherCategory;
        if (OutWeatherType != nullptr)
            *OutWeatherType = params.OutWeatherType;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecodeWeatherPresetFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                WeatherFilename                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherCategory                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DecodeWeatherPresetFileName(const BasicTypes::FString& WeatherFilename, BasicTypes::FName* OutWeatherCategory, BasicTypes::FName* OutWeatherType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecodeWeatherPresetFileName");
        
        UGBFunctionLibrary_DecodeWeatherPresetFileName_Params params {};
        params.WeatherFilename = WeatherFilename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWeatherCategory != nullptr)
            *OutWeatherCategory = params.OutWeatherCategory;
        if (OutWeatherType != nullptr)
            *OutWeatherType = params.OutWeatherType;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecodeTimeOfDayTimeString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InTimeString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EMissionTimeLabel                    OutMissionTimeLabel                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutTimeInHours                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DecodeTimeOfDayTimeString(const BasicTypes::FString& InTimeString, GroundBranch::EMissionTimeLabel* OutMissionTimeLabel, float* OutTimeInHours)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecodeTimeOfDayTimeString");
        
        UGBFunctionLibrary_DecodeTimeOfDayTimeString_Params params {};
        params.InTimeString = InTimeString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMissionTimeLabel != nullptr)
            *OutMissionTimeLabel = params.OutMissionTimeLabel;
        if (OutTimeInHours != nullptr)
            *OutTimeInHours = params.OutTimeInHours;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecodeTimeOfDayString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EMissionTimeLabel                    OutMissionTimeLabel                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutTimeInHours                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutYear                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutMonth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutDay                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSetDefaultDate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DecodeTimeOfDayString(const BasicTypes::FString& inString, GroundBranch::EMissionTimeLabel* OutMissionTimeLabel, float* OutTimeInHours, int32_t* OutYear, int32_t* OutMonth, int32_t* OutDay, bool bSetDefaultDate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecodeTimeOfDayString");
        
        UGBFunctionLibrary_DecodeTimeOfDayString_Params params {};
        params.inString = inString;
        params.bSetDefaultDate = bSetDefaultDate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMissionTimeLabel != nullptr)
            *OutMissionTimeLabel = params.OutMissionTimeLabel;
        if (OutTimeInHours != nullptr)
            *OutTimeInHours = params.OutTimeInHours;
        if (OutYear != nullptr)
            *OutYear = params.OutYear;
        if (OutMonth != nullptr)
            *OutMonth = params.OutMonth;
        if (OutDay != nullptr)
            *OutDay = params.OutDay;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecodeTimeOfDayDateString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InDateString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutYear                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutMonth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutDay                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::DecodeTimeOfDayDateString(const BasicTypes::FString& InDateString, int32_t* OutYear, int32_t* OutMonth, int32_t* OutDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecodeTimeOfDayDateString");
        
        UGBFunctionLibrary_DecodeTimeOfDayDateString_Params params {};
        params.InDateString = InDateString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutYear != nullptr)
            *OutYear = params.OutYear;
        if (OutMonth != nullptr)
            *OutMonth = params.OutMonth;
        if (OutDay != nullptr)
            *OutDay = params.OutDay;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.DecodeServerTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ServerTag                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::DecodeServerTag(const BasicTypes::FString& ServerTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.DecodeServerTag");
        
        UGBFunctionLibrary_DecodeServerTag_Params params {};
        params.ServerTag = ServerTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CreateVolume
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            SpawnTM                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AVolume*                                   VolumeClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AVolume*                                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AVolume* UGBFunctionLibrary::CreateVolume(CoreUObject::UObject* WorldContextObject, const CoreUObject::FTransform& SpawnTM, const CoreUObject::FVector& Size, Engine::AVolume* VolumeClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CreateVolume");
        
        UGBFunctionLibrary_CreateVolume_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SpawnTM = SpawnTM;
        params.Size = Size;
        params.VolumeClass = VolumeClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CreateMeshComponentCopy
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    NewOwner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UMeshComponent*                            Source                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UMeshComponent*                            ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMeshComponent* UGBFunctionLibrary::CreateMeshComponentCopy(Engine::AActor* NewOwner, Engine::UMeshComponent* Source)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CreateMeshComponentCopy");
        
        UGBFunctionLibrary_CreateMeshComponentCopy_Params params {};
        params.NewOwner = NewOwner;
        params.Source = Source;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CreateFoldersForFilename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::CreateFoldersForFilename(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CreateFoldersForFilename");
        
        UGBFunctionLibrary_CreateFoldersForFilename_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.createDirectory
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::createDirectory(const BasicTypes::FString& Path)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.createDirectory");
        
        UGBFunctionLibrary_createDirectory_Params params {};
        params.Path = Path;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CopyMeshComponents
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    NewOwner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UMeshComponent*                            ParentComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UMeshComponent*                            ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMeshComponent* UGBFunctionLibrary::CopyMeshComponents(Engine::AActor* NewOwner, Engine::UMeshComponent* ParentComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CopyMeshComponents");
        
        UGBFunctionLibrary_CopyMeshComponents_Params params {};
        params.NewOwner = NewOwner;
        params.ParentComponent = ParentComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ConvertMinutesTo24Hours
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            MinutesOfDay                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::ConvertMinutesTo24Hours(int32_t MinutesOfDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ConvertMinutesTo24Hours");
        
        UGBFunctionLibrary_ConvertMinutesTo24Hours_Params params {};
        params.MinutesOfDay = MinutesOfDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Convert24HoursToMinutes
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TimeString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBFunctionLibrary::Convert24HoursToMinutes(const BasicTypes::FString& TimeString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Convert24HoursToMinutes");
        
        UGBFunctionLibrary_Convert24HoursToMinutes_Params params {};
        params.TimeString = TimeString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_SetString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_SetString(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, const BasicTypes::FString& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_SetString");
        
        UGBFunctionLibrary_Config_SetString_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_SetInt
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_SetInt(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, int32_t Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_SetInt");
        
        UGBFunctionLibrary_Config_SetInt_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_SetFloat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_SetFloat(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, float Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_SetFloat");
        
        UGBFunctionLibrary_Config_SetFloat_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_SetBool
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_SetBool(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, bool Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_SetBool");
        
        UGBFunctionLibrary_Config_SetBool_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_SetArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            Values                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_SetArray(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, BasicTypes::TArray<BasicTypes::FString> Values)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_SetArray");
        
        UGBFunctionLibrary_Config_SetArray_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Values = Values;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_Save
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_Save(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_Save");
        
        UGBFunctionLibrary_Config_Save_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_RemoveFromArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_RemoveFromArray(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, const BasicTypes::FString& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_RemoveFromArray");
        
        UGBFunctionLibrary_Config_RemoveFromArray_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_GetString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::Config_GetString(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, bool* bValid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_GetString");
        
        UGBFunctionLibrary_Config_GetString_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bValid != nullptr)
            *bValid = params.bValid;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_GetInt
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBFunctionLibrary::Config_GetInt(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, bool* bValid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_GetInt");
        
        UGBFunctionLibrary_Config_GetInt_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bValid != nullptr)
            *bValid = params.bValid;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_GetFloat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::Config_GetFloat(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, bool* bValid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_GetFloat");
        
        UGBFunctionLibrary_Config_GetFloat_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bValid != nullptr)
            *bValid = params.bValid;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_GetBool
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::Config_GetBool(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, bool* bValid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_GetBool");
        
        UGBFunctionLibrary_Config_GetBool_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bValid != nullptr)
            *bValid = params.bValid;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_GetArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UGBFunctionLibrary::Config_GetArray(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, bool* bValid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_GetArray");
        
        UGBFunctionLibrary_Config_GetArray_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bValid != nullptr)
            *bValid = params.bValid;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_DeleteArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_DeleteArray(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_DeleteArray");
        
        UGBFunctionLibrary_Config_DeleteArray_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Config_AddToArray
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Config_AddToArray(const BasicTypes::FString& Filename, const BasicTypes::FString& Section, const BasicTypes::FString& Key, const BasicTypes::FString& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Config_AddToArray");
        
        UGBFunctionLibrary_Config_AddToArray_Params params {};
        params.Filename = Filename;
        params.Section = Section;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CondenseJsonString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                JsonString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutCondensedString                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::CondenseJsonString(const BasicTypes::FString& JsonString, BasicTypes::FString* OutCondensedString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CondenseJsonString");
        
        UGBFunctionLibrary_CondenseJsonString_Params params {};
        params.JsonString = JsonString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutCondensedString != nullptr)
            *OutCondensedString = params.OutCondensedString;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Component_SetCastHiddenShadow
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       PrimitiveComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bNewCastHiddenShadow                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Component_SetCastHiddenShadow(Engine::UPrimitiveComponent* PrimitiveComponent, bool bNewCastHiddenShadow)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Component_SetCastHiddenShadow");
        
        UGBFunctionLibrary_Component_SetCastHiddenShadow_Params params {};
        params.PrimitiveComponent = PrimitiveComponent;
        params.bNewCastHiddenShadow = bNewCastHiddenShadow;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ClearFileReadyOnly
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ClearFileReadyOnly(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ClearFileReadyOnly");
        
        UGBFunctionLibrary_ClearFileReadyOnly_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ClearDirectoryReadyOnly
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRecursive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::ClearDirectoryReadyOnly(const BasicTypes::FString& Path, bool bRecursive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ClearDirectoryReadyOnly");
        
        UGBFunctionLibrary_ClearDirectoryReadyOnly_Params params {};
        params.Path = Path;
        params.bRecursive = bRecursive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CleanAuthorName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InAuthorName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bReturnUnknownIfUnknown                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::CleanAuthorName(const BasicTypes::FString& InAuthorName, bool bReturnUnknownIfUnknown)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CleanAuthorName");
        
        UGBFunctionLibrary_CleanAuthorName_Params params {};
        params.InAuthorName = InAuthorName;
        params.bReturnUnknownIfUnknown = bReturnUnknownIfUnknown;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CaptureComponent2D_SaveImage
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneCaptureComponent2D*                  Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ImagePath                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          ClearColour                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::CaptureComponent2D_SaveImage(Engine::USceneCaptureComponent2D* Target, const BasicTypes::FString& ImagePath, const CoreUObject::FLinearColor& ClearColour)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CaptureComponent2D_SaveImage");
        
        UGBFunctionLibrary_CaptureComponent2D_SaveImage_Params params {};
        params.Target = Target;
        params.ImagePath = ImagePath;
        params.ClearColour = ClearColour;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CaptureComponent2D_Project
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneCaptureComponent2D*                  Target                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutPixelLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::CaptureComponent2D_Project(Engine::USceneCaptureComponent2D* Target, const CoreUObject::FVector& Location, CoreUObject::FVector2D* OutPixelLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CaptureComponent2D_Project");
        
        UGBFunctionLibrary_CaptureComponent2D_Project_Params params {};
        params.Target = Target;
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPixelLocation != nullptr)
            *OutPixelLocation = params.OutPixelLocation;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.CaptureComponent2D_DeProject
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneCaptureComponent2D*                  Target                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPos                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldOrigin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::CaptureComponent2D_DeProject(Engine::USceneCaptureComponent2D* Target, const CoreUObject::FVector2D& ScreenPos, CoreUObject::FVector* OutWorldOrigin, CoreUObject::FVector* OutWorldDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.CaptureComponent2D_DeProject");
        
        UGBFunctionLibrary_CaptureComponent2D_DeProject_Params params {};
        params.Target = Target;
        params.ScreenPos = ScreenPos;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWorldOrigin != nullptr)
            *OutWorldOrigin = params.OutWorldOrigin;
        if (OutWorldDirection != nullptr)
            *OutWorldDirection = params.OutWorldDirection;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Capture2D_SaveImage
     *         Flags  -> ()
     * Parameters:
     *         Engine::ASceneCapture2D*                           Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ImagePath                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          ClearColour                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::Capture2D_SaveImage(Engine::ASceneCapture2D* Target, const BasicTypes::FString& ImagePath, const CoreUObject::FLinearColor& ClearColour)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Capture2D_SaveImage");
        
        UGBFunctionLibrary_Capture2D_SaveImage_Params params {};
        params.Target = Target;
        params.ImagePath = ImagePath;
        params.ClearColour = ClearColour;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Capture2D_Project
     *         Flags  -> ()
     * Parameters:
     *         Engine::ASceneCapture2D*                           Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutPixelLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Capture2D_Project(Engine::ASceneCapture2D* Target, const CoreUObject::FVector& Location, CoreUObject::FVector2D* OutPixelLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Capture2D_Project");
        
        UGBFunctionLibrary_Capture2D_Project_Params params {};
        params.Target = Target;
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPixelLocation != nullptr)
            *OutPixelLocation = params.OutPixelLocation;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Capture2D_DeProject
     *         Flags  -> ()
     * Parameters:
     *         Engine::ASceneCapture2D*                           Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPos                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldOrigin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Capture2D_DeProject(Engine::ASceneCapture2D* Target, const CoreUObject::FVector2D& ScreenPos, CoreUObject::FVector* OutWorldOrigin, CoreUObject::FVector* OutWorldDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Capture2D_DeProject");
        
        UGBFunctionLibrary_Capture2D_DeProject_Params params {};
        params.Target = Target;
        params.ScreenPos = ScreenPos;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWorldOrigin != nullptr)
            *OutWorldOrigin = params.OutWorldOrigin;
        if (OutWorldDirection != nullptr)
            *OutWorldDirection = params.OutWorldDirection;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ByteToSignedAlpha
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ByteValue                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::ByteToSignedAlpha(uint8_t ByteValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ByteToSignedAlpha");
        
        UGBFunctionLibrary_ByteToSignedAlpha_Params params {};
        params.ByteValue = ByteValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.ByteToAlpha
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ByteValue                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBFunctionLibrary::ByteToAlpha(uint8_t ByteValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.ByteToAlpha");
        
        UGBFunctionLibrary_ByteToAlpha_Params params {};
        params.ByteValue = ByteValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.BP_GetJsonObjHash
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         JsonObj                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBFunctionLibrary::BP_GetJsonObjHash(VaRest::UVaRestJsonObject* JsonObj)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.BP_GetJsonObjHash");
        
        UGBFunctionLibrary_BP_GetJsonObjHash_Params params {};
        params.JsonObj = JsonObj;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.BlueprintSyncLoadClass
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftClassPtr<CoreUObject::UObject>    SoftClassPtr                                               (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UGBFunctionLibrary::BlueprintSyncLoadClass(BasicTypes::TSoftClassPtr<CoreUObject::UObject> SoftClassPtr)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.BlueprintSyncLoadClass");
        
        UGBFunctionLibrary_BlueprintSyncLoadClass_Params params {};
        params.SoftClassPtr = SoftClassPtr;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.BlueprintSyncLoadAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<CoreUObject::UObject>   SoftObjectPtr                                              (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UGBFunctionLibrary::BlueprintSyncLoadAsset(BasicTypes::TSoftObjectPtr<CoreUObject::UObject> SoftObjectPtr)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.BlueprintSyncLoadAsset");
        
        UGBFunctionLibrary_BlueprintSyncLoadAsset_Params params {};
        params.SoftObjectPtr = SoftObjectPtr;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.Array_Sort
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<int32_t>                        TargetArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bAscendingOrder                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  VariableName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBFunctionLibrary::Array_Sort(BasicTypes::TArray<int32_t> TargetArray, bool bAscendingOrder, const BasicTypes::FName& VariableName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.Array_Sort");
        
        UGBFunctionLibrary_Array_Sort_Params params {};
        params.TargetArray = TargetArray;
        params.bAscendingOrder = bAscendingOrder;
        params.VariableName = VariableName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.AngleWithin
     *         Flags  -> ()
     * Parameters:
     *         float                                              AngleDegrees                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MinAngleDegrees                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxAngleDegrees                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bInclusive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBFunctionLibrary::AngleWithin(float AngleDegrees, float MinAngleDegrees, float MaxAngleDegrees, bool bInclusive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.AngleWithin");
        
        UGBFunctionLibrary_AngleWithin_Params params {};
        params.AngleDegrees = AngleDegrees;
        params.MinAngleDegrees = MinAngleDegrees;
        params.MaxAngleDegrees = MaxAngleDegrees;
        params.bInclusive = bInclusive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBFunctionLibrary.AlphaToByte
     *         Flags  -> ()
     * Parameters:
     *         float                                              AlphaValue                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UGBFunctionLibrary::AlphaToByte(float AlphaValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBFunctionLibrary.AlphaToByte");
        
        UGBFunctionLibrary_AlphaToByte_Params params {};
        params.AlphaValue = AlphaValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.UnFreezeBots
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::UnFreezeBots(const LuaMachine::FLuaValue& InTeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.UnFreezeBots");
        
        UGBLuaGameModePackage_UnFreezeBots_Params params {};
        params.InTeamId = InTeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.TriggerLevelSequenceActor
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InLevelSequenceActor                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              IsCutscene                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              CanAbort                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ResetActors                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              HidePlayers                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              BlackOutAfter                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::TriggerLevelSequenceActor(const LuaMachine::FLuaValue& InLevelSequenceActor, const LuaMachine::FLuaValue& IsCutscene, const LuaMachine::FLuaValue& CanAbort, const LuaMachine::FLuaValue& ResetActors, const LuaMachine::FLuaValue& HidePlayers, const LuaMachine::FLuaValue& BlackOutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.TriggerLevelSequenceActor");
        
        UGBLuaGameModePackage_TriggerLevelSequenceActor_Params params {};
        params.InLevelSequenceActor = InLevelSequenceActor;
        params.IsCutscene = IsCutscene;
        params.CanAbort = CanAbort;
        params.ResetActors = ResetActors;
        params.HidePlayers = HidePlayers;
        params.BlackOutAfter = BlackOutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.StopCurrentSequencePlayback
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              SuppressBlackOutAfter                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::StopCurrentSequencePlayback(const LuaMachine::FLuaValue& SuppressBlackOutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.StopCurrentSequencePlayback");
        
        UGBLuaGameModePackage_StopCurrentSequencePlayback_Params params {};
        params.SuppressBlackOutAfter = SuppressBlackOutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.StartBenchmark
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::StartBenchmark()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.StartBenchmark");
        
        UGBLuaGameModePackage_StartBenchmark_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SpawnEffectAtLocation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InEffectClass                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLocation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SpawnEffectAtLocation(const LuaMachine::FLuaValue& InEffectClass, const LuaMachine::FLuaValue& InLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SpawnEffectAtLocation");
        
        UGBLuaGameModePackage_SpawnEffectAtLocation_Params params {};
        params.InEffectClass = InEffectClass;
        params.InLocation = InLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetWatchMode
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InWatchMode                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDisplayBearing                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDisplayDistance                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDisplayUpDown                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMeasure2D                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetWatchMode(const LuaMachine::FLuaValue& InWatchMode, const LuaMachine::FLuaValue& InDisplayBearing, const LuaMachine::FLuaValue& InDisplayDistance, const LuaMachine::FLuaValue& InDisplayUpDown, const LuaMachine::FLuaValue& InMeasure2D)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetWatchMode");
        
        UGBLuaGameModePackage_SetWatchMode_Params params {};
        params.InWatchMode = InWatchMode;
        params.InDisplayBearing = InDisplayBearing;
        params.InDisplayDistance = InDisplayDistance;
        params.InDisplayUpDown = InDisplayUpDown;
        params.InMeasure2D = InMeasure2D;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetTeamScoreTypes
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InScoreTypeTable                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetTeamScoreTypes(const LuaMachine::FLuaValue& InScoreTypeTable)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetTeamScoreTypes");
        
        UGBLuaGameModePackage_SetTeamScoreTypes_Params params {};
        params.InScoreTypeTable = InScoreTypeTable;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetTeamAttitude
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InOtherTeamId                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAttitude                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetTeamAttitude(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InOtherTeamId, const LuaMachine::FLuaValue& InAttitude)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetTeamAttitude");
        
        UGBLuaGameModePackage_SetTeamAttitude_Params params {};
        params.InTeamId = InTeamId;
        params.InOtherTeamId = InOtherTeamId;
        params.InAttitude = InAttitude;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetSearchablePropYieldsIntel
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSearchableProp                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              NewYieldsIntel                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetSearchablePropYieldsIntel(const LuaMachine::FLuaValue& InSearchableProp, const LuaMachine::FLuaValue& NewYieldsIntel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetSearchablePropYieldsIntel");
        
        UGBLuaGameModePackage_SetSearchablePropYieldsIntel_Params params {};
        params.InSearchableProp = InSearchableProp;
        params.NewYieldsIntel = NewYieldsIntel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InRoundStageTime                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetRoundStageTime(const LuaMachine::FLuaValue& InRoundStageTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetRoundStageTime");
        
        UGBLuaGameModePackage_SetRoundStageTime_Params params {};
        params.InRoundStageTime = InRoundStageTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetRoundStage
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InRoundStageName                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetRoundStage(const LuaMachine::FLuaValue& InRoundStageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetRoundStage");
        
        UGBLuaGameModePackage_SetRoundStage_Params params {};
        params.InRoundStageName = InRoundStageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetRoundIsTemporaryGameMode
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              IsTemporary                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetRoundIsTemporaryGameMode(const LuaMachine::FLuaValue& IsTemporary)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetRoundIsTemporaryGameMode");
        
        UGBLuaGameModePackage_SetRoundIsTemporaryGameMode_Params params {};
        params.IsTemporary = IsTemporary;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetPlayerTeamRole
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewRole                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetPlayerTeamRole(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InNewRole)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetPlayerTeamRole");
        
        UGBLuaGameModePackage_SetPlayerTeamRole_Params params {};
        params.InTeamId = InTeamId;
        params.InNewRole = InNewRole;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetPlayerScoreTypes
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InScoreTypeTable                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetPlayerScoreTypes(const LuaMachine::FLuaValue& InScoreTypeTable)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetPlayerScoreTypes");
        
        UGBLuaGameModePackage_SetPlayerScoreTypes_Params params {};
        params.InScoreTypeTable = InScoreTypeTable;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetObjectiveStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InMissionObjectiveActor                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewObjectiveStatus                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetObjectiveStatus(const LuaMachine::FLuaValue& InMissionObjectiveActor, const LuaMachine::FLuaValue& InNewObjectiveStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetObjectiveStatus");
        
        UGBLuaGameModePackage_SetObjectiveStatus_Params params {};
        params.InMissionObjectiveActor = InMissionObjectiveActor;
        params.InNewObjectiveStatus = InNewObjectiveStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetObjectiveLocation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InObjectiveLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetObjectiveLocation(const LuaMachine::FLuaValue& InObjectiveLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetObjectiveLocation");
        
        UGBLuaGameModePackage_SetObjectiveLocation_Params params {};
        params.InObjectiveLocation = InObjectiveLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetMissionSettingValue
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              SettingName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              SettingValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetMissionSettingValue(const LuaMachine::FLuaValue& SettingName, const LuaMachine::FLuaValue& SettingValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetMissionSettingValue");
        
        UGBLuaGameModePackage_SetMissionSettingValue_Params params {};
        params.SettingName = SettingName;
        params.SettingValue = SettingValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetGameModeName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InGameModeName                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetGameModeName(const LuaMachine::FLuaValue& InGameModeName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetGameModeName");
        
        UGBLuaGameModePackage_SetGameModeName_Params params {};
        params.InGameModeName = InGameModeName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetDefaultRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InRoundStageName                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InNewTimeLimit                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetDefaultRoundStageTime(const LuaMachine::FLuaValue& InRoundStageName, const LuaMachine::FLuaValue& InNewTimeLimit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetDefaultRoundStageTime");
        
        UGBLuaGameModePackage_SetDefaultRoundStageTime_Params params {};
        params.InRoundStageName = InRoundStageName;
        params.InNewTimeLimit = InNewTimeLimit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetCaptureZone
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InCaptureRadius                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InCaptureHeight                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDefenderTeamId                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InZoneIsSpherical                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetCaptureZone(const LuaMachine::FLuaValue& InCaptureRadius, const LuaMachine::FLuaValue& InCaptureHeight, const LuaMachine::FLuaValue& InDefenderTeamId, const LuaMachine::FLuaValue& InZoneIsSpherical)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetCaptureZone");
        
        UGBLuaGameModePackage_SetCaptureZone_Params params {};
        params.InCaptureRadius = InCaptureRadius;
        params.InCaptureHeight = InCaptureHeight;
        params.InDefenderTeamId = InDefenderTeamId;
        params.InZoneIsSpherical = InZoneIsSpherical;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SetCaptureState
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              IsCapturing                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SetCaptureState(const LuaMachine::FLuaValue& IsCapturing)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SetCaptureState");
        
        UGBLuaGameModePackage_SetCaptureState_Params params {};
        params.IsCapturing = IsCapturing;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SendMessageToPlayerById
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InPlayerId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InMessage                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InMessageType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InMessageDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SendMessageToPlayerById(int32_t InPlayerId, const BasicTypes::FName& InMessage, const BasicTypes::FName& InMessageType, float InMessageDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SendMessageToPlayerById");
        
        UGBLuaGameModePackage_SendMessageToPlayerById_Params params {};
        params.InPlayerId = InPlayerId;
        params.InMessage = InMessage;
        params.InMessageType = InMessageType;
        params.InMessageDuration = InMessageDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SendEveryoneToReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SendEveryoneToReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SendEveryoneToReadyRoom");
        
        UGBLuaGameModePackage_SendEveryoneToReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.SendEveryoneToPlayArea
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::SendEveryoneToPlayArea()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.SendEveryoneToPlayArea");
        
        UGBLuaGameModePackage_SendEveryoneToPlayArea_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ReturnToMenu
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ReturnToMenu()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ReturnToMenu");
        
        UGBLuaGameModePackage_ReturnToMenu_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ResetWatch
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ResetWatch()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ResetWatch");
        
        UGBLuaGameModePackage_ResetWatch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ResetTeamScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ResetTeamScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ResetTeamScores");
        
        UGBLuaGameModePackage_ResetTeamScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ResetPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ResetPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ResetPlayerScores");
        
        UGBLuaGameModePackage_ResetPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ResetMatchStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ResetMatchStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ResetMatchStats");
        
        UGBLuaGameModePackage_ResetMatchStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ResetBalanceTeams
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              NewNumberOfMovementsToTrack                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              NewAutoBalanceLightTouchSetting                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ResetBalanceTeams(const LuaMachine::FLuaValue& NewNumberOfMovementsToTrack, const LuaMachine::FLuaValue& NewAutoBalanceLightTouchSetting)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ResetBalanceTeams");
        
        UGBLuaGameModePackage_ResetBalanceTeams_Params params {};
        params.NewNumberOfMovementsToTrack = NewNumberOfMovementsToTrack;
        params.NewAutoBalanceLightTouchSetting = NewAutoBalanceLightTouchSetting;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.RemoveBots
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InCount                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::RemoveBots(const LuaMachine::FLuaValue& InCount, const LuaMachine::FLuaValue& InTeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.RemoveBots");
        
        UGBLuaGameModePackage_RemoveBots_Params params {};
        params.InCount = InCount;
        params.InTeamId = InTeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.RemoveBlackOut
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              FadeOut                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::RemoveBlackOut(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& FadeOut)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.RemoveBlackOut");
        
        UGBLuaGameModePackage_RemoveBlackOut_Params params {};
        params.InTeamId = InTeamId;
        params.FadeOut = FadeOut;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.PrepLatecomer
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::PrepLatecomer(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.PrepLatecomer");
        
        UGBLuaGameModePackage_PrepLatecomer_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.NotifyObjectiveStatusUpdate
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMissionObjectiveActor                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InStatusUpdateType                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InFloatParam                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::NotifyObjectiveStatusUpdate(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InMissionObjectiveActor, const LuaMachine::FLuaValue& InStatusUpdateType, const LuaMachine::FLuaValue& InFloatParam)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.NotifyObjectiveStatusUpdate");
        
        UGBLuaGameModePackage_NotifyObjectiveStatusUpdate_Params params {};
        params.InTeamId = InTeamId;
        params.InMissionObjectiveActor = InMissionObjectiveActor;
        params.InStatusUpdateType = InStatusUpdateType;
        params.InFloatParam = InFloatParam;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.NotifyMissionSettingValueChanged
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSettingName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::NotifyMissionSettingValueChanged(const LuaMachine::FLuaValue& InSettingName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.NotifyMissionSettingValueChanged");
        
        UGBLuaGameModePackage_NotifyMissionSettingValueChanged_Params params {};
        params.InSettingName = InSettingName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.MakeEveryoneSpectate
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::MakeEveryoneSpectate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.MakeEveryoneSpectate");
        
        UGBLuaGameModePackage_MakeEveryoneSpectate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.IsSequencePlaying
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::IsSequencePlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.IsSequencePlaying");
        
        UGBLuaGameModePackage_IsSequencePlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.IsEditingMission
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::IsEditingMission()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.IsEditingMission");
        
        UGBLuaGameModePackage_IsEditingMission_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetVolunteerListByStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InReadyStatus                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetVolunteerListByStatus(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InReadyStatus, const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetVolunteerListByStatus");
        
        UGBLuaGameModePackage_GetVolunteerListByStatus_Params params {};
        params.InTeamId = InTeamId;
        params.InReadyStatus = InReadyStatus;
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetVolunteerListByLives
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMinLives                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetVolunteerListByLives(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InMinLives, const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetVolunteerListByLives");
        
        UGBLuaGameModePackage_GetVolunteerListByLives_Params params {};
        params.InTeamId = InTeamId;
        params.InMinLives = InMinLives;
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetVolunteerList
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetVolunteerList(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetVolunteerList");
        
        UGBLuaGameModePackage_GetVolunteerList_Params params {};
        params.InTeamId = InTeamId;
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetTimeOfDay
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetTimeOfDay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetTimeOfDay");
        
        UGBLuaGameModePackage_GetTimeOfDay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetSpawnProtectionVolumeHasNoImmunity
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSpawnProtectionVolume                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetSpawnProtectionVolumeHasNoImmunity(const LuaMachine::FLuaValue& InSpawnProtectionVolume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetSpawnProtectionVolumeHasNoImmunity");
        
        UGBLuaGameModePackage_GetSpawnProtectionVolumeHasNoImmunity_Params params {};
        params.InSpawnProtectionVolume = InSpawnProtectionVolume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetSearchablePropYieldsIntel
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSearchableProp                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetSearchablePropYieldsIntel(const LuaMachine::FLuaValue& InSearchableProp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetSearchablePropYieldsIntel");
        
        UGBLuaGameModePackage_GetSearchablePropYieldsIntel_Params params {};
        params.InSearchableProp = InSearchableProp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetSearchablePropType
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSearchableProp                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetSearchablePropType(const LuaMachine::FLuaValue& InSearchableProp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetSearchablePropType");
        
        UGBLuaGameModePackage_GetSearchablePropType_Params params {};
        params.InSearchableProp = InSearchableProp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetScript
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetScript()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetScript");
        
        UGBLuaGameModePackage_GetScript_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetRoundStageTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetRoundStageTime");
        
        UGBLuaGameModePackage_GetRoundStageTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetRoundStage
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetRoundStage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetRoundStage");
        
        UGBLuaGameModePackage_GetRoundStage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetReadyPlayerTeamCounts
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetReadyPlayerTeamCounts(const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetReadyPlayerTeamCounts");
        
        UGBLuaGameModePackage_GetReadyPlayerTeamCounts_Params params {};
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerListByStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InReadyStatus                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetPlayerListByStatus(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InReadyStatus, const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerListByStatus");
        
        UGBLuaGameModePackage_GetPlayerListByStatus_Params params {};
        params.InTeamId = InTeamId;
        params.InReadyStatus = InReadyStatus;
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerListByLives
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMinLives                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetPlayerListByLives(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InMinLives, const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerListByLives");
        
        UGBLuaGameModePackage_GetPlayerListByLives_Params params {};
        params.InTeamId = InTeamId;
        params.InMinLives = InMinLives;
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerList
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetPlayerList(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerList");
        
        UGBLuaGameModePackage_GetPlayerList_Params params {};
        params.InTeamId = InTeamId;
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerCount
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InExcludeBots                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetPlayerCount(const LuaMachine::FLuaValue& InExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetPlayerCount");
        
        UGBLuaGameModePackage_GetPlayerCount_Params params {};
        params.InExcludeBots = InExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveStatusAsName
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMissionObjectiveStatus            ObjectiveStatus                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBLuaGameModePackage::GetObjectiveStatusAsName(GroundBranch::EGBMissionObjectiveStatus ObjectiveStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveStatusAsName");
        
        UGBLuaGameModePackage_GetObjectiveStatusAsName_Params params {};
        params.ObjectiveStatus = ObjectiveStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveStatus
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InMissionObjectiveActor                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetObjectiveStatus(const LuaMachine::FLuaValue& InMissionObjectiveActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveStatus");
        
        UGBLuaGameModePackage_GetObjectiveStatus_Params params {};
        params.InMissionObjectiveActor = InMissionObjectiveActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveScript
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InMissionObjectiveActor                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetObjectiveScript(const LuaMachine::FLuaValue& InMissionObjectiveActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveScript");
        
        UGBLuaGameModePackage_GetObjectiveScript_Params params {};
        params.InMissionObjectiveActor = InMissionObjectiveActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveInfo
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InMissionObjectiveActor                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetObjectiveInfo(const LuaMachine::FLuaValue& InMissionObjectiveActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetObjectiveInfo");
        
        UGBLuaGameModePackage_GetObjectiveInfo_Params params {};
        params.InMissionObjectiveActor = InMissionObjectiveActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetMissionCompletionFraction
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetMissionCompletionFraction()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetMissionCompletionFraction");
        
        UGBLuaGameModePackage_GetMissionCompletionFraction_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetMainSequenceActors
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetMainSequenceActors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetMainSequenceActors");
        
        UGBLuaGameModePackage_GetMainSequenceActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetInsertionPointName
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InInsertionPoint                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetInsertionPointName(const LuaMachine::FLuaValue& InInsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetInsertionPointName");
        
        UGBLuaGameModePackage_GetInsertionPointName_Params params {};
        params.InInsertionPoint = InInsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetInfilSequenceActors
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InInsertionPoint                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetInfilSequenceActors(const LuaMachine::FLuaValue& InInsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetInfilSequenceActors");
        
        UGBLuaGameModePackage_GetInfilSequenceActors_Params params {};
        params.InInsertionPoint = InInsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetGameStatValue
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InGameStatKey                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetGameStatValue(const LuaMachine::FLuaValue& InGameStatKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetGameStatValue");
        
        UGBLuaGameModePackage_GetGameStatValue_Params params {};
        params.InGameStatKey = InGameStatKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetExfilSequenceActors
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InExtractionPoint                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetExfilSequenceActors(const LuaMachine::FLuaValue& InExtractionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetExfilSequenceActors");
        
        UGBLuaGameModePackage_GetExfilSequenceActors_Params params {};
        params.InExtractionPoint = InExtractionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetCurrentPlayingSequenceInfo
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetCurrentPlayingSequenceInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetCurrentPlayingSequenceInfo");
        
        UGBLuaGameModePackage_GetCurrentPlayingSequenceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetCurrentMissionTags
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetCurrentMissionTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetCurrentMissionTags");
        
        UGBLuaGameModePackage_GetCurrentMissionTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.GetBestLateComerInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::GetBestLateComerInsertionPoint(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.GetBestLateComerInsertionPoint");
        
        UGBLuaGameModePackage_GetBestLateComerInsertionPoint_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.FreezeBots
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::FreezeBots(const LuaMachine::FLuaValue& InTeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.FreezeBots");
        
        UGBLuaGameModePackage_FreezeBots_Params params {};
        params.InTeamId = InTeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.FormatString
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InFormatTable                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::FormatString(const LuaMachine::FLuaValue& InFormatTable)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.FormatString");
        
        UGBLuaGameModePackage_FormatString_Params params {};
        params.InFormatTable = InFormatTable;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.EnterReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::EnterReadyRoom(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.EnterReadyRoom");
        
        UGBLuaGameModePackage_EnterReadyRoom_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.EnterPlayArea
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPlayerIdOrObject                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::EnterPlayArea(const LuaMachine::FLuaValue& InPlayerIdOrObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.EnterPlayArea");
        
        UGBLuaGameModePackage_EnterPlayArea_Params params {};
        params.InPlayerIdOrObject = InPlayerIdOrObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.EnableExtraLogging
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::EnableExtraLogging()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.EnableExtraLogging");
        
        UGBLuaGameModePackage_EnableExtraLogging_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.CreateBlackOut
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              FadeIn                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::CreateBlackOut(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& FadeIn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.CreateBlackOut");
        
        UGBLuaGameModePackage_CreateBlackOut_Params params {};
        params.InTeamId = InTeamId;
        params.FadeIn = FadeIn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ClearVolunteerStatuses
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ClearVolunteerStatuses()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ClearVolunteerStatuses");
        
        UGBLuaGameModePackage_ClearVolunteerStatuses_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ClearSearchLocations
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ClearSearchLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ClearSearchLocations");
        
        UGBLuaGameModePackage_ClearSearchLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ClearRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ClearRoundStageTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ClearRoundStageTime");
        
        UGBLuaGameModePackage_ClearRoundStageTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ClearGameStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ClearGameStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ClearGameStats");
        
        UGBLuaGameModePackage_ClearGameStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.ClearGameObjectives
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::ClearGameObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.ClearGameObjectives");
        
        UGBLuaGameModePackage_ClearGameObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.CancelBenchmark
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::CancelBenchmark()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.CancelBenchmark");
        
        UGBLuaGameModePackage_CancelBenchmark_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.BroadcastGameMessage
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InGameMessageId                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InType                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::BroadcastGameMessage(const LuaMachine::FLuaValue& InGameMessageId, const LuaMachine::FLuaValue& InType, const LuaMachine::FLuaValue& InDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.BroadcastGameMessage");
        
        UGBLuaGameModePackage_BroadcastGameMessage_Params params {};
        params.InGameMessageId = InGameMessageId;
        params.InType = InType;
        params.InDuration = InDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.BalanceTeams
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InAttackingTeamId                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDefendingTeamId                                          (Parm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InIdealTeamSizeDifference                                  (Parm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InAutoBalanceType                                          (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::BalanceTeams(const LuaMachine::FLuaValue& InAttackingTeamId, const LuaMachine::FLuaValue& InDefendingTeamId, const LuaMachine::FLuaValue& InIdealTeamSizeDifference, const LuaMachine::FLuaValue& InAutoBalanceType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.BalanceTeams");
        
        UGBLuaGameModePackage_BalanceTeams_Params params {};
        params.InAttackingTeamId = InAttackingTeamId;
        params.InDefendingTeamId = InDefendingTeamId;
        params.InIdealTeamSizeDifference = InIdealTeamSizeDifference;
        params.InAutoBalanceType = InAutoBalanceType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AwardTeamScore
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InScoreName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InScoreMultiple                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::AwardTeamScore(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InScoreName, const LuaMachine::FLuaValue& InScoreMultiple)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AwardTeamScore");
        
        UGBLuaGameModePackage_AwardTeamScore_Params params {};
        params.InTeamId = InTeamId;
        params.InScoreName = InScoreName;
        params.InScoreMultiple = InScoreMultiple;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AddSearchLocation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InName                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InObjectiveType                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::AddSearchLocation(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InName, const LuaMachine::FLuaValue& InObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AddSearchLocation");
        
        UGBLuaGameModePackage_AddSearchLocation_Params params {};
        params.InTeamId = InTeamId;
        params.InName = InName;
        params.InObjectiveType = InObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AddPlayerTeam
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InPlayerLoadoutName                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::AddPlayerTeam(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InTeamName, const LuaMachine::FLuaValue& InPlayerLoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AddPlayerTeam");
        
        UGBLuaGameModePackage_AddPlayerTeam_Params params {};
        params.InTeamId = InTeamId;
        params.InTeamName = InTeamName;
        params.InPlayerLoadoutName = InPlayerLoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AddObjectiveMarker
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InLocation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMarkerName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InMarkerType                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              Inactive                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameModePackage::AddObjectiveMarker(const LuaMachine::FLuaValue& InLocation, const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InMarkerName, const LuaMachine::FLuaValue& InMarkerType, const LuaMachine::FLuaValue& Inactive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AddObjectiveMarker");
        
        UGBLuaGameModePackage_AddObjectiveMarker_Params params {};
        params.InLocation = InLocation;
        params.InTeamId = InTeamId;
        params.InMarkerName = InMarkerName;
        params.InMarkerType = InMarkerType;
        params.Inactive = Inactive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AddGameStat
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InGameStat                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::AddGameStat(const LuaMachine::FLuaValue& InGameStat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AddGameStat");
        
        UGBLuaGameModePackage_AddGameStat_Params params {};
        params.InGameStat = InGameStat;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AddGameObjective
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InName                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InObjectiveType                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::AddGameObjective(const LuaMachine::FLuaValue& InTeamId, const LuaMachine::FLuaValue& InName, const LuaMachine::FLuaValue& InObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AddGameObjective");
        
        UGBLuaGameModePackage_AddGameObjective_Params params {};
        params.InTeamId = InTeamId;
        params.InName = InName;
        params.InObjectiveType = InObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameModePackage.AddBots
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InCount                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTeamId                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameModePackage::AddBots(const LuaMachine::FLuaValue& InCount, const LuaMachine::FLuaValue& InTeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameModePackage.AddBots");
        
        UGBLuaGameModePackage_AddBots_Params params {};
        params.InCount = InCount;
        params.InTeamId = InTeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.TraceVisible
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InStartLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InEndLocation                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InIgnoreActors                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDebug                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::TraceVisible(const LuaMachine::FLuaValue& InStartLocation, const LuaMachine::FLuaValue& InEndLocation, const LuaMachine::FLuaValue& InIgnoreActors, const LuaMachine::FLuaValue& InDebug)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.TraceVisible");
        
        UGBLuaGameplayStaticsPackage_TraceVisible_Params params {};
        params.InStartLocation = InStartLocation;
        params.InEndLocation = InEndLocation;
        params.InIgnoreActors = InIgnoreActors;
        params.InDebug = InDebug;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.PlaceItemAt
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InItemClass                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InLocation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InRotation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::PlaceItemAt(const LuaMachine::FLuaValue& InItemClass, const LuaMachine::FLuaValue& InLocation, const LuaMachine::FLuaValue& InRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.PlaceItemAt");
        
        UGBLuaGameplayStaticsPackage_PlaceItemAt_Params params {};
        params.InItemClass = InItemClass;
        params.InLocation = InLocation;
        params.InRotation = InRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetValidatedSpawnLocation
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InSpawnLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InCapsuleHalfHeight                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InCapsuleRadius                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::GetValidatedSpawnLocation(const LuaMachine::FLuaValue& InSpawnLocation, const LuaMachine::FLuaValue& InCapsuleHalfHeight, const LuaMachine::FLuaValue& InCapsuleRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetValidatedSpawnLocation");
        
        UGBLuaGameplayStaticsPackage_GetValidatedSpawnLocation_Params params {};
        params.InSpawnLocation = InSpawnLocation;
        params.InCapsuleHalfHeight = InCapsuleHalfHeight;
        params.InCapsuleRadius = InCapsuleRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetPatrolRouteLinkedActors
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InPatrolRouteActor                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::GetPatrolRouteLinkedActors(const LuaMachine::FLuaValue& InPatrolRouteActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetPatrolRouteLinkedActors");
        
        UGBLuaGameplayStaticsPackage_GetPatrolRouteLinkedActors_Params params {};
        params.InPatrolRouteActor = InPatrolRouteActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetNetMode
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::GetNetMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetNetMode");
        
        UGBLuaGameplayStaticsPackage_GetNetMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsWithTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::GetAllActorsWithTag(const LuaMachine::FLuaValue& InTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsWithTag");
        
        UGBLuaGameplayStaticsPackage_GetAllActorsWithTag_Params params {};
        params.InTag = InTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClassWithTag
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActorClass                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::GetAllActorsOfClassWithTag(const LuaMachine::FLuaValue& InActorClass, const LuaMachine::FLuaValue& InTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClassWithTag");
        
        UGBLuaGameplayStaticsPackage_GetAllActorsOfClassWithTag_Params params {};
        params.InActorClass = InActorClass;
        params.InTag = InTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClass
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InActorClass                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBLuaGameplayStaticsPackage::GetAllActorsOfClass(const LuaMachine::FLuaValue& InActorClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClass");
        
        UGBLuaGameplayStaticsPackage_GetAllActorsOfClass_Params params {};
        params.InActorClass = InActorClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.DisplayDebugSphere
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InLocation                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InRadius                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameplayStaticsPackage::DisplayDebugSphere(const LuaMachine::FLuaValue& InLocation, const LuaMachine::FLuaValue& InRadius, const LuaMachine::FLuaValue& InDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.DisplayDebugSphere");
        
        UGBLuaGameplayStaticsPackage_DisplayDebugSphere_Params params {};
        params.InLocation = InLocation;
        params.InRadius = InRadius;
        params.InDuration = InDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.DisplayDebugLine
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              InStartLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InEndLocation                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              InDuration                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBLuaGameplayStaticsPackage::DisplayDebugLine(const LuaMachine::FLuaValue& InStartLocation, const LuaMachine::FLuaValue& InEndLocation, const LuaMachine::FLuaValue& InDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaGameplayStaticsPackage.DisplayDebugLine");
        
        UGBLuaGameplayStaticsPackage_DisplayDebugLine_Params params {};
        params.InStartLocation = InStartLocation;
        params.InEndLocation = InEndLocation;
        params.InDuration = InDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBLuaInterface.GetLuaTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue IGBLuaInterface::GetLuaTable()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBLuaInterface.GetLuaTable");
        
        IGBLuaInterface_GetLuaTable_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.SpectatorViewPrevPlayer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::SpectatorViewPrevPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.SpectatorViewPrevPlayer");
        
        AGBSpectatorPawn_SpectatorViewPrevPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.SpectatorViewNextPlayer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::SpectatorViewNextPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.SpectatorViewNextPlayer");
        
        AGBSpectatorPawn_SpectatorViewNextPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.SpectatorViewActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ActorTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::SpectatorViewActor(Engine::AActor* ActorTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.SpectatorViewActor");
        
        AGBSpectatorPawn_SpectatorViewActor_Params params {};
        params.ActorTarget = ActorTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.SpectatorStopFollowing
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::SpectatorStopFollowing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.SpectatorStopFollowing");
        
        AGBSpectatorPawn_SpectatorStopFollowing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.SpectatorSetCamera
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::SpectatorSetCamera(const BasicTypes::FName& NewCameraStyle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.SpectatorSetCamera");
        
        AGBSpectatorPawn_SpectatorSetCamera_Params params {};
        params.NewCameraStyle = NewCameraStyle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.ServerSpectatorViewActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ActorTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::ServerSpectatorViewActor(Engine::AActor* ActorTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.ServerSpectatorViewActor");
        
        AGBSpectatorPawn_ServerSpectatorViewActor_Params params {};
        params.ActorTarget = ActorTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpectatorPawn.OnViewTargetChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSpectatorPawn::OnViewTargetChanged(GroundBranch::AGBPlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpectatorPawn.OnViewTargetChanged");
        
        AGBSpectatorPawn_OnViewTargetChanged_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSquadState.IsSquadAlive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBSquadState::IsSquadAlive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSquadState.IsSquadAlive");
        
        AGBSquadState_IsSquadAlive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSquadState.GetSquadAliveCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBSquadState::GetSquadAliveCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSquadState.GetSquadAliveCount");
        
        AGBSquadState_GetSquadAliveCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTaggedMontages.GetMatchingMontage
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InTags                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              InRandAlpha                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* UGBTaggedMontages::GetMatchingMontage(const GameplayTags::FGameplayTagContainer& InTags, float InRandAlpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTaggedMontages.GetMatchingMontage");
        
        UGBTaggedMontages_GetMatchingMontage_Params params {};
        params.InTags = InTags;
        params.InRandAlpha = InRandAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTaggedMontages.GetBestMatchingMontage
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                InTags                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              InRandAlpha                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimMontage*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UAnimMontage* UGBTaggedMontages::GetBestMatchingMontage(const GameplayTags::FGameplayTagContainer& InTags, float InRandAlpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTaggedMontages.GetBestMatchingMontage");
        
        UGBTaggedMontages_GetBestMatchingMontage_Params params {};
        params.InTags = InTags;
        params.InRandAlpha = InRandAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.UnsetTimeOfDayAlarms
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBTimeOfDayAlarmComponent::UnsetTimeOfDayAlarms()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.UnsetTimeOfDayAlarms");
        
        UGBTimeOfDayAlarmComponent_UnsetTimeOfDayAlarms_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.TimeOfDayAlarmsDelegate
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  AlarmName                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTimeOfDayAlarmComponent::TimeOfDayAlarmsDelegate(const BasicTypes::FName& AlarmName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.TimeOfDayAlarmsDelegate");
        
        UGBTimeOfDayAlarmComponent_TimeOfDayAlarmsDelegate_Params params {};
        params.AlarmName = AlarmName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.SetTimeOfDayAlarms
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> InTimeOfDayAlarmInfo                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        InDelegate                                                 (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTimeOfDayAlarmComponent::SetTimeOfDayAlarms(BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> InTimeOfDayAlarmInfo, const BasicTypes::UScriptDelegate& InDelegate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.SetTimeOfDayAlarms");
        
        UGBTimeOfDayAlarmComponent_SetTimeOfDayAlarms_Params params {};
        params.InTimeOfDayAlarmInfo = InTimeOfDayAlarmInfo;
        params.InDelegate = InDelegate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.ResetTimeOfDayAlarms
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBTimeOfDayAlarmComponent::ResetTimeOfDayAlarms()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTimeOfDayAlarmComponent.ResetTimeOfDayAlarms");
        
        UGBTimeOfDayAlarmComponent_ResetTimeOfDayAlarms_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.SyncTubeContents
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::SyncTubeContents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.SyncTubeContents");
        
        UGBTubeMagComponent_SyncTubeContents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.StartPlusOne
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBTubeMagComponent::StartPlusOne()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.StartPlusOne");
        
        UGBTubeMagComponent_StartPlusOne_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.SetIsFiringFromOpenBolt
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewIsFiringFromOpenBolt                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::SetIsFiringFromOpenBolt(bool bNewIsFiringFromOpenBolt)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.SetIsFiringFromOpenBolt");
        
        UGBTubeMagComponent_SetIsFiringFromOpenBolt_Params params {};
        params.bNewIsFiringFromOpenBolt = bNewIsFiringFromOpenBolt;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.SetChamberedRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       NewChamberedRound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::SetChamberedRound(GroundBranch::AGBBulletItem* NewChamberedRound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.SetChamberedRound");
        
        UGBTubeMagComponent_SetChamberedRound_Params params {};
        params.NewChamberedRound = NewChamberedRound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.SetBulletId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewBulletId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::SetBulletId(const CoreUObject::FPrimaryAssetId& NewBulletId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.SetBulletId");
        
        UGBTubeMagComponent_SetBulletId_Params params {};
        params.NewBulletId = NewBulletId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.SetBoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewBoltIsHeldOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::SetBoltHeldOpen(bool bNewBoltIsHeldOpen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.SetBoltHeldOpen");
        
        UGBTubeMagComponent_SetBoltHeldOpen_Params params {};
        params.bNewBoltIsHeldOpen = bNewBoltIsHeldOpen;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.RemoveFromTube
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBTubeMagComponent::RemoveFromTube()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.RemoveFromTube");
        
        UGBTubeMagComponent_RemoveFromTube_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.OnRep_TubeContents
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::OnRep_TubeContents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.OnRep_TubeContents");
        
        UGBTubeMagComponent_OnRep_TubeContents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.OnRep_BoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::OnRep_BoltHeldOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.OnRep_BoltHeldOpen");
        
        UGBTubeMagComponent_OnRep_BoltHeldOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.OnBulletIdUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::OnBulletIdUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.OnBulletIdUpdated");
        
        UGBTubeMagComponent_OnBulletIdUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.IsLiveRoundChambered
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBTubeMagComponent::IsLiveRoundChambered()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.IsLiveRoundChambered");
        
        UGBTubeMagComponent_IsLiveRoundChambered_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetTubeContents
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::AGBBulletItem*>   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBBulletItem*> UGBTubeMagComponent::GetTubeContents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetTubeContents");
        
        UGBTubeMagComponent_GetTubeContents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetIsFiringFromOpenBolt
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBTubeMagComponent::GetIsFiringFromOpenBolt()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetIsFiringFromOpenBolt");
        
        UGBTubeMagComponent_GetIsFiringFromOpenBolt_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBTubeMagComponent::GetCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetCount");
        
        UGBTubeMagComponent_GetCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetChamberedRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBTubeMagComponent::GetChamberedRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetChamberedRound");
        
        UGBTubeMagComponent_GetChamberedRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetCapacity
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBTubeMagComponent::GetCapacity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetCapacity");
        
        UGBTubeMagComponent_GetCapacity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetBulletItemClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBTubeMagComponent::GetBulletItemClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetBulletItemClass");
        
        UGBTubeMagComponent_GetBulletItemClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.GetBoltHeldOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBTubeMagComponent::GetBoltHeldOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.GetBoltHeldOpen");
        
        UGBTubeMagComponent_GetBoltHeldOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.FindCompatibleRound
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBBulletItem*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletItem* UGBTubeMagComponent::FindCompatibleRound(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.FindCompatibleRound");
        
        UGBTubeMagComponent_FindCompatibleRound_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.AddToTube
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       NewBulletItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBTubeMagComponent::AddToTube(GroundBranch::AGBBulletItem* NewBulletItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.AddToTube");
        
        UGBTubeMagComponent_AddToTube_Params params {};
        params.NewBulletItem = NewBulletItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBTubeMagComponent.AddRoundToTube
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletItem*                       NewRound                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBTubeMagComponent::AddRoundToTube(GroundBranch::AGBBulletItem* NewRound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBTubeMagComponent.AddRoundToTube");
        
        UGBTubeMagComponent_AddRoundToTube_Params params {};
        params.NewRound = NewRound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBNavBlocker.OnActiveStateChangedEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewActive                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBNavBlocker::OnActiveStateChangedEvent(bool bNewActive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBNavBlocker.OnActiveStateChangedEvent");
        
        AGBNavBlocker_OnActiveStateChangedEvent_Params params {};
        params.bNewActive = bNewActive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBNavLinkProxy.SmartLinkReached
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Agent                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Destination                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBNavLinkProxy::SmartLinkReached(Engine::AActor* Agent, const CoreUObject::FVector& Destination)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBNavLinkProxy.SmartLinkReached");
        
        AGBNavLinkProxy_SmartLinkReached_Params params {};
        params.Agent = Agent;
        params.Destination = Destination;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBNavLinkProxy.OnNavigationGenerationFinished
     *         Flags  -> ()
     * Parameters:
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBNavLinkProxy::OnNavigationGenerationFinished(NavigationSystem::ANavigationData* NavData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBNavLinkProxy.OnNavigationGenerationFinished");
        
        AGBNavLinkProxy_OnNavigationGenerationFinished_Params params {};
        params.NavData = NavData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBNavLinkProxy_Door.SetDoorRef
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    NewDoorRef                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBNavLinkProxy_Door::SetDoorRef(Engine::AActor* NewDoorRef)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBNavLinkProxy_Door.SetDoorRef");
        
        AGBNavLinkProxy_Door_SetDoorRef_Params params {};
        params.NewDoorRef = NewDoorRef;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBNavLinkProxy_Door.GetDoorRef
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AGBNavLinkProxy_Door::GetDoorRef()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBNavLinkProxy_Door.GetDoorRef");
        
        AGBNavLinkProxy_Door_GetDoorRef_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBNavLinkProxy_Ladder.GetLadderRef
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AGBNavLinkProxy_Ladder::GetLadderRef()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBNavLinkProxy_Ladder.GetLadderRef");
        
        AGBNavLinkProxy_Ladder_GetLadderRef_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.UpdateObjectiveSprite
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBObjectiveMarker::UpdateObjectiveSprite()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.UpdateObjectiveSprite");
        
        AGBObjectiveMarker_UpdateObjectiveSprite_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.SetObjectiveName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBObjectiveMarker::SetObjectiveName(const BasicTypes::FName& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.SetObjectiveName");
        
        AGBObjectiveMarker_SetObjectiveName_Params params {};
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.SetObjectiveMarkerType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewObjectiveMarkerType                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBObjectiveMarker::SetObjectiveMarkerType(const BasicTypes::FName& NewObjectiveMarkerType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.SetObjectiveMarkerType");
        
        AGBObjectiveMarker_SetObjectiveMarkerType_Params params {};
        params.NewObjectiveMarkerType = NewObjectiveMarkerType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.SetObjectiveMarkerSize
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector2D                             NewObjectiveMarkerSize                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBObjectiveMarker::SetObjectiveMarkerSize(const CoreUObject::FVector2D& NewObjectiveMarkerSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.SetObjectiveMarkerSize");
        
        AGBObjectiveMarker_SetObjectiveMarkerSize_Params params {};
        params.NewObjectiveMarkerSize = NewObjectiveMarkerSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.ObjectiveUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBObjectiveMarker::ObjectiveUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.ObjectiveUpdated");
        
        AGBObjectiveMarker_ObjectiveUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveSprite
     *         Flags  -> ()
     * Parameters:
     *         Engine::UTexture2D*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture2D* AGBObjectiveMarker::GetObjectiveSprite()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveSprite");
        
        AGBObjectiveMarker_GetObjectiveSprite_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBObjectiveMarker::GetObjectiveName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveName");
        
        AGBObjectiveMarker_GetObjectiveName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveMarkerType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBObjectiveMarker::GetObjectiveMarkerType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveMarkerType");
        
        AGBObjectiveMarker_GetObjectiveMarkerType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveMarkerSize
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D AGBObjectiveMarker::GetObjectiveMarkerSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBObjectiveMarker.GetObjectiveMarkerSize");
        
        AGBObjectiveMarker_GetObjectiveMarkerSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBOperatorDataAsset.MakeUniqueId
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                FirstName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Surname                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBOperatorDataAsset::MakeUniqueId(const BasicTypes::FString& FirstName, const BasicTypes::FString& Surname)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBOperatorDataAsset.MakeUniqueId");
        
        UGBOperatorDataAsset_MakeUniqueId_Params params {};
        params.FirstName = FirstName;
        params.Surname = Surname;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBOperatorDataAsset.GetUniqueCodename
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBOperatorDataAsset::GetUniqueCodename()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBOperatorDataAsset.GetUniqueCodename");
        
        UGBOperatorDataAsset_GetUniqueCodename_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBOperatorDataAsset.GetOperatorDetails
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBOperatorDetails                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBOperatorDetails UGBOperatorDataAsset::GetOperatorDetails()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBOperatorDataAsset.GetOperatorDetails");
        
        UGBOperatorDataAsset_GetOperatorDetails_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPatch.OnRep_PatchInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPatch::OnRep_PatchInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPatch.OnRep_PatchInfo");
        
        AGBPatch_OnRep_PatchInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPatch.OnPlayerStateDelegate
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBPatch::OnPlayerStateDelegate(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPatch.OnPlayerStateDelegate");
        
        AGBPatch_OnPlayerStateDelegate_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPatch.OnLoadPatchTintsComplete
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPatch::OnLoadPatchTintsComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPatch.OnLoadPatchTintsComplete");
        
        AGBPatch_OnLoadPatchTintsComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPatch.ApplyPatch
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBPatch::ApplyPatch()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPatch.ApplyPatch");
        
        AGBPatch_ApplyPatch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBPatchGeneratorWidget.SetCallSignEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewCallSign                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBPatchGeneratorWidget::SetCallSignEvent(const BasicTypes::FString& NewCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBPatchGeneratorWidget.SetCallSignEvent");
        
        UGBPatchGeneratorWidget_SetCallSignEvent_Params params {};
        params.NewCallSign = NewCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.UpdatePlayerInteractionStatus
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      PreviousValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::UpdatePlayerInteractionStatus(GroundBranch::AGBPlayerState* PreviousValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.UpdatePlayerInteractionStatus");
        
        AGBRestraint_UpdatePlayerInteractionStatus_Params params {};
        params.PreviousValue = PreviousValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.UnsetLeadingRelationship
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      LeadingPlayerState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      LedPlayerState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::UnsetLeadingRelationship(GroundBranch::AGBPlayerState* LeadingPlayerState, GroundBranch::AGBPlayerState* LedPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.UnsetLeadingRelationship");
        
        AGBRestraint_UnsetLeadingRelationship_Params params {};
        params.LeadingPlayerState = LeadingPlayerState;
        params.LedPlayerState = LedPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.SetLeadingRelationship
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      LeadingPlayerState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      LedPlayerState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::SetLeadingRelationship(GroundBranch::AGBPlayerState* LeadingPlayerState, GroundBranch::AGBPlayerState* LedPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.SetLeadingRelationship");
        
        AGBRestraint_SetLeadingRelationship_Params params {};
        params.LeadingPlayerState = LeadingPlayerState;
        params.LedPlayerState = LedPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.RemoveAllHostageEquipment
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBRestraint::RemoveAllHostageEquipment()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.RemoveAllHostageEquipment");
        
        AGBRestraint_RemoveAllHostageEquipment_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.OnStatusUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBRestraint::OnStatusUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.OnStatusUpdated");
        
        AGBRestraint_OnStatusUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.OnRep_HasIntimidators
     *         Flags  -> ()
     * Parameters:
     *         bool                                               PreviousValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::OnRep_HasIntimidators(bool PreviousValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.OnRep_HasIntimidators");
        
        AGBRestraint_OnRep_HasIntimidators_Params params {};
        params.PreviousValue = PreviousValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.OnPlayerInteractionChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::OnPlayerInteractionChanged(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.OnPlayerInteractionChanged");
        
        AGBRestraint_OnPlayerInteractionChanged_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.OnEndCursorOver
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       TouchedComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::OnEndCursorOver(Engine::UPrimitiveComponent* TouchedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.OnEndCursorOver");
        
        AGBRestraint_OnEndCursorOver_Params params {};
        params.TouchedComponent = TouchedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.OnBeginCursorOver
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       TouchedComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBRestraint::OnBeginCursorOver(Engine::UPrimitiveComponent* TouchedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.OnBeginCursorOver");
        
        AGBRestraint_OnBeginCursorOver_Params params {};
        params.TouchedComponent = TouchedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.HasLineOfSightToHostage
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               TraceFrom                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    IgnoreActor                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBRestraint::HasLineOfSightToHostage(const CoreUObject::FVector& TraceFrom, Engine::AActor* IgnoreActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.HasLineOfSightToHostage");
        
        AGBRestraint_HasLineOfSightToHostage_Params params {};
        params.TraceFrom = TraceFrom;
        params.IgnoreActor = IgnoreActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.GetUsingGBPlayerState
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerState* AGBRestraint::GetUsingGBPlayerState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.GetUsingGBPlayerState");
        
        AGBRestraint_GetUsingGBPlayerState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.ClearLeadHostageInteractionWidget
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBRestraint::ClearLeadHostageInteractionWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.ClearLeadHostageInteractionWidget");
        
        AGBRestraint_ClearLeadHostageInteractionWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestraint.BreakOffLeadingHostage
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBRestraint::BreakOffLeadingHostage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestraint.BreakOffLeadingHostage");
        
        AGBRestraint_BreakOffLeadingHostage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.WriteWidgetToTexture
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  WidgetToWrite                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SizeX                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SizeY                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* UGBUIFunctionLibrary::WriteWidgetToTexture(UMG::UUserWidget* WidgetToWrite, int32_t SizeX, int32_t SizeY)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.WriteWidgetToTexture");
        
        UGBUIFunctionLibrary_WriteWidgetToTexture_Params params {};
        params.WidgetToWrite = WidgetToWrite;
        params.SizeX = SizeX;
        params.SizeY = SizeY;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.UnbindKeybindCommand
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  CommandName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         InputCore::FKey                                    Key                                                        (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::UnbindKeybindCommand(const BasicTypes::FName& CommandName, const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.UnbindKeybindCommand");
        
        UGBUIFunctionLibrary_UnbindKeybindCommand_Params params {};
        params.CommandName = CommandName;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.UnbindKey
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FInputBoundKey                       TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::UnbindKey(const GroundBranch::FInputBoundKey& TargetKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.UnbindKey");
        
        UGBUIFunctionLibrary_UnbindKey_Params params {};
        params.TargetKey = TargetKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.UnBindCommand
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  CommandName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::UnBindCommand(const BasicTypes::FName& CommandName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.UnBindCommand");
        
        UGBUIFunctionLibrary_UnBindCommand_Params params {};
        params.CommandName = CommandName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.SetMousePosition
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector2D                             MousePosition                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::SetMousePosition(const CoreUObject::FVector2D& MousePosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.SetMousePosition");
        
        UGBUIFunctionLibrary_SetMousePosition_Params params {};
        params.MousePosition = MousePosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.SetConsoleKeys
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<InputCore::FKey>                NewConsoleKeys                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::SetConsoleKeys(BasicTypes::TArray<InputCore::FKey> NewConsoleKeys)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.SetConsoleKeys");
        
        UGBUIFunctionLibrary_SetConsoleKeys_Params params {};
        params.NewConsoleKeys = NewConsoleKeys;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.SaveBinds
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::SaveBinds()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.SaveBinds");
        
        UGBUIFunctionLibrary_SaveBinds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.RemoveAllWidgetsOfClass
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               TopLevelOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::RemoveAllWidgetsOfClass(CoreUObject::UObject* WorldContextObject, UMG::UUserWidget* WidgetClass, bool TopLevelOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.RemoveAllWidgetsOfClass");
        
        UGBUIFunctionLibrary_RemoveAllWidgetsOfClass_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.WidgetClass = WidgetClass;
        params.TopLevelOnly = TopLevelOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.IsChildOf
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ChildWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      PossibleParent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::IsChildOf(UMG::UWidget* ChildWidget, UMG::UWidget* PossibleParent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.IsChildOf");
        
        UGBUIFunctionLibrary_IsChildOf_Params params {};
        params.ChildWidget = ChildWidget;
        params.PossibleParent = PossibleParent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.InsertChildAt
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      Parent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UPanelSlot*                                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UPanelSlot* UGBUIFunctionLibrary::InsertChildAt(UMG::UWidget* Parent, int32_t Index, UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.InsertChildAt");
        
        UGBUIFunctionLibrary_InsertChildAt_Params params {};
        params.Parent = Parent;
        params.Index = Index;
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.InitStringTableForModID
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StringTableId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StringNameSpace                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::InitStringTableForModID(const BasicTypes::FName& StringTableId, const BasicTypes::FString& StringNameSpace, const ModKit::FUInt64& ModID, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.InitStringTableForModID");
        
        UGBUIFunctionLibrary_InitStringTableForModID_Params params {};
        params.StringTableId = StringTableId;
        params.StringNameSpace = StringNameSpace;
        params.ModID = ModID;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.InitStringTable
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StringTableId                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StringNameSpace                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::InitStringTable(const BasicTypes::FName& StringTableId, const BasicTypes::FString& StringNameSpace)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.InitStringTable");
        
        UGBUIFunctionLibrary_InitStringTable_Params params {};
        params.StringTableId = StringTableId;
        params.StringNameSpace = StringNameSpace;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetWidgetFromName
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ParentUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Name                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UGBUIFunctionLibrary::GetWidgetFromName(UMG::UUserWidget* ParentUserWidget, const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetWidgetFromName");
        
        UGBUIFunctionLibrary_GetWidgetFromName_Params params {};
        params.ParentUserWidget = ParentUserWidget;
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetStringTableEntryOrDisplayString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StringTableId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InKey                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                KeyPrefix                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UGBUIFunctionLibrary::GetStringTableEntryOrDisplayString(const BasicTypes::FName& StringTableId, const BasicTypes::FString& InKey, const BasicTypes::FString& KeyPrefix, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetStringTableEntryOrDisplayString");
        
        UGBUIFunctionLibrary_GetStringTableEntryOrDisplayString_Params params {};
        params.StringTableId = StringTableId;
        params.InKey = InKey;
        params.KeyPrefix = KeyPrefix;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetParentWidgetOfClass
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ChildWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UGBUIFunctionLibrary::GetParentWidgetOfClass(UMG::UWidget* ChildWidget, UMG::UWidget* WidgetClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetParentWidgetOfClass");
        
        UGBUIFunctionLibrary_GetParentWidgetOfClass_Params params {};
        params.ChildWidget = ChildWidget;
        params.WidgetClass = WidgetClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetParentOfClass
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ChildWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UGBUIFunctionLibrary::GetParentOfClass(UMG::UWidget* ChildWidget, UMG::UUserWidget* WidgetClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetParentOfClass");
        
        UGBUIFunctionLibrary_GetParentOfClass_Params params {};
        params.ChildWidget = ChildWidget;
        params.WidgetClass = WidgetClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetMonitorNativeResolutions
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector2D>         OutMonitorResolutions                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::GetMonitorNativeResolutions(BasicTypes::TArray<CoreUObject::FVector2D>* OutMonitorResolutions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetMonitorNativeResolutions");
        
        UGBUIFunctionLibrary_GetMonitorNativeResolutions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMonitorResolutions != nullptr)
            *OutMonitorResolutions = params.OutMonitorResolutions;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetMapScreenshots
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Prefix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::UTexture2D>> OutScreenShotPtrs                                          (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::GetMapScreenshots(const BasicTypes::FString& Prefix, const BasicTypes::FString& MapName, BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::UTexture2D>>* OutScreenShotPtrs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetMapScreenshots");
        
        UGBUIFunctionLibrary_GetMapScreenshots_Params params {};
        params.Prefix = Prefix;
        params.MapName = MapName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutScreenShotPtrs != nullptr)
            *OutScreenShotPtrs = params.OutScreenShotPtrs;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetMapList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                GameModePrefix                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::FMapListItem>     OutMapList                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::GetMapList(const BasicTypes::FString& GameModePrefix, BasicTypes::TArray<GroundBranch::FMapListItem>* OutMapList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetMapList");
        
        UGBUIFunctionLibrary_GetMapList_Params params {};
        params.GameModePrefix = GameModePrefix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMapList != nullptr)
            *OutMapList = params.OutMapList;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetMapInfo
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutTitle                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutAuthor                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  OutDescription                                             (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::GetMapInfo(const BasicTypes::FString& MapName, BasicTypes::FString* OutTitle, BasicTypes::FString* OutAuthor, BasicTypes::FText* OutDescription)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetMapInfo");
        
        UGBUIFunctionLibrary_GetMapInfo_Params params {};
        params.MapName = MapName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTitle != nullptr)
            *OutTitle = params.OutTitle;
        if (OutAuthor != nullptr)
            *OutAuthor = params.OutAuthor;
        if (OutDescription != nullptr)
            *OutDescription = params.OutDescription;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetLocalisedGameplayTagText
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBLocalisedGameplayTagFormat        GameplayTagFormat                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStripSpaces                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UGBUIFunctionLibrary::GetLocalisedGameplayTagText(const GameplayTags::FGameplayTag& GameplayTag, GroundBranch::EGBLocalisedGameplayTagFormat GameplayTagFormat, bool bStripSpaces)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetLocalisedGameplayTagText");
        
        UGBUIFunctionLibrary_GetLocalisedGameplayTagText_Params params {};
        params.GameplayTag = GameplayTag;
        params.GameplayTagFormat = GameplayTagFormat;
        params.bStripSpaces = bStripSpaces;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetLayoutVariantBlueprints
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                SearchPathName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>> OutActorPtrs                                               (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::GetLayoutVariantBlueprints(const BasicTypes::FString& SearchPathName, BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::AActor>>* OutActorPtrs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetLayoutVariantBlueprints");
        
        UGBUIFunctionLibrary_GetLayoutVariantBlueprints_Params params {};
        params.SearchPathName = SearchPathName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActorPtrs != nullptr)
            *OutActorPtrs = params.OutActorPtrs;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetFirstWidgetOfClass
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               TopLevelOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UGBUIFunctionLibrary::GetFirstWidgetOfClass(CoreUObject::UObject* WorldContextObject, UMG::UUserWidget* WidgetClass, bool TopLevelOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetFirstWidgetOfClass");
        
        UGBUIFunctionLibrary_GetFirstWidgetOfClass_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.WidgetClass = WidgetClass;
        params.TopLevelOnly = TopLevelOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetFirstChildWidgetOfClass
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ParentWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bImmediateOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UGBUIFunctionLibrary::GetFirstChildWidgetOfClass(UMG::UWidget* ParentWidget, UMG::UWidget* WidgetClass, bool bImmediateOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetFirstChildWidgetOfClass");
        
        UGBUIFunctionLibrary_GetFirstChildWidgetOfClass_Params params {};
        params.ParentWidget = ParentWidget;
        params.WidgetClass = WidgetClass;
        params.bImmediateOnly = bImmediateOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetFirstChildOfClass
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ParentWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bImmediateOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UGBUIFunctionLibrary::GetFirstChildOfClass(UMG::UWidget* ParentWidget, UMG::UUserWidget* WidgetClass, bool bImmediateOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetFirstChildOfClass");
        
        UGBUIFunctionLibrary_GetFirstChildOfClass_Params params {};
        params.ParentWidget = ParentWidget;
        params.WidgetClass = WidgetClass;
        params.bImmediateOnly = bImmediateOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetDoubleClickTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBUIFunctionLibrary::GetDoubleClickTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetDoubleClickTime");
        
        UGBUIFunctionLibrary_GetDoubleClickTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetConsoleKeys
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<InputCore::FKey>                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<InputCore::FKey> UGBUIFunctionLibrary::GetConsoleKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetConsoleKeys");
        
        UGBUIFunctionLibrary_GetConsoleKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetCommandBoundKeys
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Command                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::FInputBoundKey>   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FInputBoundKey> UGBUIFunctionLibrary::GetCommandBoundKeys(const BasicTypes::FName& Command)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetCommandBoundKeys");
        
        UGBUIFunctionLibrary_GetCommandBoundKeys_Params params {};
        params.Command = Command;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetCommandBoundKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Command                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FInputBoundKey                       ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FInputBoundKey UGBUIFunctionLibrary::GetCommandBoundKey(const BasicTypes::FName& Command)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetCommandBoundKey");
        
        UGBUIFunctionLibrary_GetCommandBoundKey_Params params {};
        params.Command = Command;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetChildWidgetsOfClass
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ParentWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<UMG::UWidget*>                  ChildWidgets                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bImmediateOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::GetChildWidgetsOfClass(UMG::UWidget* ParentWidget, BasicTypes::TArray<UMG::UWidget*>* ChildWidgets, UMG::UWidget* WidgetClass, bool bImmediateOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetChildWidgetsOfClass");
        
        UGBUIFunctionLibrary_GetChildWidgetsOfClass_Params params {};
        params.ParentWidget = ParentWidget;
        params.WidgetClass = WidgetClass;
        params.bImmediateOnly = bImmediateOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ChildWidgets != nullptr)
            *ChildWidgets = params.ChildWidgets;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetChildrenOfClass
     *         Flags  -> ()
     * Parameters:
     *         UMG::UWidget*                                      ParentWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<UMG::UUserWidget*>              ChildWidgets                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bImmediateOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::GetChildrenOfClass(UMG::UWidget* ParentWidget, BasicTypes::TArray<UMG::UUserWidget*>* ChildWidgets, UMG::UUserWidget* WidgetClass, bool bImmediateOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetChildrenOfClass");
        
        UGBUIFunctionLibrary_GetChildrenOfClass_Params params {};
        params.ParentWidget = ParentWidget;
        params.WidgetClass = WidgetClass;
        params.bImmediateOnly = bImmediateOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ChildWidgets != nullptr)
            *ChildWidgets = params.ChildWidgets;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.GetBoundKeyFromKeyEvent
     *         Flags  -> ()
     * Parameters:
     *         SlateCore::FKeyEvent                               KeyEvent                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::FInputBoundKey                       ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FInputBoundKey UGBUIFunctionLibrary::GetBoundKeyFromKeyEvent(const SlateCore::FKeyEvent& KeyEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.GetBoundKeyFromKeyEvent");
        
        UGBUIFunctionLibrary_GetBoundKeyFromKeyEvent_Params params {};
        params.KeyEvent = KeyEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.ForcePlayerInputUpdate
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::ForcePlayerInputUpdate(Engine::APlayerController* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.ForcePlayerInputUpdate");
        
        UGBUIFunctionLibrary_ForcePlayerInputUpdate_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocationAlt
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FTransform                            ViewTM                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              FOV                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EdgePercent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutScreenPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutRotationAngleDegrees                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsOnScreen                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::FindScreenEdgeLocationForWorldLocationAlt(const CoreUObject::FTransform& ViewTM, float FOV, const CoreUObject::FVector2D& ScreenSize, const CoreUObject::FVector& WorldLocation, float EdgePercent, CoreUObject::FVector2D* OutScreenPosition, float* OutRotationAngleDegrees, bool* bIsOnScreen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocationAlt");
        
        UGBUIFunctionLibrary_FindScreenEdgeLocationForWorldLocationAlt_Params params {};
        params.ViewTM = ViewTM;
        params.FOV = FOV;
        params.ScreenSize = ScreenSize;
        params.WorldLocation = WorldLocation;
        params.EdgePercent = EdgePercent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutScreenPosition != nullptr)
            *OutScreenPosition = params.OutScreenPosition;
        if (OutRotationAngleDegrees != nullptr)
            *OutRotationAngleDegrees = params.OutRotationAngleDegrees;
        if (bIsOnScreen != nullptr)
            *bIsOnScreen = params.bIsOnScreen;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EdgePercent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutScreenPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutRotationAngleDegrees                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsOnScreen                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::FindScreenEdgeLocationForWorldLocation(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& InLocation, float EdgePercent, CoreUObject::FVector2D* OutScreenPosition, float* OutRotationAngleDegrees, bool* bIsOnScreen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocation");
        
        UGBUIFunctionLibrary_FindScreenEdgeLocationForWorldLocation_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InLocation = InLocation;
        params.EdgePercent = EdgePercent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutScreenPosition != nullptr)
            *OutScreenPosition = params.OutScreenPosition;
        if (OutRotationAngleDegrees != nullptr)
            *OutRotationAngleDegrees = params.OutRotationAngleDegrees;
        if (bIsOnScreen != nullptr)
            *bIsOnScreen = params.bIsOnScreen;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.DoesStringTableEntryExist
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  StringTableId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InKey                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                KeyPrefix                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::DoesStringTableEntryExist(const BasicTypes::FName& StringTableId, const BasicTypes::FString& InKey, const BasicTypes::FString& KeyPrefix, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.DoesStringTableEntryExist");
        
        UGBUIFunctionLibrary_DoesStringTableEntryExist_Params params {};
        params.StringTableId = StringTableId;
        params.InKey = InKey;
        params.KeyPrefix = KeyPrefix;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.DisplayDialogWidget
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DialogName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBDialogWidget*                     DialogWidgetClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  Message                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBMessageDialogType                 DialogType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SelfDestructTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::UGBDialogWidget*                     ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBDialogWidget* UGBUIFunctionLibrary::DisplayDialogWidget(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& DialogName, GroundBranch::UGBDialogWidget* DialogWidgetClass, const BasicTypes::FText& Title, const BasicTypes::FText& Message, GroundBranch::EGBMessageDialogType DialogType, float SelfDestructTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.DisplayDialogWidget");
        
        UGBUIFunctionLibrary_DisplayDialogWidget_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.DialogName = DialogName;
        params.DialogWidgetClass = DialogWidgetClass;
        params.Title = Title;
        params.Message = Message;
        params.DialogType = DialogType;
        params.SelfDestructTime = SelfDestructTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.CheckForThreeLetterProfanity
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ThreeLetterCode                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBUIFunctionLibrary::CheckForThreeLetterProfanity(const BasicTypes::FString& ThreeLetterCode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.CheckForThreeLetterProfanity");
        
        UGBUIFunctionLibrary_CheckForThreeLetterProfanity_Params params {};
        params.ThreeLetterCode = ThreeLetterCode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.BreakGeometry
     *         Flags  -> ()
     * Parameters:
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutAbsolutePosition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             OutSize                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutScale                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::BreakGeometry(const SlateCore::FGeometry& Geometry, CoreUObject::FVector2D* OutPosition, CoreUObject::FVector2D* OutAbsolutePosition, CoreUObject::FVector2D* OutSize, float* OutScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.BreakGeometry");
        
        UGBUIFunctionLibrary_BreakGeometry_Params params {};
        params.Geometry = Geometry;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPosition != nullptr)
            *OutPosition = params.OutPosition;
        if (OutAbsolutePosition != nullptr)
            *OutAbsolutePosition = params.OutAbsolutePosition;
        if (OutSize != nullptr)
            *OutSize = params.OutSize;
        if (OutScale != nullptr)
            *OutScale = params.OutScale;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.BindExecToKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ExecCommand                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FInputBoundKey                       TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::BindExecToKey(const BasicTypes::FString& ExecCommand, const GroundBranch::FInputBoundKey& TargetKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.BindExecToKey");
        
        UGBUIFunctionLibrary_BindExecToKey_Params params {};
        params.ExecCommand = ExecCommand;
        params.TargetKey = TargetKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.BindAxisToKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  AxisName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FInputBoundKey                       TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::BindAxisToKey(const BasicTypes::FName& AxisName, const GroundBranch::FInputBoundKey& TargetKey, float Scale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.BindAxisToKey");
        
        UGBUIFunctionLibrary_BindAxisToKey_Params params {};
        params.AxisName = AxisName;
        params.TargetKey = TargetKey;
        params.Scale = Scale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUIFunctionLibrary.BindActionToKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FInputBoundKey                       TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBUIFunctionLibrary::BindActionToKey(const BasicTypes::FName& ActionName, const GroundBranch::FInputBoundKey& TargetKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUIFunctionLibrary.BindActionToKey");
        
        UGBUIFunctionLibrary_BindActionToKey_Params params {};
        params.ActionName = ActionName;
        params.TargetKey = TargetKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.ServerUseWithParams
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::ServerUseWithParams(Engine::AController* Controller, const BasicTypes::FName& UseType, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.ServerUseWithParams");
        
        IGBUseInterface_ServerUseWithParams_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.ServerUse
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::ServerUse(Engine::AController* Controller, const BasicTypes::FName& UseType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.ServerUse");
        
        IGBUseInterface_ServerUse_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.RemoveUser
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::RemoveUser(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.RemoveUser");
        
        IGBUseInterface_RemoveUser_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.IsTeamSpecific
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IGBUseInterface::IsTeamSpecific()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.IsTeamSpecific");
        
        IGBUseInterface_IsTeamSpecific_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.GetNumUsers
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t IGBUseInterface::GetNumUsers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.GetNumUsers");
        
        IGBUseInterface_GetNumUsers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.ClientUseWithParams
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::ClientUseWithParams(Engine::AController* Controller, const BasicTypes::FName& UseType, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.ClientUseWithParams");
        
        IGBUseInterface_ClientUseWithParams_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.ClientUse
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::ClientUse(Engine::AController* Controller, const BasicTypes::FName& UseType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.ClientUse");
        
        IGBUseInterface_ClientUse_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.AIUseWithParams
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::AIUseWithParams(Engine::AController* Controller, const BasicTypes::FName& UseType, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.AIUseWithParams");
        
        IGBUseInterface_AIUseWithParams_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.AIUse
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::AIUse(Engine::AController* Controller, const BasicTypes::FName& UseType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.AIUse");
        
        IGBUseInterface_AIUse_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.AIQuestionWithParams
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName IGBUseInterface::AIQuestionWithParams(Engine::AController* Controller, const BasicTypes::FName& UseType, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.AIQuestionWithParams");
        
        IGBUseInterface_AIQuestionWithParams_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.AIQuestion
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName IGBUseInterface::AIQuestion(Engine::AController* Controller, const BasicTypes::FName& UseType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.AIQuestion");
        
        IGBUseInterface_AIQuestion_Params params {};
        params.Controller = Controller;
        params.UseType = UseType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBUseInterface.AddUser
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBUseInterface::AddUser(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBUseInterface.AddUser");
        
        IGBUseInterface_AddUser_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.UnloadMutatorsForMod
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameInstance::UnloadMutatorsForMod(const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.UnloadMutatorsForMod");
        
        UGBGameInstance_UnloadMutatorsForMod_Params params {};
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.UnloadAllMutators
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameInstance::UnloadAllMutators()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.UnloadAllMutators");
        
        UGBGameInstance_UnloadAllMutators_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.SetNewMasterServerModList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> NewMasterServerModList                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameInstance::SetNewMasterServerModList(BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> NewMasterServerModList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.SetNewMasterServerModList");
        
        UGBGameInstance_SetNewMasterServerModList_Params params {};
        params.NewMasterServerModList = NewMasterServerModList;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.PostInviteAccepted
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameInstance::PostInviteAccepted()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.PostInviteAccepted");
        
        UGBGameInstance_PostInviteAccepted_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.OnModSyncComplete
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameInstance::OnModSyncComplete(bool bWasSuccessful)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.OnModSyncComplete");
        
        UGBGameInstance_OnModSyncComplete_Params params {};
        params.bWasSuccessful = bWasSuccessful;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.LoadMutatorsForMod
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameInstance::LoadMutatorsForMod(const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.LoadMutatorsForMod");
        
        UGBGameInstance_LoadMutatorsForMod_Params params {};
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.LoadAllMutators
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameInstance::LoadAllMutators()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.LoadAllMutators");
        
        UGBGameInstance_LoadAllMutators_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.GetStillDownloadingModsForListenServerClient
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameInstance::GetStillDownloadingModsForListenServerClient()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.GetStillDownloadingModsForListenServerClient");
        
        UGBGameInstance_GetStillDownloadingModsForListenServerClient_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.GetServerDownloadModsComplete
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameInstance::GetServerDownloadModsComplete()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.GetServerDownloadModsComplete");
        
        UGBGameInstance_GetServerDownloadModsComplete_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.GetOptionValuesForMutator
     *         Flags  -> ()
     * Parameters:
     *         FMModdingPlugin::FLuaScriptInfo                    ScriptInfo                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<FMModdingPlugin::FLuaScriptOption> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<FMModdingPlugin::FLuaScriptOption> UGBGameInstance::GetOptionValuesForMutator(FMModdingPlugin::FLuaScriptInfo* ScriptInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.GetOptionValuesForMutator");
        
        UGBGameInstance_GetOptionValuesForMutator_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ScriptInfo != nullptr)
            *ScriptInfo = params.ScriptInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.GetMasterServerModList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> UGBGameInstance::GetMasterServerModList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.GetMasterServerModList");
        
        UGBGameInstance_GetMasterServerModList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameInstance.GetLastMapLoadTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBGameInstance::GetLastMapLoadTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameInstance.GetLastMapLoadTime");
        
        UGBGameInstance_GetLastMapLoadTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.UpdateMissionCompletionStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::UpdateMissionCompletionStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.UpdateMissionCompletionStats");
        
        AGBGameMode_UpdateMissionCompletionStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.UpdateGameRules
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::UpdateGameRules()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.UpdateGameRules");
        
        AGBGameMode_UpdateGameRules_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.UpdateCanRandomiseObjectives
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::UpdateCanRandomiseObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.UpdateCanRandomiseObjectives");
        
        AGBGameMode_UpdateCanRandomiseObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.UnFreezeBots
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::UnFreezeBots(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.UnFreezeBots");
        
        AGBGameMode_UnFreezeBots_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.TriggerSequencePlayback
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> LevelSequenceActor                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsCutscene                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCanAbort                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bResetActors                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bHidePlayers                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bBlackoutAfter                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameMode::TriggerSequencePlayback(BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> LevelSequenceActor, bool bIsCutscene, bool bCanAbort, bool bResetActors, bool bHidePlayers, bool bBlackoutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.TriggerSequencePlayback");
        
        AGBGameMode_TriggerSequencePlayback_Params params {};
        params.LevelSequenceActor = LevelSequenceActor;
        params.bIsCutscene = bIsCutscene;
        params.bCanAbort = bCanAbort;
        params.bResetActors = bResetActors;
        params.bHidePlayers = bHidePlayers;
        params.bBlackoutAfter = bBlackoutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.TimeLimitTimer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::TimeLimitTimer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.TimeLimitTimer");
        
        AGBGameMode_TimeLimitTimer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.TimeLimitReached
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::TimeLimitReached()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.TimeLimitReached");
        
        AGBGameMode_TimeLimitReached_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.TeleportPlayer
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              SpawnRotation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::TeleportPlayer(GroundBranch::AGBPlayerState* GBPlayerState, const CoreUObject::FVector& SpawnLocation, const CoreUObject::FRotator& SpawnRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.TeleportPlayer");
        
        AGBGameMode_TeleportPlayer_Params params {};
        params.GBPlayerState = GBPlayerState;
        params.SpawnLocation = SpawnLocation;
        params.SpawnRotation = SpawnRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.StopCurrentSequencePlayback
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bSuppressBlackOutAfter                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::StopCurrentSequencePlayback(bool bSuppressBlackOutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.StopCurrentSequencePlayback");
        
        AGBGameMode_StopCurrentSequencePlayback_Params params {};
        params.bSuppressBlackOutAfter = bSuppressBlackOutAfter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.StandAloneCommand
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::StandAloneCommand(const BasicTypes::FString& Command, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.StandAloneCommand");
        
        AGBGameMode_StandAloneCommand_Params params {};
        params.Command = Command;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.ShouldCheckForTeamKills
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::ShouldCheckForTeamKills()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.ShouldCheckForTeamKills");
        
        AGBGameMode_ShouldCheckForTeamKills_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetRoundTime
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewRoundTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetRoundTime(int32_t NewRoundTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetRoundTime");
        
        AGBGameMode_SetRoundTime_Params params {};
        params.NewRoundTime = NewRoundTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetRoundStageTime(int32_t NewTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetRoundStageTime");
        
        AGBGameMode_SetRoundStageTime_Params params {};
        params.NewTime = NewTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetRoundStage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  NewRoundStage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetRoundStage(const BasicTypes::FName& NewRoundStage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetRoundStage");
        
        AGBGameMode_SetRoundStage_Params params {};
        params.NewRoundStage = NewRoundStage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetRecordStats
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewRecordStats                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetRecordStats(bool bNewRecordStats)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetRecordStats");
        
        AGBGameMode_SetRecordStats_Params params {};
        params.bNewRecordStats = bNewRecordStats;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetMissionFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                NewMissionFileName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetMissionFileName(const BasicTypes::FString& NewMissionFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetMissionFileName");
        
        AGBGameMode_SetMissionFileName_Params params {};
        params.NewMissionFileName = NewMissionFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetMissionData
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBMissionData*                      NewMissionData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSpawnActors                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRunScript                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetMissionData(GroundBranch::UGBMissionData* NewMissionData, bool bSpawnActors, bool bRunScript, bool bForce)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetMissionData");
        
        AGBGameMode_SetMissionData_Params params {};
        params.NewMissionData = NewMissionData;
        params.bSpawnActors = bSpawnActors;
        params.bRunScript = bRunScript;
        params.bForce = bForce;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetMatchType
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMatchType                         NewMatchType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bResetRoundScores                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetMatchType(GroundBranch::EGBMatchType NewMatchType, bool bResetRoundScores)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetMatchType");
        
        AGBGameMode_SetMatchType_Params params {};
        params.NewMatchType = NewMatchType;
        params.bResetRoundScores = bResetRoundScores;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetMatchStartTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMatchStartTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetMatchStartTime(float NewMatchStartTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetMatchStartTime");
        
        AGBGameMode_SetMatchStartTime_Params params {};
        params.NewMatchStartTime = NewMatchStartTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetMatchInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBMatchInfo                         NewMatchInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetMatchInfo(const GroundBranch::FGBMatchInfo& NewMatchInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetMatchInfo");
        
        AGBGameMode_SetMatchInfo_Params params {};
        params.NewMatchInfo = NewMatchInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetGameModeModID
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    InGameModeModID                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetGameModeModID(const ModKit::FUInt64& InGameModeModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetGameModeModID");
        
        AGBGameMode_SetGameModeModID_Params params {};
        params.InGameModeModID = InGameModeModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetDifficulty
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewDifficulty                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetDifficulty(int32_t NewDifficulty)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetDifficulty");
        
        AGBGameMode_SetDifficulty_Params params {};
        params.NewDifficulty = NewDifficulty;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetDefaultRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RoundStageName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NewTimeLimit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetDefaultRoundStageTime(const BasicTypes::FName& RoundStageName, int32_t NewTimeLimit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetDefaultRoundStageTime");
        
        AGBGameMode_SetDefaultRoundStageTime_Params params {};
        params.RoundStageName = RoundStageName;
        params.NewTimeLimit = NewTimeLimit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SetCampaignMissionHasGoneCoop
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bInCampaignMissionHasGoneCoop                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::SetCampaignMissionHasGoneCoop(bool bInCampaignMissionHasGoneCoop)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SetCampaignMissionHasGoneCoop");
        
        AGBGameMode_SetCampaignMissionHasGoneCoop_Params params {};
        params.bInCampaignMissionHasGoneCoop = bInCampaignMissionHasGoneCoop;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SendEveryoneToReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::SendEveryoneToReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SendEveryoneToReadyRoom");
        
        AGBGameMode_SendEveryoneToReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.SendEveryoneToPlayArea
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::SendEveryoneToPlayArea()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.SendEveryoneToPlayArea");
        
        AGBGameMode_SendEveryoneToPlayArea_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.RunMissionScript
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::RunMissionScript(const BasicTypes::FString& ScriptName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.RunMissionScript");
        
        AGBGameMode_RunMissionScript_Params params {};
        params.ScriptName = ScriptName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.RetryStandalone
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::RetryStandalone(GroundBranch::AGBPlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.RetryStandalone");
        
        AGBGameMode_RetryStandalone_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.ResetMissionObjectives
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::ResetMissionObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.ResetMissionObjectives");
        
        AGBGameMode_ResetMissionObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.ReportAICreatedInPlayArea
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::ReportAICreatedInPlayArea(GroundBranch::AGBCharacter* GBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.ReportAICreatedInPlayArea");
        
        AGBGameMode_ReportAICreatedInPlayArea_Params params {};
        params.GBCharacter = GBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.RemoveBots
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::RemoveBots(uint8_t Count, uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.RemoveBots");
        
        AGBGameMode_RemoveBots_Params params {};
        params.Count = Count;
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.RefreshDroppedInvItemsTimer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::RefreshDroppedInvItemsTimer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.RefreshDroppedInvItemsTimer");
        
        AGBGameMode_RefreshDroppedInvItemsTimer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.RefreshDeadBodyList
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::RefreshDeadBodyList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.RefreshDeadBodyList");
        
        AGBGameMode_RefreshDeadBodyList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PrepLatecomer
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::PrepLatecomer(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PrepLatecomer");
        
        AGBGameMode_PrepLatecomer_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PlayerReadyStatusChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EReadyStatus                         ReadyStatus                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::PlayerReadyStatusChanged(GroundBranch::AGBPlayerState* GBPlayerState, GroundBranch::EReadyStatus ReadyStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PlayerReadyStatusChanged");
        
        AGBGameMode_PlayerReadyStatusChanged_Params params {};
        params.GBPlayerState = GBPlayerState;
        params.ReadyStatus = ReadyStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PlayerInsertionPointChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInsertionPoint*                   InsertionPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::PlayerInsertionPointChanged(GroundBranch::AGBPlayerState* GBPlayerState, GroundBranch::AGBInsertionPoint* InsertionPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PlayerInsertionPointChanged");
        
        AGBGameMode_PlayerInsertionPointChanged_Params params {};
        params.GBPlayerState = GBPlayerState;
        params.InsertionPoint = InsertionPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PlayerGameModeRequest
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Request                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::PlayerGameModeRequest(GroundBranch::AGBPlayerState* GBPlayerState, const BasicTypes::FString& Request)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PlayerGameModeRequest");
        
        AGBGameMode_PlayerGameModeRequest_Params params {};
        params.GBPlayerState = GBPlayerState;
        params.Request = Request;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PlayerEnteredReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::PlayerEnteredReadyRoom(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PlayerEnteredReadyRoom");
        
        AGBGameMode_PlayerEnteredReadyRoom_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PlayerEnteredPlayArea
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::PlayerEnteredPlayArea(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PlayerEnteredPlayArea");
        
        AGBGameMode_PlayerEnteredPlayArea_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.PlayerCanEnterPlayArea
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::PlayerCanEnterPlayArea(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.PlayerCanEnterPlayArea");
        
        AGBGameMode_PlayerCanEnterPlayArea_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnVoteCommandEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnVoteCommandEvent(Engine::APlayerController* PlayerController, const BasicTypes::FString& Command, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnVoteCommandEvent");
        
        AGBGameMode_OnVoteCommandEvent_Params params {};
        params.PlayerController = PlayerController;
        params.Command = Command;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnVoteCommand
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnVoteCommand(Engine::APlayerController* PlayerController, const BasicTypes::FString& Command, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnVoteCommand");
        
        AGBGameMode_OnVoteCommand_Params params {};
        params.PlayerController = PlayerController;
        params.Command = Command;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnRoundStageTimeElapsed
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnRoundStageTimeElapsed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnRoundStageTimeElapsed");
        
        AGBGameMode_OnRoundStageTimeElapsed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnRoundStageSet
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnRoundStageSet()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnRoundStageSet");
        
        AGBGameMode_OnRoundStageSet_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnRoundStageAborted
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnRoundStageAborted(const BasicTypes::FName& Reason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnRoundStageAborted");
        
        AGBGameMode_OnRoundStageAborted_Params params {};
        params.Reason = Reason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnRetryStandalone
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerController*                 PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnRetryStandalone(GroundBranch::AGBPlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnRetryStandalone");
        
        AGBGameMode_OnRetryStandalone_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnProcessCommandEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnProcessCommandEvent(const BasicTypes::FString& Command, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnProcessCommandEvent");
        
        AGBGameMode_OnProcessCommandEvent_Params params {};
        params.Command = Command;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnProcessCommand
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         InvokerPlayerController                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnProcessCommand(Engine::APlayerController* InvokerPlayerController, const BasicTypes::FString& Command, const BasicTypes::FString& Params)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnProcessCommand");
        
        AGBGameMode_OnProcessCommand_Params params {};
        params.InvokerPlayerController = InvokerPlayerController;
        params.Command = Command;
        params.Params = Params;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnPlayerCastNextMapVote
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MapListIndex                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnPlayerCastNextMapVote(Engine::APlayerState* PlayerState, int32_t MapListIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnPlayerCastNextMapVote");
        
        AGBGameMode_OnPlayerCastNextMapVote_Params params {};
        params.PlayerState = PlayerState;
        params.MapListIndex = MapListIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnLuaError
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnLuaError(const BasicTypes::FString& Message)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnLuaError");
        
        AGBGameMode_OnLuaError_Params params {};
        params.Message = Message;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnDroppedInvItemDestroyed
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnDroppedInvItemDestroyed(Engine::AActor* DestroyedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnDroppedInvItemDestroyed");
        
        AGBGameMode_OnDroppedInvItemDestroyed_Params params {};
        params.DestroyedActor = DestroyedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnCharacterDiedEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::ACharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AController*                               CharacterController                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AController*                               KillerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnCharacterDiedEvent(Engine::ACharacter* Character, Engine::AController* CharacterController, Engine::AController* KillerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnCharacterDiedEvent");
        
        AGBGameMode_OnCharacterDiedEvent_Params params {};
        params.Character = Character;
        params.CharacterController = CharacterController;
        params.KillerController = KillerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.OnAIInitializedHandler
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    NewAIController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::OnAIInitializedHandler(GroundBranch::AGBKytController* NewAIController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.OnAIInitializedHandler");
        
        AGBGameMode_OnAIInitializedHandler_Params params {};
        params.NewAIController = NewAIController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.NotifySequenceHasStopped
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::NotifySequenceHasStopped()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.NotifySequenceHasStopped");
        
        AGBGameMode_NotifySequenceHasStopped_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.NotifyMissionObjectiveStatusChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBMissionObjectiveStatus            NewMissionObjectiveStatus                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::NotifyMissionObjectiveStatusChanged(GroundBranch::AGBMissionObjective* MissionObjective, GroundBranch::EGBMissionObjectiveStatus NewMissionObjectiveStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.NotifyMissionObjectiveStatusChanged");
        
        AGBGameMode_NotifyMissionObjectiveStatusChanged_Params params {};
        params.MissionObjective = MissionObjective;
        params.NewMissionObjectiveStatus = NewMissionObjectiveStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.MakeEveryoneSpectate
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::MakeEveryoneSpectate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.MakeEveryoneSpectate");
        
        AGBGameMode_MakeEveryoneSpectate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.LoadLuaScript
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         FMModdingPlugin::FLuaScriptInfo                    OutLuaScriptInfo                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::LoadLuaScript(const BasicTypes::FString& Filename, FMModdingPlugin::FLuaScriptInfo* OutLuaScriptInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.LoadLuaScript");
        
        AGBGameMode_LoadLuaScript_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutLuaScriptInfo != nullptr)
            *OutLuaScriptInfo = params.OutLuaScriptInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.KillBots
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::KillBots(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.KillBots");
        
        AGBGameMode_KillBots_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.IsSequencePlaying
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::IsSequencePlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.IsSequencePlaying");
        
        AGBGameMode_IsSequencePlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.IsEditingMission
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::IsEditingMission()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.IsEditingMission");
        
        AGBGameMode_IsEditingMission_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.HasReachedTimeLimit
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::HasReachedTimeLimit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.HasReachedTimeLimit");
        
        AGBGameMode_HasReachedTimeLimit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.HasBots
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::HasBots()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.HasBots");
        
        AGBGameMode_HasBots_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.HandleStartRoundCommand
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::HandleStartRoundCommand()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.HandleStartRoundCommand");
        
        AGBGameMode_HandleStartRoundCommand_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.HandleRestartRoundCommand
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::HandleRestartRoundCommand()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.HandleRestartRoundCommand");
        
        AGBGameMode_HandleRestartRoundCommand_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.HandleEndRoundCommand
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::HandleEndRoundCommand()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.HandleEndRoundCommand");
        
        AGBGameMode_HandleEndRoundCommand_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetRoundStageTimeRemaining
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameMode::GetRoundStageTimeRemaining()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetRoundStageTimeRemaining");
        
        AGBGameMode_GetRoundStageTimeRemaining_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetRoundStageIsCutScene
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::GetRoundStageIsCutScene()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetRoundStageIsCutScene");
        
        AGBGameMode_GetRoundStageIsCutScene_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetRoundStage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBGameMode::GetRoundStage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetRoundStage");
        
        AGBGameMode_GetRoundStage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetRecordStats
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::GetRecordStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetRecordStats");
        
        AGBGameMode_GetRecordStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetReadyPlayerTeamCounts
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bExcludeBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<int32_t>                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<int32_t> AGBGameMode::GetReadyPlayerTeamCounts(bool bExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetReadyPlayerTeamCounts");
        
        AGBGameMode_GetReadyPlayerTeamCounts_Params params {};
        params.bExcludeBots = bExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetRandomInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInsertionPoint*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInsertionPoint* AGBGameMode::GetRandomInsertionPoint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetRandomInsertionPoint");
        
        AGBGameMode_GetRandomInsertionPoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetPlayingSequenceInfo
     *         Flags  -> ()
     * Parameters:
     *         float                                              OutTime                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutTimeLeft                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutDuration                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutIsCutscene                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutCanAbort                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutBlackoutAfter                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LevelSequence::ALevelSequenceActor*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    LevelSequence::ALevelSequenceActor* AGBGameMode::GetPlayingSequenceInfo(float* OutTime, float* OutTimeLeft, float* OutDuration, bool* bOutIsCutscene, bool* bOutCanAbort, bool* bOutBlackoutAfter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetPlayingSequenceInfo");
        
        AGBGameMode_GetPlayingSequenceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTime != nullptr)
            *OutTime = params.OutTime;
        if (OutTimeLeft != nullptr)
            *OutTimeLeft = params.OutTimeLeft;
        if (OutDuration != nullptr)
            *OutDuration = params.OutDuration;
        if (bOutIsCutscene != nullptr)
            *bOutIsCutscene = params.bOutIsCutscene;
        if (bOutCanAbort != nullptr)
            *bOutCanAbort = params.bOutCanAbort;
        if (bOutBlackoutAfter != nullptr)
            *bOutBlackoutAfter = params.bOutBlackoutAfter;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetPlayerLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBKitInfo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKitInfo* AGBGameMode::GetPlayerLoadoutInfo(Engine::AController* Controller, const BasicTypes::FName& LoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetPlayerLoadoutInfo");
        
        AGBGameMode_GetPlayerLoadoutInfo_Params params {};
        params.Controller = Controller;
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetPermittedWeatherPresets
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> AGBGameMode::GetPermittedWeatherPresets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetPermittedWeatherPresets");
        
        AGBGameMode_GetPermittedWeatherPresets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetMissionFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBGameMode::GetMissionFileName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetMissionFileName");
        
        AGBGameMode_GetMissionFileName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetMissionData
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBMissionData*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBMissionData* AGBGameMode::GetMissionData()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetMissionData");
        
        AGBGameMode_GetMissionData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetMissionCompletionFraction
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameMode::GetMissionCompletionFraction()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetMissionCompletionFraction");
        
        AGBGameMode_GetMissionCompletionFraction_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetMatchStartTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameMode::GetMatchStartTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetMatchStartTime");
        
        AGBGameMode_GetMatchStartTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetMatchInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBMatchInfo                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBMatchInfo AGBGameMode::GetMatchInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetMatchInfo");
        
        AGBGameMode_GetMatchInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetGBWorldSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBWorldSettings*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBWorldSettings* AGBGameMode::GetGBWorldSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetGBWorldSettings");
        
        AGBGameMode_GetGBWorldSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetGameModeTableInfo
     *         Flags  -> ()
     * Parameters:
     *         FMModdingPlugin::FLuaScriptInfo                    ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    FMModdingPlugin::FLuaScriptInfo AGBGameMode::GetGameModeTableInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetGameModeTableInfo");
        
        AGBGameMode_GetGameModeTableInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetGameModeTable
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue AGBGameMode::GetGameModeTable()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetGameModeTable");
        
        AGBGameMode_GetGameModeTable_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetGameModeModID
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    ModKit::FUInt64 AGBGameMode::GetGameModeModID()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetGameModeModID");
        
        AGBGameMode_GetGameModeModID_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetFinalMissionCompletionFraction
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameMode::GetFinalMissionCompletionFraction()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetFinalMissionCompletionFraction");
        
        AGBGameMode_GetFinalMissionCompletionFraction_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetDisplayName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText AGBGameMode::GetDisplayName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetDisplayName");
        
        AGBGameMode_GetDisplayName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetDefaultRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RoundStageName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameMode::GetDefaultRoundStageTime(const BasicTypes::FName& RoundStageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetDefaultRoundStageTime");
        
        AGBGameMode_GetDefaultRoundStageTime_Params params {};
        params.RoundStageName = RoundStageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetCampaignMissionHasGoneCoop
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::GetCampaignMissionHasGoneCoop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetCampaignMissionHasGoneCoop");
        
        AGBGameMode_GetCampaignMissionHasGoneCoop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetBriefingRoomWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBGameMode::GetBriefingRoomWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetBriefingRoomWidget");
        
        AGBGameMode_GetBriefingRoomWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetBotControllers
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBKytController*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBKytController*> AGBGameMode::GetBotControllers(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetBotControllers");
        
        AGBGameMode_GetBotControllers_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetBestLateComerInsertionPoint
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBInsertionPoint*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInsertionPoint* AGBGameMode::GetBestLateComerInsertionPoint(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetBestLateComerInsertionPoint");
        
        AGBGameMode_GetBestLateComerInsertionPoint_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetAISpawnManagerClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAISpawnManager*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAISpawnManager* AGBGameMode::GetAISpawnManagerClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetAISpawnManagerClass");
        
        AGBGameMode_GetAISpawnManagerClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetAISpawnManager
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAISpawnManager*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAISpawnManager* AGBGameMode::GetAISpawnManager()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetAISpawnManager");
        
        AGBGameMode_GetAISpawnManager_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GetAIBarkManager
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBAIBarkManager*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBAIBarkManager* AGBGameMode::GetAIBarkManager()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GetAIBarkManager");
        
        AGBGameMode_GetAIBarkManager_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.GameModeIsLoaded
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::GameModeIsLoaded()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.GameModeIsLoaded");
        
        AGBGameMode_GameModeIsLoaded_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.FreezeBots
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::FreezeBots(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.FreezeBots");
        
        AGBGameMode_FreezeBots_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.FinishServerShutdown
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::FinishServerShutdown()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.FinishServerShutdown");
        
        AGBGameMode_FinishServerShutdown_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.EnterReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::EnterReadyRoom(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.EnterReadyRoom");
        
        AGBGameMode_EnterReadyRoom_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.EnterPlayArea
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::EnterPlayArea(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.EnterPlayArea");
        
        AGBGameMode_EnterPlayArea_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.CompleteAllObjectives
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::CompleteAllObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.CompleteAllObjectives");
        
        AGBGameMode_CompleteAllObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.ClearRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::ClearRoundStageTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.ClearRoundStageTime");
        
        AGBGameMode_ClearRoundStageTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.CheckServerShutdown
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::CheckServerShutdown()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.CheckServerShutdown");
        
        AGBGameMode_CheckServerShutdown_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.CheckChatForBadWords
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ChatText                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::CheckChatForBadWords(BasicTypes::FString* ChatText, GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.CheckChatForBadWords");
        
        AGBGameMode_CheckChatForBadWords_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ChatText != nullptr)
            *ChatText = params.ChatText;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.CharacterDied
     *         Flags  -> ()
     * Parameters:
     *         Engine::ACharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AController*                               CharacterController                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AController*                               KillerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::CharacterDied(Engine::ACharacter* Character, Engine::AController* CharacterController, Engine::AController* KillerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.CharacterDied");
        
        AGBGameMode_CharacterDied_Params params {};
        params.Character = Character;
        params.CharacterController = CharacterController;
        params.KillerController = KillerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.ChangeCallSign
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                NewCallSign                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::ChangeCallSign(Engine::AController* Controller, const BasicTypes::FString& NewCallSign)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.ChangeCallSign");
        
        AGBGameMode_ChangeCallSign_Params params {};
        params.Controller = Controller;
        params.NewCallSign = NewCallSign;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.BroadcastLocalized
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ULocalMessage*                             Message                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SWITCH                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APlayerState*                              RelatedPlayerState_2                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APlayerState*                              RelatedPlayerState_3                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              OptionalObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::BroadcastLocalized(Engine::AActor* Sender, Engine::ULocalMessage* Message, int32_t SWITCH, Engine::APlayerState* RelatedPlayerState_2, Engine::APlayerState* RelatedPlayerState_3, CoreUObject::UObject* OptionalObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.BroadcastLocalized");
        
        AGBGameMode_BroadcastLocalized_Params params {};
        params.Sender = Sender;
        params.Message = Message;
        params.SWITCH = SWITCH;
        params.RelatedPlayerState_2 = RelatedPlayerState_2;
        params.RelatedPlayerState_3 = RelatedPlayerState_3;
        params.OptionalObject = OptionalObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.BroadcastGameMessage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::BroadcastGameMessage(const BasicTypes::FName& GameMessageId, const BasicTypes::FName& Type, float Duration, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.BroadcastGameMessage");
        
        AGBGameMode_BroadcastGameMessage_Params params {};
        params.GameMessageId = GameMessageId;
        params.Type = Type;
        params.Duration = Duration;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.Broadcast
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  MessageType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::Broadcast(GroundBranch::AGBPlayerState* SenderPlayerState, const BasicTypes::FString& Message, const BasicTypes::FName& MessageType, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.Broadcast");
        
        AGBGameMode_Broadcast_Params params {};
        params.SenderPlayerState = SenderPlayerState;
        params.Message = Message;
        params.MessageType = MessageType;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.BeginServerShutdown
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::BeginServerShutdown()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.BeginServerShutdown");
        
        AGBGameMode_BeginServerShutdown_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.BecomeSpectator
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::BecomeSpectator(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.BecomeSpectator");
        
        AGBGameMode_BecomeSpectator_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.ApplyPlayerLoadout
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::ApplyPlayerLoadout(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.ApplyPlayerLoadout");
        
        AGBGameMode_ApplyPlayerLoadout_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.AFKDetected
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::AFKDetected(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.AFKDetected");
        
        AGBGameMode_AFKDetected_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.AdvanceToNextMap
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameMode::AdvanceToNextMap()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.AdvanceToNextMap");
        
        AGBGameMode_AdvanceToNextMap_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.AdjudicateWhetherMatchFinished
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameMode::AdjudicateWhetherMatchFinished()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.AdjudicateWhetherMatchFinished");
        
        AGBGameMode_AdjudicateWhetherMatchFinished_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.AddDefaultLoadout
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::AddDefaultLoadout(const BasicTypes::FName& LoadoutName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.AddDefaultLoadout");
        
        AGBGameMode_AddDefaultLoadout_Params params {};
        params.LoadoutName = LoadoutName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.AddBots
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::AddBots(uint8_t Count, uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.AddBots");
        
        AGBGameMode_AddBots_Params params {};
        params.Count = Count;
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameMode.AbortRoundStage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameMode::AbortRoundStage(const BasicTypes::FName& Reason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameMode.AbortRoundStage");
        
        AGBGameMode_AbortRoundStage_Params params {};
        params.Reason = Reason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeActorInterface.SetActive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewActive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBGameModeActorInterface::SetActive(bool bNewActive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeActorInterface.SetActive");
        
        IGBGameModeActorInterface_SetActive_Params params {};
        params.bNewActive = bNewActive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeActorInterface.IsActive
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IGBGameModeActorInterface::IsActive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeActorInterface.IsActive");
        
        IGBGameModeActorInterface_IsActive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionVersion
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBGameModeFunctionLibrary::GetMissionVersion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionVersion");
        
        UGBGameModeFunctionLibrary_GetMissionVersion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionScriptFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBGameModeFunctionLibrary::GetMissionScriptFileName(const BasicTypes::FString& ScriptName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionScriptFileName");
        
        UGBGameModeFunctionLibrary_GetMissionScriptFileName_Params params {};
        params.ScriptName = ScriptName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionFileName
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                MissionName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBGameModeFunctionLibrary::GetMissionFileName(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& MissionName, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionFileName");
        
        UGBGameModeFunctionLibrary_GetMissionFileName_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.MissionName = MissionName;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionExtension
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBGameModeFunctionLibrary::GetMissionExtension()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetMissionExtension");
        
        UGBGameModeFunctionLibrary_GetMissionExtension_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetGameModeOptions
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBGameModeFunctionLibrary::GetGameModeOptions(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeFunctionLibrary.GetGameModeOptions");
        
        UGBGameModeFunctionLibrary_GetGameModeOptions_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeLuaState.GetTimeSeconds
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBGameModeLuaState::GetTimeSeconds()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeLuaState.GetTimeSeconds");
        
        UGBGameModeLuaState_GetTimeSeconds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeLuaState.GetScript
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              Self                                                       (Parm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBGameModeLuaState::GetScript(const LuaMachine::FLuaValue& Self)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeLuaState.GetScript");
        
        UGBGameModeLuaState_GetScript_Params params {};
        params.Self = Self;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeLuaState.GetComp
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              Self                                                       (Parm, NativeAccessSpecifierPublic)
     *         LuaMachine::FLuaValue                              ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    LuaMachine::FLuaValue UGBGameModeLuaState::GetComp(const LuaMachine::FLuaValue& Self)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeLuaState.GetComp");
        
        UGBGameModeLuaState_GetComp_Params params {};
        params.Self = Self;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameModeLuaState.DebugPrint
     *         Flags  -> ()
     * Parameters:
     *         LuaMachine::FLuaValue                              Message                                                    (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameModeLuaState::DebugPrint(const LuaMachine::FLuaValue& Message)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameModeLuaState.DebugPrint");
        
        UGBGameModeLuaState_DebugPrint_Params params {};
        params.Message = Message;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.UnregisterGameplayTagEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBGameplayTagEventHandle            Handle                                                     (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::UnregisterGameplayTagEvent(GroundBranch::FGBGameplayTagEventHandle* Handle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.UnregisterGameplayTagEvent");
        
        UGBAbilitySystemBlueprintLibrary_UnregisterGameplayTagEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Handle != nullptr)
            *Handle = params.Handle;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.SetRemoveAbilityOnEnd
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::UGameplayAbility*               Ability                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::SetRemoveAbilityOnEnd(Engine::AActor* Actor, GameplayAbilities::UGameplayAbility* Ability)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.SetRemoveAbilityOnEnd");
        
        UGBAbilitySystemBlueprintLibrary_SetRemoveAbilityOnEnd_Params params {};
        params.Actor = Actor;
        params.Ability = Ability;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.SetLooseGameplayTagCount
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NewCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::SetLooseGameplayTagCount(Engine::AActor* Actor, const GameplayTags::FGameplayTag& GameplayTag, int32_t NewCount, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.SetLooseGameplayTagCount");
        
        UGBAbilitySystemBlueprintLibrary_SetLooseGameplayTagCount_Params params {};
        params.Actor = Actor;
        params.GameplayTag = GameplayTag;
        params.NewCount = NewCount;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RequestGameplayTagChildren
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         ParentTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBAbilitySystemBlueprintLibrary::RequestGameplayTagChildren(const GameplayTags::FGameplayTag& ParentTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RequestGameplayTagChildren");
        
        UGBAbilitySystemBlueprintLibrary_RequestGameplayTagChildren_Params params {};
        params.ParentTag = ParentTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RemoveLooseGameplayTags
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                GameplayTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::RemoveLooseGameplayTags(Engine::AActor* Actor, const GameplayTags::FGameplayTagContainer& GameplayTags, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RemoveLooseGameplayTags");
        
        UGBAbilitySystemBlueprintLibrary_RemoveLooseGameplayTags_Params params {};
        params.Actor = Actor;
        params.GameplayTags = GameplayTags;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RemoveLooseGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::RemoveLooseGameplayTag(Engine::AActor* Actor, const GameplayTags::FGameplayTag& GameplayTag, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RemoveLooseGameplayTag");
        
        UGBAbilitySystemBlueprintLibrary_RemoveLooseGameplayTag_Params params {};
        params.Actor = Actor;
        params.GameplayTag = GameplayTag;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RemoveGameplayEffect
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::UGameplayEffect*                GameplayEffectClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::RemoveGameplayEffect(Engine::AActor* Actor, GameplayAbilities::UGameplayEffect* GameplayEffectClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RemoveGameplayEffect");
        
        UGBAbilitySystemBlueprintLibrary_RemoveGameplayEffect_Params params {};
        params.Actor = Actor;
        params.GameplayEffectClass = GameplayEffectClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RegisterGameplayTagEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         Tag                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnGameplayTagChanged                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBGameplayTagEventHandle            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBGameplayTagEventHandle UGBAbilitySystemBlueprintLibrary::RegisterGameplayTagEvent(Engine::AActor* Actor, const GameplayTags::FGameplayTag& Tag, const BasicTypes::UScriptDelegate& OnGameplayTagChanged)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.RegisterGameplayTagEvent");
        
        UGBAbilitySystemBlueprintLibrary_RegisterGameplayTagEvent_Params params {};
        params.Actor = Actor;
        params.Tag = Tag;
        params.OnGameplayTagChanged = OnGameplayTagChanged;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GetSidearmFirearmTypeTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBAbilitySystemBlueprintLibrary::GetSidearmFirearmTypeTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GetSidearmFirearmTypeTags");
        
        UGBAbilitySystemBlueprintLibrary_GetSidearmFirearmTypeTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GetPrimaryFirearmTypeTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTagContainer UGBAbilitySystemBlueprintLibrary::GetPrimaryFirearmTypeTags()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GetPrimaryFirearmTypeTags");
        
        UGBAbilitySystemBlueprintLibrary_GetPrimaryFirearmTypeTags_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTagContainer_IsValid
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                Container                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::GameplayTagContainer_IsValid(const GameplayTags::FGameplayTagContainer& Container)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTagContainer_IsValid");
        
        UGBAbilitySystemBlueprintLibrary_GameplayTagContainer_IsValid_Params params {};
        params.Container = Container;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTagContainer_FilterExact
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                SourceContainer                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                OtherContainer                                             (Parm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                OutFilteredContainer                                       (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::GameplayTagContainer_FilterExact(const GameplayTags::FGameplayTagContainer& SourceContainer, const GameplayTags::FGameplayTagContainer& OtherContainer, GameplayTags::FGameplayTagContainer* OutFilteredContainer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTagContainer_FilterExact");
        
        UGBAbilitySystemBlueprintLibrary_GameplayTagContainer_FilterExact_Params params {};
        params.SourceContainer = SourceContainer;
        params.OtherContainer = OtherContainer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFilteredContainer != nullptr)
            *OutFilteredContainer = params.OutFilteredContainer;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTagContainer_Filter
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                SourceContainer                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                OtherContainer                                             (Parm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                OutFilteredContainer                                       (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::GameplayTagContainer_Filter(const GameplayTags::FGameplayTagContainer& SourceContainer, const GameplayTags::FGameplayTagContainer& OtherContainer, GameplayTags::FGameplayTagContainer* OutFilteredContainer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTagContainer_Filter");
        
        UGBAbilitySystemBlueprintLibrary_GameplayTagContainer_Filter_Params params {};
        params.SourceContainer = SourceContainer;
        params.OtherContainer = OtherContainer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFilteredContainer != nullptr)
            *OutFilteredContainer = params.OutFilteredContainer;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTag_ToSocketName
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ParentGameplayTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBAbilitySystemBlueprintLibrary::GameplayTag_ToSocketName(const GameplayTags::FGameplayTag& GameplayTag, const GameplayTags::FGameplayTag& ParentGameplayTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTag_ToSocketName");
        
        UGBAbilitySystemBlueprintLibrary_GameplayTag_ToSocketName_Params params {};
        params.GameplayTag = GameplayTag;
        params.ParentGameplayTag = ParentGameplayTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTag_FromSocketName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  SocketName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ParentGameplayTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBAbilitySystemBlueprintLibrary::GameplayTag_FromSocketName(const BasicTypes::FName& SocketName, const GameplayTags::FGameplayTag& ParentGameplayTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayTag_FromSocketName");
        
        UGBAbilitySystemBlueprintLibrary_GameplayTag_FromSocketName_Params params {};
        params.SocketName = SocketName;
        params.ParentGameplayTag = ParentGameplayTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayEffect_IsValidHandle
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::FActiveGameplayEffectHandle     GameplayEffectHandle                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::GameplayEffect_IsValidHandle(const GameplayAbilities::FActiveGameplayEffectHandle& GameplayEffectHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.GameplayEffect_IsValidHandle");
        
        UGBAbilitySystemBlueprintLibrary_GameplayEffect_IsValidHandle_Params params {};
        params.GameplayEffectHandle = GameplayEffectHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConvertStringToGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TagString                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ErrorIfNotFound                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBAbilitySystemBlueprintLibrary::ConvertStringToGameplayTag(const BasicTypes::FString& TagString, bool ErrorIfNotFound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConvertStringToGameplayTag");
        
        UGBAbilitySystemBlueprintLibrary_ConvertStringToGameplayTag_Params params {};
        params.TagString = TagString;
        params.ErrorIfNotFound = ErrorIfNotFound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConvertNameToGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  TagName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ErrorIfNotFound                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayTags::FGameplayTag UGBAbilitySystemBlueprintLibrary::ConvertNameToGameplayTag(const BasicTypes::FName& TagName, bool ErrorIfNotFound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConvertNameToGameplayTag");
        
        UGBAbilitySystemBlueprintLibrary_ConvertNameToGameplayTag_Params params {};
        params.TagName = TagName;
        params.ErrorIfNotFound = ErrorIfNotFound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConditionalRemoveLooseGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::ConditionalRemoveLooseGameplayTag(Engine::AActor* Actor, const GameplayTags::FGameplayTag& GameplayTag, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConditionalRemoveLooseGameplayTag");
        
        UGBAbilitySystemBlueprintLibrary_ConditionalRemoveLooseGameplayTag_Params params {};
        params.Actor = Actor;
        params.GameplayTag = GameplayTag;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConditionalAddLooseGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::ConditionalAddLooseGameplayTag(Engine::AActor* Actor, const GameplayTags::FGameplayTag& GameplayTag, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ConditionalAddLooseGameplayTag");
        
        UGBAbilitySystemBlueprintLibrary_ConditionalAddLooseGameplayTag_Params params {};
        params.Actor = Actor;
        params.GameplayTag = GameplayTag;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ClearLooseGameplayTagsByParent
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         ParentGameplayTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::ClearLooseGameplayTagsByParent(Engine::AActor* Actor, const GameplayTags::FGameplayTag& ParentGameplayTag, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.ClearLooseGameplayTagsByParent");
        
        UGBAbilitySystemBlueprintLibrary_ClearLooseGameplayTagsByParent_Params params {};
        params.Actor = Actor;
        params.ParentGameplayTag = ParentGameplayTag;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.CancelAbilities
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                WithTags                                                   (Parm, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                WithoutTags                                                (Parm, NativeAccessSpecifierPublic)
     *         GameplayAbilities::UGameplayAbility*               Ignore                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::CancelAbilities(Engine::AActor* Actor, const GameplayTags::FGameplayTagContainer& WithTags, const GameplayTags::FGameplayTagContainer& WithoutTags, GameplayAbilities::UGameplayAbility* Ignore)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.CancelAbilities");
        
        UGBAbilitySystemBlueprintLibrary_CancelAbilities_Params params {};
        params.Actor = Actor;
        params.WithTags = WithTags;
        params.WithoutTags = WithoutTags;
        params.Ignore = Ignore;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddLooseGameplayTags
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTagContainer                GameplayTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::AddLooseGameplayTags(Engine::AActor* Actor, const GameplayTags::FGameplayTagContainer& GameplayTags, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddLooseGameplayTags");
        
        UGBAbilitySystemBlueprintLibrary_AddLooseGameplayTags_Params params {};
        params.Actor = Actor;
        params.GameplayTags = GameplayTags;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddLooseGameplayTag
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayTags::FGameplayTag                         GameplayTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShouldReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemBlueprintLibrary::AddLooseGameplayTag(Engine::AActor* Actor, const GameplayTags::FGameplayTag& GameplayTag, bool bShouldReplicate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddLooseGameplayTag");
        
        UGBAbilitySystemBlueprintLibrary_AddLooseGameplayTag_Params params {};
        params.Actor = Actor;
        params.GameplayTag = GameplayTag;
        params.bShouldReplicate = bShouldReplicate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddGameplayEffectWithDuration
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::UGameplayEffect*                GameplayEffectClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::AddGameplayEffectWithDuration(Engine::AActor* Actor, GameplayAbilities::UGameplayEffect* GameplayEffectClass, float Duration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddGameplayEffectWithDuration");
        
        UGBAbilitySystemBlueprintLibrary_AddGameplayEffectWithDuration_Params params {};
        params.Actor = Actor;
        params.GameplayEffectClass = GameplayEffectClass;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddGameplayEffect
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::UGameplayEffect*                GameplayEffectClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemBlueprintLibrary::AddGameplayEffect(Engine::AActor* Actor, GameplayAbilities::UGameplayEffect* GameplayEffectClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemBlueprintLibrary.AddGameplayEffect");
        
        UGBAbilitySystemBlueprintLibrary_AddGameplayEffect_Params params {};
        params.Actor = Actor;
        params.GameplayEffectClass = GameplayEffectClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.UnBlockAbilitiesWithoutTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                Tags                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemComponent::UnBlockAbilitiesWithoutTags(const GameplayTags::FGameplayTagContainer& Tags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.UnBlockAbilitiesWithoutTags");
        
        UGBAbilitySystemComponent_UnBlockAbilitiesWithoutTags_Params params {};
        params.Tags = Tags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.SetGameplayEffectDurationHandle
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::FActiveGameplayEffectHandle     Handle                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewDuration                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemComponent::SetGameplayEffectDurationHandle(const GameplayAbilities::FActiveGameplayEffectHandle& Handle, float NewDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.SetGameplayEffectDurationHandle");
        
        UGBAbilitySystemComponent_SetGameplayEffectDurationHandle_Params params {};
        params.Handle = Handle;
        params.NewDuration = NewDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.K2_UnBlockAbilitiesWithTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                Tags                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemComponent::K2_UnBlockAbilitiesWithTags(const GameplayTags::FGameplayTagContainer& Tags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.K2_UnBlockAbilitiesWithTags");
        
        UGBAbilitySystemComponent_K2_UnBlockAbilitiesWithTags_Params params {};
        params.Tags = Tags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.K2_BlockAbilitiesWithTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                Tags                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemComponent::K2_BlockAbilitiesWithTags(const GameplayTags::FGameplayTagContainer& Tags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.K2_BlockAbilitiesWithTags");
        
        UGBAbilitySystemComponent_K2_BlockAbilitiesWithTags_Params params {};
        params.Tags = Tags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.GetFirstActiveGameplayEffect
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayEffect*                GameplayEffectClass                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GameplayAbilities::FActiveGameplayEffectHandle     ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GameplayAbilities::FActiveGameplayEffectHandle UGBAbilitySystemComponent::GetFirstActiveGameplayEffect(GameplayAbilities::UGameplayEffect* GameplayEffectClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.GetFirstActiveGameplayEffect");
        
        UGBAbilitySystemComponent_GetFirstActiveGameplayEffect_Params params {};
        params.GameplayEffectClass = GameplayEffectClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.CancelAbilityByClass
     *         Flags  -> ()
     * Parameters:
     *         GameplayAbilities::UGameplayAbility*               InAbilityToCancel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAbilitySystemComponent::CancelAbilityByClass(GameplayAbilities::UGameplayAbility* InAbilityToCancel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.CancelAbilityByClass");
        
        UGBAbilitySystemComponent_CancelAbilityByClass_Params params {};
        params.InAbilityToCancel = InAbilityToCancel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAbilitySystemComponent.BlockAbilitiesWithoutTags
     *         Flags  -> ()
     * Parameters:
     *         GameplayTags::FGameplayTagContainer                Tags                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAbilitySystemComponent::BlockAbilitiesWithoutTags(const GameplayTags::FGameplayTagContainer& Tags)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAbilitySystemComponent.BlockAbilitiesWithoutTags");
        
        UGBAbilitySystemComponent_BlockAbilitiesWithoutTags_Params params {};
        params.Tags = Tags;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBVOIPManager.SetVOIPSwitchEvent
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             AkComponent                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EVOIPType                            VOIPType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBVOIPManager::SetVOIPSwitchEvent(AkAudio::UAkComponent* AkComponent, GroundBranch::EVOIPType VOIPType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBVOIPManager.SetVOIPSwitchEvent");
        
        UGBVOIPManager_SetVOIPSwitchEvent_Params params {};
        params.AkComponent = AkComponent;
        params.VOIPType = VOIPType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBVOIPManager.SetDevice
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                DeviceName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBVOIPManager::SetDevice(const BasicTypes::FString& DeviceName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBVOIPManager.SetDevice");
        
        UGBVOIPManager_SetDevice_Params params {};
        params.DeviceName = DeviceName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBVOIPManager.SetCharVoiceSwitchEvent
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::UAkComponent*                             AkComponent                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsRadio                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsLocal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBVOIPManager::SetCharVoiceSwitchEvent(AkAudio::UAkComponent* AkComponent, bool bIsRadio, bool bIsLocal)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBVOIPManager.SetCharVoiceSwitchEvent");
        
        UGBVOIPManager_SetCharVoiceSwitchEvent_Params params {};
        params.AkComponent = AkComponent;
        params.bIsRadio = bIsRadio;
        params.bIsLocal = bIsLocal;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBVOIPManager.OnPlayerCharVoicePostEventCallback
     *         Flags  -> ()
     * Parameters:
     *         AkAudio::EAkCallbackType                           CallbackType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkCallbackInfo*                          CallbackInfo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBVOIPManager::OnPlayerCharVoicePostEventCallback(AkAudio::EAkCallbackType CallbackType, AkAudio::UAkCallbackInfo* CallbackInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBVOIPManager.OnPlayerCharVoicePostEventCallback");
        
        UGBVOIPManager_OnPlayerCharVoicePostEventCallback_Params params {};
        params.CallbackType = CallbackType;
        params.CallbackInfo = CallbackInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBVOIPManager.GetDeviceNames
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UGBVOIPManager::GetDeviceNames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBVOIPManager.GetDeviceNames");
        
        UGBVOIPManager_GetDeviceNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBVOIPManager.GetCurrentDeviceName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBVOIPManager::GetCurrentDeviceName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBVOIPManager.GetCurrentDeviceName");
        
        UGBVOIPManager_GetCurrentDeviceName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWeatherInfo.OnUpdateTransformEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBWeatherInfo::OnUpdateTransformEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWeatherInfo.OnUpdateTransformEvent");
        
        AGBWeatherInfo_OnUpdateTransformEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetWorldSettings
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBWorldSettings*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBWorldSettings* AGBWorldSettings::GetWorldSettings(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetWorldSettings");
        
        AGBWorldSettings_GetWorldSettings_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetTimeZone
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBWorldSettings::GetTimeZone()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetTimeZone");
        
        AGBWorldSettings_GetTimeZone_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetTerritoryName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBWorldSettings::GetTerritoryName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetTerritoryName");
        
        AGBWorldSettings_GetTerritoryName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetSpawnFriendlyAI
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBWorldSettings::GetSpawnFriendlyAI()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetSpawnFriendlyAI");
        
        AGBWorldSettings_GetSpawnFriendlyAI_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetShouldCreateDebugSquad
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBWorldSettings::GetShouldCreateDebugSquad()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetShouldCreateDebugSquad");
        
        AGBWorldSettings_GetShouldCreateDebugSquad_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetSequenceToPlayBeforeMissionStarts
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBWorldSettings::GetSequenceToPlayBeforeMissionStarts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetSequenceToPlayBeforeMissionStarts");
        
        AGBWorldSettings_GetSequenceToPlayBeforeMissionStarts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetSequenceToPlayAfterMissionSuccess
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBWorldSettings::GetSequenceToPlayAfterMissionSuccess()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetSequenceToPlayAfterMissionSuccess");
        
        AGBWorldSettings_GetSequenceToPlayAfterMissionSuccess_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetSequenceToPlayAfterMissionFail
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> ReturnValue                                                (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TSoftObjectPtr<LevelSequence::ALevelSequenceActor> AGBWorldSettings::GetSequenceToPlayAfterMissionFail()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetSequenceToPlayAfterMissionFail");
        
        AGBWorldSettings_GetSequenceToPlayAfterMissionFail_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetPreferredMissionTimes
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::EMissionTimeLabel> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::EMissionTimeLabel> AGBWorldSettings::GetPreferredMissionTimes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetPreferredMissionTimes");
        
        AGBWorldSettings_GetPreferredMissionTimes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetObservesDST
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBWorldSettings::GetObservesDST()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetObservesDST");
        
        AGBWorldSettings_GetObservesDST_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetNumberFriendlyAI
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBWorldSettings::GetNumberFriendlyAI()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetNumberFriendlyAI");
        
        AGBWorldSettings_GetNumberFriendlyAI_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetLongitude
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBWorldSettings::GetLongitude()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetLongitude");
        
        AGBWorldSettings_GetLongitude_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetLocationIsClassified
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBWorldSettings::GetLocationIsClassified()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetLocationIsClassified");
        
        AGBWorldSettings_GetLocationIsClassified_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetLocalClimateSettings
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBClimateSettings                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBClimateSettings AGBWorldSettings::GetLocalClimateSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetLocalClimateSettings");
        
        AGBWorldSettings_GetLocalClimateSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetLocalClimatePreset
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBClimatePreset*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBClimatePreset* AGBWorldSettings::GetLocalClimatePreset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetLocalClimatePreset");
        
        AGBWorldSettings_GetLocalClimatePreset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetListOfAllowableMonthNumbers
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<int32_t>                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<int32_t> AGBWorldSettings::GetListOfAllowableMonthNumbers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetListOfAllowableMonthNumbers");
        
        AGBWorldSettings_GetListOfAllowableMonthNumbers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetLevelSummary
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBLevelSummary*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBLevelSummary* AGBWorldSettings::GetLevelSummary()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetLevelSummary");
        
        AGBWorldSettings_GetLevelSummary_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetLatitude
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBWorldSettings::GetLatitude()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetLatitude");
        
        AGBWorldSettings_GetLatitude_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetIsMonthAllowed
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBWorldSettings::GetIsMonthAllowed(int32_t InMonth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetIsMonthAllowed");
        
        AGBWorldSettings_GetIsMonthAllowed_Params params {};
        params.InMonth = InMonth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetFirstAllowableMonth
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            StartMonth                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBWorldSettings::GetFirstAllowableMonth(int32_t StartMonth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetFirstAllowableMonth");
        
        AGBWorldSettings_GetFirstAllowableMonth_Params params {};
        params.StartMonth = StartMonth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetDefaultSpatialSoundTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBWorldSettings::GetDefaultSpatialSoundTag()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetDefaultSpatialSoundTag");
        
        AGBWorldSettings_GetDefaultSpatialSoundTag_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetAllowedSeasons
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::ESeason>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::ESeason> AGBWorldSettings::GetAllowedSeasons()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetAllowedSeasons");
        
        AGBWorldSettings_GetAllowedSeasons_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetAIVisibilityMultiplier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBWorldSettings::GetAIVisibilityMultiplier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetAIVisibilityMultiplier");
        
        AGBWorldSettings_GetAIVisibilityMultiplier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBWorldSettings.GetAIHearingMultiplier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBWorldSettings::GetAIHearingMultiplier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBWorldSettings.GetAIHearingMultiplier");
        
        AGBWorldSettings_GetAIHearingMultiplier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.JoyColorWheel.SetColor
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FLinearColor                          NewColor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               SkipAnimation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UJoyColorWheel::SetColor(const CoreUObject::FLinearColor& NewColor, bool SkipAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.JoyColorWheel.SetColor");
        
        UJoyColorWheel_SetColor_Params params {};
        params.NewColor = NewColor;
        params.SkipAnimation = SkipAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.JoyColorWheel.GetColor
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FLinearColor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FLinearColor UJoyColorWheel::GetColor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.JoyColorWheel.GetColor");
        
        UJoyColorWheel_GetColor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.VectorRadiansToDegrees
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               RadVector                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::VectorRadiansToDegrees(const CoreUObject::FVector& RadVector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.VectorRadiansToDegrees");
        
        UTKMathFunctionLibrary_VectorRadiansToDegrees_Params params {};
        params.RadVector = RadVector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.VectorDegreesToRadians
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               DegVector                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::VectorDegreesToRadians(const CoreUObject::FVector& DegVector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.VectorDegreesToRadians");
        
        UTKMathFunctionLibrary_VectorDegreesToRadians_Params params {};
        params.DegVector = DegVector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.SphereBoxIntersection
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               SphereOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               BoxOrigin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               BoxExtent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::SphereBoxIntersection(const CoreUObject::FVector& SphereOrigin, float SphereRadius, const CoreUObject::FVector& BoxOrigin, const CoreUObject::FVector& BoxExtent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.SphereBoxIntersection");
        
        UTKMathFunctionLibrary_SphereBoxIntersection_Params params {};
        params.SphereOrigin = SphereOrigin;
        params.SphereRadius = SphereRadius;
        params.BoxOrigin = BoxOrigin;
        params.BoxExtent = BoxExtent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.SignedDistancePlanePoint
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               PlaneNormal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PlanePoint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UTKMathFunctionLibrary::SignedDistancePlanePoint(const CoreUObject::FVector& PlaneNormal, const CoreUObject::FVector& PlanePoint, const CoreUObject::FVector& Point)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.SignedDistancePlanePoint");
        
        UTKMathFunctionLibrary_SignedDistancePlanePoint_Params params {};
        params.PlaneNormal = PlaneNormal;
        params.PlanePoint = PlanePoint;
        params.Point = Point;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.SetVectorLength
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::SetVectorLength(const CoreUObject::FVector& A, float Size)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.SetVectorLength");
        
        UTKMathFunctionLibrary_SetVectorLength_Params params {};
        params.A = A;
        params.Size = Size;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.SetCenterOfMassOffset
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTKMathFunctionLibrary::SetCenterOfMassOffset(Engine::UPrimitiveComponent* Target, const CoreUObject::FVector& Offset, const BasicTypes::FName& BoneName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.SetCenterOfMassOffset");
        
        UTKMathFunctionLibrary_SetCenterOfMassOffset_Params params {};
        params.Target = Target;
        params.Offset = Offset;
        params.BoneName = BoneName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.RoundToUpperMultiple
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               skipSelf                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTKMathFunctionLibrary::RoundToUpperMultiple(int32_t A, int32_t Multiple, bool skipSelf)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.RoundToUpperMultiple");
        
        UTKMathFunctionLibrary_RoundToUpperMultiple_Params params {};
        params.A = A;
        params.Multiple = Multiple;
        params.skipSelf = skipSelf;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.RoundToNearestMultiple
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTKMathFunctionLibrary::RoundToNearestMultiple(int32_t A, int32_t Multiple)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.RoundToNearestMultiple");
        
        UTKMathFunctionLibrary_RoundToNearestMultiple_Params params {};
        params.A = A;
        params.Multiple = Multiple;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.RoundToLowerMultiple
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               skipSelf                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTKMathFunctionLibrary::RoundToLowerMultiple(int32_t A, int32_t Multiple, bool skipSelf)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.RoundToLowerMultiple");
        
        UTKMathFunctionLibrary_RoundToLowerMultiple_Params params {};
        params.A = A;
        params.Multiple = Multiple;
        params.skipSelf = skipSelf;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ProjectPointOnLine
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               LineOrigin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineDirection                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::ProjectPointOnLine(const CoreUObject::FVector& LineOrigin, const CoreUObject::FVector& LineDirection, const CoreUObject::FVector& Point)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ProjectPointOnLine");
        
        UTKMathFunctionLibrary_ProjectPointOnLine_Params params {};
        params.LineOrigin = LineOrigin;
        params.LineDirection = LineDirection;
        params.Point = Point;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.PointOnWhichSideOfLineSegment
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               LinePoint1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTKMathFunctionLibrary::PointOnWhichSideOfLineSegment(const CoreUObject::FVector& LinePoint1, const CoreUObject::FVector& LinePoint2, const CoreUObject::FVector& Point)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.PointOnWhichSideOfLineSegment");
        
        UTKMathFunctionLibrary_PointOnWhichSideOfLineSegment_Params params {};
        params.LinePoint1 = LinePoint1;
        params.LinePoint2 = LinePoint2;
        params.Point = Point;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.NegateVector2D
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector2D                             A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UTKMathFunctionLibrary::NegateVector2D(const CoreUObject::FVector2D& A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.NegateVector2D");
        
        UTKMathFunctionLibrary_NegateVector2D_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.NegateInt
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTKMathFunctionLibrary::NegateInt(int32_t A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.NegateInt");
        
        UTKMathFunctionLibrary_NegateInt_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.NegateFloat
     *         Flags  -> ()
     * Parameters:
     *         float                                              A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UTKMathFunctionLibrary::NegateFloat(float A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.NegateFloat");
        
        UTKMathFunctionLibrary_NegateFloat_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.LineToLineIntersection
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               IntersectionPoint                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineDir1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineDir2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::LineToLineIntersection(CoreUObject::FVector* IntersectionPoint, const CoreUObject::FVector& LinePoint1, const CoreUObject::FVector& LineDir1, const CoreUObject::FVector& LinePoint2, const CoreUObject::FVector& LineDir2)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.LineToLineIntersection");
        
        UTKMathFunctionLibrary_LineToLineIntersection_Params params {};
        params.LinePoint1 = LinePoint1;
        params.LineDir1 = LineDir1;
        params.LinePoint2 = LinePoint2;
        params.LineDir2 = LineDir2;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (IntersectionPoint != nullptr)
            *IntersectionPoint = params.IntersectionPoint;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.LineExtentBoxIntersection
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FBox                                  InBox                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               End                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Extent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               HitLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               HitNormal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              HitTime                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::LineExtentBoxIntersection(const CoreUObject::FBox& InBox, const CoreUObject::FVector& Start, const CoreUObject::FVector& End, const CoreUObject::FVector& Extent, CoreUObject::FVector* HitLocation, CoreUObject::FVector* HitNormal, float* HitTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.LineExtentBoxIntersection");
        
        UTKMathFunctionLibrary_LineExtentBoxIntersection_Params params {};
        params.InBox = InBox;
        params.Start = Start;
        params.End = End;
        params.Extent = Extent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (HitLocation != nullptr)
            *HitLocation = params.HitLocation;
        if (HitNormal != nullptr)
            *HitNormal = params.HitNormal;
        if (HitTime != nullptr)
            *HitTime = params.HitTime;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.IsPowerOfTwo
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            X                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::IsPowerOfTwo(int32_t X)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.IsPowerOfTwo");
        
        UTKMathFunctionLibrary_IsPowerOfTwo_Params params {};
        params.X = X;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.IsPointInsideBox
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               BoxOrigin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               BoxExtent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::IsPointInsideBox(const CoreUObject::FVector& Point, const CoreUObject::FVector& BoxOrigin, const CoreUObject::FVector& BoxExtent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.IsPointInsideBox");
        
        UTKMathFunctionLibrary_IsPointInsideBox_Params params {};
        params.Point = Point;
        params.BoxOrigin = BoxOrigin;
        params.BoxExtent = BoxExtent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.IsMultipleOf
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::IsMultipleOf(int32_t A, int32_t Multiple)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.IsMultipleOf");
        
        UTKMathFunctionLibrary_IsMultipleOf_Params params {};
        params.A = A;
        params.Multiple = Multiple;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.IsLineInsideSphere
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               LineStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineDir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              LineLength                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SphereOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::IsLineInsideSphere(const CoreUObject::FVector& LineStart, const CoreUObject::FVector& LineDir, float LineLength, const CoreUObject::FVector& SphereOrigin, float SphereRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.IsLineInsideSphere");
        
        UTKMathFunctionLibrary_IsLineInsideSphere_Params params {};
        params.LineStart = LineStart;
        params.LineDir = LineDir;
        params.LineLength = LineLength;
        params.SphereOrigin = SphereOrigin;
        params.SphereRadius = SphereRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.IsEvenNumber
     *         Flags  -> ()
     * Parameters:
     *         float                                              A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::IsEvenNumber(float A)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.IsEvenNumber");
        
        UTKMathFunctionLibrary_IsEvenNumber_Params params {};
        params.A = A;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.GridSnap
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Grid                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::GridSnap(const CoreUObject::FVector& A, float Grid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.GridSnap");
        
        UTKMathFunctionLibrary_GridSnap_Params params {};
        params.A = A;
        params.Grid = Grid;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.GetVelocityAtPoint
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               DrawDebugInfo                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::GetVelocityAtPoint(Engine::UPrimitiveComponent* Target, const CoreUObject::FVector& Point, const BasicTypes::FName& BoneName, bool DrawDebugInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.GetVelocityAtPoint");
        
        UTKMathFunctionLibrary_GetVelocityAtPoint_Params params {};
        params.Target = Target;
        params.Point = Point;
        params.BoneName = BoneName;
        params.DrawDebugInfo = DrawDebugInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ConvertPhysicsLinearVelocity
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Velocity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ESpeedUnit                           SpeedUnit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UTKMathFunctionLibrary::ConvertPhysicsLinearVelocity(const CoreUObject::FVector& Velocity, GroundBranch::ESpeedUnit SpeedUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ConvertPhysicsLinearVelocity");
        
        UTKMathFunctionLibrary_ConvertPhysicsLinearVelocity_Params params {};
        params.Velocity = Velocity;
        params.SpeedUnit = SpeedUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ConvertAnchorToAnchor
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Slate::FAnchors                                    CurrentAnchor                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FMargin                                 Offsets                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         Slate::FAnchors                                    TargetAnchor                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FMargin                                 ConvertedOffsets                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTKMathFunctionLibrary::ConvertAnchorToAnchor(CoreUObject::UObject* WorldContextObject, const Slate::FAnchors& CurrentAnchor, const SlateCore::FMargin& Offsets, const Slate::FAnchors& TargetAnchor, SlateCore::FMargin* ConvertedOffsets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ConvertAnchorToAnchor");
        
        UTKMathFunctionLibrary_ConvertAnchorToAnchor_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CurrentAnchor = CurrentAnchor;
        params.Offsets = Offsets;
        params.TargetAnchor = TargetAnchor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ConvertedOffsets != nullptr)
            *ConvertedOffsets = params.ConvertedOffsets;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointsOnTwoLines
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               closestPointLine1                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               closestPointLine2                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               lineVec1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               lineVec2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::ClosestPointsOnTwoLines(CoreUObject::FVector* closestPointLine1, CoreUObject::FVector* closestPointLine2, const CoreUObject::FVector& LinePoint1, const CoreUObject::FVector& lineVec1, const CoreUObject::FVector& LinePoint2, const CoreUObject::FVector& lineVec2)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointsOnTwoLines");
        
        UTKMathFunctionLibrary_ClosestPointsOnTwoLines_Params params {};
        params.LinePoint1 = LinePoint1;
        params.lineVec1 = lineVec1;
        params.LinePoint2 = LinePoint2;
        params.lineVec2 = lineVec2;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (closestPointLine1 != nullptr)
            *closestPointLine1 = params.closestPointLine1;
        if (closestPointLine2 != nullptr)
            *closestPointLine2 = params.closestPointLine2;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointsOfLineSegments
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Line1Start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Line1End                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Line2Start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Line2End                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint1                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinePoint2                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTKMathFunctionLibrary::ClosestPointsOfLineSegments(const CoreUObject::FVector& Line1Start, const CoreUObject::FVector& Line1End, const CoreUObject::FVector& Line2Start, const CoreUObject::FVector& Line2End, CoreUObject::FVector* LinePoint1, CoreUObject::FVector* LinePoint2)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointsOfLineSegments");
        
        UTKMathFunctionLibrary_ClosestPointsOfLineSegments_Params params {};
        params.Line1Start = Line1Start;
        params.Line1End = Line1End;
        params.Line2Start = Line2Start;
        params.Line2End = Line2End;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LinePoint1 != nullptr)
            *LinePoint1 = params.LinePoint1;
        if (LinePoint2 != nullptr)
            *LinePoint2 = params.LinePoint2;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointOnSphereToLine
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               SphereOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineOrigin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineDir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::ClosestPointOnSphereToLine(const CoreUObject::FVector& SphereOrigin, float SphereRadius, const CoreUObject::FVector& LineOrigin, const CoreUObject::FVector& LineDir)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointOnSphereToLine");
        
        UTKMathFunctionLibrary_ClosestPointOnSphereToLine_Params params {};
        params.SphereOrigin = SphereOrigin;
        params.SphereRadius = SphereRadius;
        params.LineOrigin = LineOrigin;
        params.LineDir = LineDir;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointOnLineSegment
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LineEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UTKMathFunctionLibrary::ClosestPointOnLineSegment(const CoreUObject::FVector& Point, const CoreUObject::FVector& LineStart, const CoreUObject::FVector& LineEnd)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.ClosestPointOnLineSegment");
        
        UTKMathFunctionLibrary_ClosestPointOnLineSegment_Params params {};
        params.Point = Point;
        params.LineStart = LineStart;
        params.LineEnd = LineEnd;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.TKMathFunctionLibrary.AreLineSegmentsCrossing
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               pointA1                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               pointA2                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               pointB1                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               pointB2                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTKMathFunctionLibrary::AreLineSegmentsCrossing(const CoreUObject::FVector& pointA1, const CoreUObject::FVector& pointA2, const CoreUObject::FVector& pointB1, const CoreUObject::FVector& pointB2)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.TKMathFunctionLibrary.AreLineSegmentsCrossing");
        
        UTKMathFunctionLibrary_AreLineSegmentsCrossing_Params params {};
        params.pointA1 = pointA1;
        params.pointA2 = pointA2;
        params.pointB1 = pointB1;
        params.pointB2 = pointB2;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.YourGameGauntletController.StopProfiling
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UYourGameGauntletController::StopProfiling()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.YourGameGauntletController.StopProfiling");
        
        UYourGameGauntletController_StopProfiling_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.YourGameGauntletController.StartTesting
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UYourGameGauntletController::StartTesting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.YourGameGauntletController.StartTesting");
        
        UYourGameGauntletController_StartTesting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestrictionEntryLibrary.RestrictionEntryToJsonString
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBRestrictionEntry                  Entry                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBRestrictionEntryLibrary::RestrictionEntryToJsonString(const GroundBranch::FGBRestrictionEntry& Entry)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestrictionEntryLibrary.RestrictionEntryToJsonString");
        
        UGBRestrictionEntryLibrary_RestrictionEntryToJsonString_Params params {};
        params.Entry = Entry;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestrictionEntryLibrary.RestrictionEntryFromJsonString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                JsonString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBRestrictionEntry                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBRestrictionEntry UGBRestrictionEntryLibrary::RestrictionEntryFromJsonString(const BasicTypes::FString& JsonString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestrictionEntryLibrary.RestrictionEntryFromJsonString");
        
        UGBRestrictionEntryLibrary_RestrictionEntryFromJsonString_Params params {};
        params.JsonString = JsonString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBRestrictionEntryLibrary.RestrictionEntryArrayToJsonString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBRestrictionEntry> Entries                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBRestrictionEntryLibrary::RestrictionEntryArrayToJsonString(BasicTypes::TArray<GroundBranch::FGBRestrictionEntry> Entries)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBRestrictionEntryLibrary.RestrictionEntryArrayToJsonString");
        
        UGBRestrictionEntryLibrary_RestrictionEntryArrayToJsonString_Params params {};
        params.Entries = Entries;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSearchableProp.UpdateVisibility
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSearchableProp::UpdateVisibility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSearchableProp.UpdateVisibility");
        
        AGBSearchableProp_UpdateVisibility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSearchableProp.SetYieldsIntel
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bInYieldsIntel                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSearchableProp::SetYieldsIntel(bool bInYieldsIntel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSearchableProp.SetYieldsIntel");
        
        AGBSearchableProp_SetYieldsIntel_Params params {};
        params.bInYieldsIntel = bInYieldsIntel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSearchableProp.OnRep_IsActive
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSearchableProp::OnRep_IsActive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSearchableProp.OnRep_IsActive");
        
        AGBSearchableProp_OnRep_IsActive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSearchableProp.OnRep_bYieldsIntel
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSearchableProp::OnRep_bYieldsIntel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSearchableProp.OnRep_bYieldsIntel");
        
        AGBSearchableProp_OnRep_bYieldsIntel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSearchableProp.GetYieldsIntel
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBSearchableProp::GetYieldsIntel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSearchableProp.GetYieldsIntel");
        
        AGBSearchableProp_GetYieldsIntel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSearchableProp.GetSearchablePropType
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBIntelSearchType                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBIntelSearchType AGBSearchableProp::GetSearchablePropType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSearchableProp.GetSearchablePropType");
        
        AGBSearchableProp_GetSearchablePropType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSequencerEvent.PlayNextSequence
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSequencerEvent::PlayNextSequence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSequencerEvent.PlayNextSequence");
        
        AGBSequencerEvent_PlayNextSequence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.SetupSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBFirearm*                          RelativeFirearm                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBInvItem*>      OtherAttachments                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutErrorMessage                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBSightComponent::SetupSight(GroundBranch::AGBFirearm* RelativeFirearm, BasicTypes::TArray<GroundBranch::AGBInvItem*> OtherAttachments, BasicTypes::FString* OutErrorMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.SetupSight");
        
        UGBSightComponent_SetupSight_Params params {};
        params.RelativeFirearm = RelativeFirearm;
        params.OtherAttachments = OtherAttachments;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutErrorMessage != nullptr)
            *OutErrorMessage = params.OutErrorMessage;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.SetSceneCaptureComponent
     *         Flags  -> ()
     * Parameters:
     *         Engine::USceneCaptureComponent2D*                  NewSceneCaptureComp                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::SetSceneCaptureComponent(Engine::USceneCaptureComponent2D* NewSceneCaptureComp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.SetSceneCaptureComponent");
        
        UGBSightComponent_SetSceneCaptureComponent_Params params {};
        params.NewSceneCaptureComp = NewSceneCaptureComp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.SetMagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMagnificationLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::SetMagnificationLevel(float NewMagnificationLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.SetMagnificationLevel");
        
        UGBSightComponent_SetMagnificationLevel_Params params {};
        params.NewMagnificationLevel = NewMagnificationLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.ServerSightLineInfoUpdated
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBSightLineInfo                     NewSightLineInfo                                           (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::ServerSightLineInfoUpdated(const GroundBranch::FGBSightLineInfo& NewSightLineInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.ServerSightLineInfoUpdated");
        
        UGBSightComponent_ServerSightLineInfoUpdated_Params params {};
        params.NewSightLineInfo = NewSightLineInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.ServerSetZeroDistance
     *         Flags  -> ()
     * Parameters:
     *         uint16_t                                           NewZeroDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::ServerSetZeroDistance(uint16_t NewZeroDistance)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.ServerSetZeroDistance");
        
        UGBSightComponent_ServerSetZeroDistance_Params params {};
        params.NewZeroDistance = NewZeroDistance;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.ServerSetReticleColourIndex
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewReticleColourIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::ServerSetReticleColourIndex(uint8_t NewReticleColourIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.ServerSetReticleColourIndex");
        
        UGBSightComponent_ServerSetReticleColourIndex_Params params {};
        params.NewReticleColourIndex = NewReticleColourIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.ServerSetReticleBrightnessLevel
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            NewReticleBrightnessLevel                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::ServerSetReticleBrightnessLevel(uint8_t NewReticleBrightnessLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.ServerSetReticleBrightnessLevel");
        
        UGBSightComponent_ServerSetReticleBrightnessLevel_Params params {};
        params.NewReticleBrightnessLevel = NewReticleBrightnessLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.ServerSetMagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMagnificationLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::ServerSetMagnificationLevel(float NewMagnificationLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.ServerSetMagnificationLevel");
        
        UGBSightComponent_ServerSetMagnificationLevel_Params params {};
        params.NewMagnificationLevel = NewMagnificationLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.OnRep_SightLineInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBSightComponent::OnRep_SightLineInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.OnRep_SightLineInfo");
        
        UGBSightComponent_OnRep_SightLineInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.OnRep_ReticleColourIndex
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBSightComponent::OnRep_ReticleColourIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.OnRep_ReticleColourIndex");
        
        UGBSightComponent_OnRep_ReticleColourIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.OnRep_ReticleBrightness
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBSightComponent::OnRep_ReticleBrightness()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.OnRep_ReticleBrightness");
        
        UGBSightComponent_OnRep_ReticleBrightness_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.OnRep_MagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBSightComponent::OnRep_MagnificationLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.OnRep_MagnificationLevel");
        
        UGBSightComponent_OnRep_MagnificationLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.OnEndViewTarget
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBCharacter*                        Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::OnEndViewTarget(Engine::APlayerController* PlayerController, GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.OnEndViewTarget");
        
        UGBSightComponent_OnEndViewTarget_Params params {};
        params.PlayerController = PlayerController;
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetStatKey
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBSightComponent::GetStatKey()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetStatKey");
        
        UGBSightComponent_GetStatKey_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetSightLineRoot
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   ReturnValue                                                (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBSightComponent* UGBSightComponent::GetSightLineRoot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetSightLineRoot");
        
        UGBSightComponent_GetSightLineRoot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetSightLineInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBSightLineInfo                     ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBSightLineInfo UGBSightComponent::GetSightLineInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetSightLineInfo");
        
        UGBSightComponent_GetSightLineInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetSightLineFocus
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBSightComponent::GetSightLineFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetSightLineFocus");
        
        UGBSightComponent_GetSightLineFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetReticleColourIndex
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBSightComponent::GetReticleColourIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetReticleColourIndex");
        
        UGBSightComponent_GetReticleColourIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetPrevSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBSightComponent* UGBSightComponent::GetPrevSight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetPrevSight");
        
        UGBSightComponent_GetPrevSight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetOpticRadius
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetOpticRadius()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetOpticRadius");
        
        UGBSightComponent_GetOpticRadius_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetNextSight
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::UGBSightComponent*                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::UGBSightComponent* UGBSightComponent::GetNextSight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetNextSight");
        
        UGBSightComponent_GetNextSight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetMinMagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetMinMagnificationLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetMinMagnificationLevel");
        
        UGBSightComponent_GetMinMagnificationLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetMaxMagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetMaxMagnificationLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetMaxMagnificationLevel");
        
        UGBSightComponent_GetMaxMagnificationLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetMagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetMagnificationLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetMagnificationLevel");
        
        UGBSightComponent_GetMagnificationLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetLeafSightAngle
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBFirearm*                          RelativeFirearm                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldBoneLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RelativeLocationOffset                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetLeafSightAngle(GroundBranch::AGBFirearm* RelativeFirearm, const CoreUObject::FVector& WorldBoneLocation, const CoreUObject::FVector& RelativeLocationOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetLeafSightAngle");
        
        UGBSightComponent_GetLeafSightAngle_Params params {};
        params.RelativeFirearm = RelativeFirearm;
        params.WorldBoneLocation = WorldBoneLocation;
        params.RelativeLocationOffset = RelativeLocationOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetFOV
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetFOV()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetFOV");
        
        UGBSightComponent_GetFOV_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetFocus
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBSightComponent::GetFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetFocus");
        
        UGBSightComponent_GetFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetDefaultMagnificationLevel
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBSightComponent::GetDefaultMagnificationLevel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetDefaultMagnificationLevel");
        
        UGBSightComponent_GetDefaultMagnificationLevel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetAnimRotOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator UGBSightComponent::GetAnimRotOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetAnimRotOffset");
        
        UGBSightComponent_GetAnimRotOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.GetAnimLocOffset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UGBSightComponent::GetAnimLocOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.GetAnimLocOffset");
        
        UGBSightComponent_GetAnimLocOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSightComponent.AdjustReticleBrightnessLevel
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            dir                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBSightComponent::AdjustReticleBrightnessLevel(int32_t dir)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSightComponent.AdjustReticleBrightnessLevel");
        
        UGBSightComponent_AdjustReticleBrightnessLevel_Params params {};
        params.dir = dir;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.UpdateLatLongAndTimeZone
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::UpdateLatLongAndTimeZone()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.UpdateLatLongAndTimeZone");
        
        AGBSky_UpdateLatLongAndTimeZone_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.UnsetTimeOfDayAlarms
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> TimeOfDayAlarmInfo                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::UnsetTimeOfDayAlarms(BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> TimeOfDayAlarmInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.UnsetTimeOfDayAlarms");
        
        AGBSky_UnsetTimeOfDayAlarms_Params params {};
        params.TimeOfDayAlarmInfo = TimeOfDayAlarmInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.StartCycle
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::StartCycle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.StartCycle");
        
        AGBSky_StartCycle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetYearMonthDay
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetYearMonthDay(int32_t InYear, int32_t InMonth, int32_t InDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetYearMonthDay");
        
        AGBSky_SetYearMonthDay_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetWeatherSystemIsEnabled
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bIsEnabled                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetWeatherSystemIsEnabled(bool bIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetWeatherSystemIsEnabled");
        
        AGBSky_SetWeatherSystemIsEnabled_Params params {};
        params.bIsEnabled = bIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetTimeOfDayFromString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                TimeOfDayString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetTimeOfDayFromString(const BasicTypes::FString& TimeOfDayString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetTimeOfDayFromString");
        
        AGBSky_SetTimeOfDayFromString_Params params {};
        params.TimeOfDayString = TimeOfDayString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetTimeOfDayAlarms
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> TimeOfDayAlarmInfo                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetTimeOfDayAlarms(BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> TimeOfDayAlarmInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetTimeOfDayAlarms");
        
        AGBSky_SetTimeOfDayAlarms_Params params {};
        params.TimeOfDayAlarmInfo = TimeOfDayAlarmInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetSunlightScaling
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewSunlightScaling                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetSunlightScaling(float NewSunlightScaling)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetSunlightScaling");
        
        AGBSky_SetSunlightScaling_Params params {};
        params.NewSunlightScaling = NewSunlightScaling;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetSkylightScalingOverride
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  Type                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetSkylightScalingOverride(const BasicTypes::FName& Type, float Alpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetSkylightScalingOverride");
        
        AGBSky_SetSkylightScalingOverride_Params params {};
        params.Type = Type;
        params.Alpha = Alpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetSkylightScaling
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewSkylightScaling                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetSkylightScaling(float NewSkylightScaling)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetSkylightScaling");
        
        AGBSky_SetSkylightScaling_Params params {};
        params.NewSkylightScaling = NewSkylightScaling;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetMoonlightScaling
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMoonlightScaling                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetMoonlightScaling(float NewMoonlightScaling)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetMoonlightScaling");
        
        AGBSky_SetMoonlightScaling_Params params {};
        params.NewMoonlightScaling = NewMoonlightScaling;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetMissionTimePreset
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    InMissionTimePreset                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetMissionTimePreset(GroundBranch::EMissionTimeLabel InMissionTimePreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetMissionTimePreset");
        
        AGBSky_SetMissionTimePreset_Params params {};
        params.InMissionTimePreset = InMissionTimePreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetLowerHemisphereDesaturateAmount
     *         Flags  -> ()
     * Parameters:
     *         float                                              InDesaturateAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetLowerHemisphereDesaturateAmount(float InDesaturateAmount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetLowerHemisphereDesaturateAmount");
        
        AGBSky_SetLowerHemisphereDesaturateAmount_Params params {};
        params.InDesaturateAmount = InDesaturateAmount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetInitialTimeOfDay
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            NewInitialTimeOfDay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetInitialTimeOfDay(int32_t NewInitialTimeOfDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetInitialTimeOfDay");
        
        AGBSky_SetInitialTimeOfDay_Params params {};
        params.NewInitialTimeOfDay = NewInitialTimeOfDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.SetCurrentWeatherPreset
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::SetCurrentWeatherPreset(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.SetCurrentWeatherPreset");
        
        AGBSky_SetCurrentWeatherPreset_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.ResetTimeOfDayAlarms
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> TimeOfDayAlarmInfo                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::ResetTimeOfDayAlarms(BasicTypes::TArray<GroundBranch::FGBTimeOfDayAlarm> TimeOfDayAlarmInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.ResetTimeOfDayAlarms");
        
        AGBSky_ResetTimeOfDayAlarms_Params params {};
        params.TimeOfDayAlarmInfo = TimeOfDayAlarmInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.OnTimeSpanChangeEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::OnTimeSpanChangeEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.OnTimeSpanChangeEvent");
        
        AGBSky_OnTimeSpanChangeEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.OnTimeChangeEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bIsTransitionalTime                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::OnTimeChangeEvent(bool bIsTransitionalTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.OnTimeChangeEvent");
        
        AGBSky_OnTimeChangeEvent_Params params {};
        params.bIsTransitionalTime = bIsTransitionalTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.OnRep_ReplicatedDateTime
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::OnRep_ReplicatedDateTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.OnRep_ReplicatedDateTime");
        
        AGBSky_OnRep_ReplicatedDateTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.OnRep_CycleStartTime
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::OnRep_CycleStartTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.OnRep_CycleStartTime");
        
        AGBSky_OnRep_CycleStartTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.OnChangedInitialTimeOfDay
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bIsTransitionalTime                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::OnChangedInitialTimeOfDay(bool bIsTransitionalTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.OnChangedInitialTimeOfDay");
        
        AGBSky_OnChangedInitialTimeOfDay_Params params {};
        params.bIsTransitionalTime = bIsTransitionalTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.MapStandardHourToActualHour
     *         Flags  -> ()
     * Parameters:
     *         float                                              StandardHour                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InSunriseTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InSunsetTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::MapStandardHourToActualHour(float StandardHour, float InSunriseTime, float InSunsetTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.MapStandardHourToActualHour");
        
        AGBSky_MapStandardHourToActualHour_Params params {};
        params.StandardHour = StandardHour;
        params.InSunriseTime = InSunriseTime;
        params.InSunsetTime = InSunsetTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.MapActualHourToStandardHour
     *         Flags  -> ()
     * Parameters:
     *         float                                              ActualHour                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InSunriseTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InSunsetTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::MapActualHourToStandardHour(float ActualHour, float InSunriseTime, float InSunsetTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.MapActualHourToStandardHour");
        
        AGBSky_MapActualHourToStandardHour_Params params {};
        params.ActualHour = ActualHour;
        params.InSunriseTime = InSunriseTime;
        params.InSunsetTime = InSunsetTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.IsTimeSpanNearlyEqual
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBBlendedTimeSpan                   Timespan                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DesiredTimeSpan                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AmountNeeded                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBSky::IsTimeSpanNearlyEqual(const GroundBranch::FGBBlendedTimeSpan& Timespan, const BasicTypes::FName& DesiredTimeSpan, float AmountNeeded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.IsTimeSpanNearlyEqual");
        
        AGBSky_IsTimeSpanNearlyEqual_Params params {};
        params.Timespan = Timespan;
        params.DesiredTimeSpan = DesiredTimeSpan;
        params.AmountNeeded = AmountNeeded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetYearMonthDay
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            OutYear                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutMonth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutDay                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::GetYearMonthDay(int32_t* OutYear, int32_t* OutMonth, int32_t* OutDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetYearMonthDay");
        
        AGBSky_GetYearMonthDay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutYear != nullptr)
            *OutYear = params.OutYear;
        if (OutMonth != nullptr)
            *OutMonth = params.OutMonth;
        if (OutDay != nullptr)
            *OutDay = params.OutDay;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetWindAmount
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetWindAmount(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetWindAmount");
        
        AGBSky_GetWindAmount_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetWeatherVisibility
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetWeatherVisibility(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetWeatherVisibility");
        
        AGBSky_GetWeatherVisibility_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetWeatherSystemIsEnabled
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBSky::GetWeatherSystemIsEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetWeatherSystemIsEnabled");
        
        AGBSky_GetWeatherSystemIsEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetWeatherString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBSky::GetWeatherString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetWeatherString");
        
        AGBSky_GetWeatherString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetWeatherPresetsForSeason
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ESeason                              SelectedSeason                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> AGBSky::GetWeatherPresetsForSeason(GroundBranch::ESeason SelectedSeason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetWeatherPresetsForSeason");
        
        AGBSky_GetWeatherPresetsForSeason_Params params {};
        params.SelectedSeason = SelectedSeason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetWeatherPresetProperties
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        SelectedWeatherPreset                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherCategory                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutWeatherType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  OutWeatherDescription                                      (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::GetWeatherPresetProperties(SkyCreatorPlugin::USkyCreatorWeatherPreset* SelectedWeatherPreset, BasicTypes::FName* OutWeatherCategory, BasicTypes::FName* OutWeatherType, BasicTypes::FText* OutWeatherDescription)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetWeatherPresetProperties");
        
        AGBSky_GetWeatherPresetProperties_Params params {};
        params.SelectedWeatherPreset = SelectedWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWeatherCategory != nullptr)
            *OutWeatherCategory = params.OutWeatherCategory;
        if (OutWeatherType != nullptr)
            *OutWeatherType = params.OutWeatherType;
        if (OutWeatherDescription != nullptr)
            *OutWeatherDescription = params.OutWeatherDescription;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetVisibilityName
     *         Flags  -> ()
     * Parameters:
     *         float                                              InVisibility                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBSky::GetVisibilityName(float InVisibility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetVisibilityName");
        
        AGBSky_GetVisibilityName_Params params {};
        params.InVisibility = InVisibility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetTimeSpanTagBlended
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBTimeSpanBlendType                 BlendType                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBBlendedTimeSpan                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBBlendedTimeSpan AGBSky::GetTimeSpanTagBlended(GroundBranch::EGBTimeSpanBlendType BlendType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetTimeSpanTagBlended");
        
        AGBSky_GetTimeSpanTagBlended_Params params {};
        params.BlendType = BlendType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetTimeSpanTag
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBSky::GetTimeSpanTag()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetTimeSpanTag");
        
        AGBSky_GetTimeSpanTag_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetTimeOfDayString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBSky::GetTimeOfDayString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetTimeOfDayString");
        
        AGBSky_GetTimeOfDayString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSunriseAndSunsetTime
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutSunriseTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutSunsetTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NumberOfEvaluationSteps                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::GetSunriseAndSunsetTime(int32_t InYear, int32_t InMonth, int32_t InDay, float* OutSunriseTime, float* OutSunsetTime, int32_t NumberOfEvaluationSteps)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSunriseAndSunsetTime");
        
        AGBSky_GetSunriseAndSunsetTime_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        params.NumberOfEvaluationSteps = NumberOfEvaluationSteps;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSunriseTime != nullptr)
            *OutSunriseTime = params.OutSunriseTime;
        if (OutSunsetTime != nullptr)
            *OutSunsetTime = params.OutSunsetTime;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSunlightScalingFactors
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetSunlightScalingFactors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSunlightScalingFactors");
        
        AGBSky_GetSunlightScalingFactors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSunlightScaling
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetSunlightScaling()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSunlightScaling");
        
        AGBSky_GetSunlightScaling_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSunElevation
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InHours                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMinutes                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InSeconds                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetSunElevation(int32_t InYear, int32_t InMonth, int32_t InDay, int32_t InHours, int32_t InMinutes, int32_t InSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSunElevation");
        
        AGBSky_GetSunElevation_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        params.InHours = InHours;
        params.InMinutes = InMinutes;
        params.InSeconds = InSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSunAndMoonSequence
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NumberOfSteps                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          OutTimes                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          OutSunSequence                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          OutMoonSequence                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         float                                              OutSunriseTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutSunsetTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::GetSunAndMoonSequence(int32_t InYear, int32_t InMonth, int32_t InDay, int32_t NumberOfSteps, BasicTypes::TArray<float>* OutTimes, BasicTypes::TArray<float>* OutSunSequence, BasicTypes::TArray<float>* OutMoonSequence, float* OutSunriseTime, float* OutSunsetTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSunAndMoonSequence");
        
        AGBSky_GetSunAndMoonSequence_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        params.NumberOfSteps = NumberOfSteps;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTimes != nullptr)
            *OutTimes = params.OutTimes;
        if (OutSunSequence != nullptr)
            *OutSunSequence = params.OutSunSequence;
        if (OutMoonSequence != nullptr)
            *OutMoonSequence = params.OutMoonSequence;
        if (OutSunriseTime != nullptr)
            *OutSunriseTime = params.OutSunriseTime;
        if (OutSunsetTime != nullptr)
            *OutSunsetTime = params.OutSunsetTime;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetStandardHour
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bGetTargetTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetStandardHour(bool bGetTargetTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetStandardHour");
        
        AGBSky_GetStandardHour_Params params {};
        params.bGetTargetTime = bGetTargetTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSnowAmount
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetSnowAmount(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSnowAmount");
        
        AGBSky_GetSnowAmount_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSkylightScalingFactors
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetSkylightScalingFactors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSkylightScalingFactors");
        
        AGBSky_GetSkylightScalingFactors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetSkylightScaling
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetSkylightScaling()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetSkylightScaling");
        
        AGBSky_GetSkylightScaling_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetRandomWeatherPresetTypeInCategory
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InCategory                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBSky::GetRandomWeatherPresetTypeInCategory(const BasicTypes::FName& InCategory)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetRandomWeatherPresetTypeInCategory");
        
        AGBSky_GetRandomWeatherPresetTypeInCategory_Params params {};
        params.InCategory = InCategory;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetRandomWeatherPresetCategoryAndType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  OutCategory                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OutType                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::GetRandomWeatherPresetCategoryAndType(BasicTypes::FName* OutCategory, BasicTypes::FName* OutType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetRandomWeatherPresetCategoryAndType");
        
        AGBSky_GetRandomWeatherPresetCategoryAndType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutCategory != nullptr)
            *OutCategory = params.OutCategory;
        if (OutType != nullptr)
            *OutType = params.OutType;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetRainAmount
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetRainAmount(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetRainAmount");
        
        AGBSky_GetRainAmount_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetNorthOffset
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetNorthOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetNorthOffset");
        
        AGBSky_GetNorthOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetNightUnaidedVisibility
     *         Flags  -> ()
     * Parameters:
     *         float                                              InMoonIllumination                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InAmbientIllumination                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetNightUnaidedVisibility(float InMoonIllumination, float InAmbientIllumination, SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetNightUnaidedVisibility");
        
        AGBSky_GetNightUnaidedVisibility_Params params {};
        params.InMoonIllumination = InMoonIllumination;
        params.InAmbientIllumination = InAmbientIllumination;
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetNightAidedVisibility
     *         Flags  -> ()
     * Parameters:
     *         float                                              InMoonIllumination                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InAmbientIllumination                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetNightAidedVisibility(float InMoonIllumination, float InAmbientIllumination, SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetNightAidedVisibility");
        
        AGBSky_GetNightAidedVisibility_Params params {};
        params.InMoonIllumination = InMoonIllumination;
        params.InAmbientIllumination = InAmbientIllumination;
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetMoonlightScalingFactors
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetMoonlightScalingFactors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetMoonlightScalingFactors");
        
        AGBSky_GetMoonlightScalingFactors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetMoonlightScaling
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetMoonlightScaling()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetMoonlightScaling");
        
        AGBSky_GetMoonlightScaling_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetMoonIllumination
     *         Flags  -> ()
     * Parameters:
     *         float                                              InMoonElevation                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InLunarPhase                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetMoonIllumination(float InMoonElevation, float InLunarPhase, SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetMoonIllumination");
        
        AGBSky_GetMoonIllumination_Params params {};
        params.InMoonElevation = InMoonElevation;
        params.InLunarPhase = InLunarPhase;
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetMoonElevation
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InHours                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMinutes                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InSeconds                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetMoonElevation(int32_t InYear, int32_t InMonth, int32_t InDay, int32_t InHours, int32_t InMinutes, int32_t InSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetMoonElevation");
        
        AGBSky_GetMoonElevation_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        params.InHours = InHours;
        params.InMinutes = InMinutes;
        params.InSeconds = InSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetMissionTimePreset
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EMissionTimeLabel                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EMissionTimeLabel AGBSky::GetMissionTimePreset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetMissionTimePreset");
        
        AGBSky_GetMissionTimePreset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetMinLightLevelScale
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetMinLightLevelScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetMinLightLevelScale");
        
        AGBSky_GetMinLightLevelScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetLunarPhaseName
     *         Flags  -> ()
     * Parameters:
     *         float                                              InPhase                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBSky::GetLunarPhaseName(float InPhase)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetLunarPhaseName");
        
        AGBSky_GetLunarPhaseName_Params params {};
        params.InPhase = InPhase;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetLunarPhaseAreaForPhase
     *         Flags  -> ()
     * Parameters:
     *         float                                              InPhase                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetLunarPhaseAreaForPhase(float InPhase)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetLunarPhaseAreaForPhase");
        
        AGBSky_GetLunarPhaseAreaForPhase_Params params {};
        params.InPhase = InPhase;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetLunarPhaseArea
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetLunarPhaseArea(int32_t InYear, int32_t InMonth, int32_t InDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetLunarPhaseArea");
        
        AGBSky_GetLunarPhaseArea_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetLunarPhase
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetLunarPhase(int32_t InYear, int32_t InMonth, int32_t InDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetLunarPhase");
        
        AGBSky_GetLunarPhase_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetInitialTimeOfDay
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBSky::GetInitialTimeOfDay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetInitialTimeOfDay");
        
        AGBSky_GetInitialTimeOfDay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetHoursMinutesSeconds
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            OutHours                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutMinutes                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutSeconds                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::GetHoursMinutesSeconds(int32_t* OutHours, int32_t* OutMinutes, int32_t* OutSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetHoursMinutesSeconds");
        
        AGBSky_GetHoursMinutesSeconds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHours != nullptr)
            *OutHours = params.OutHours;
        if (OutMinutes != nullptr)
            *OutMinutes = params.OutMinutes;
        if (OutSeconds != nullptr)
            *OutSeconds = params.OutSeconds;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetHour
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bGetTargetTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetHour(bool bGetTargetTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetHour");
        
        AGBSky_GetHour_Params params {};
        params.bGetTargetTime = bGetTargetTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetGroundCover
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGroundCoverType                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGroundCoverType AGBSky::GetGroundCover(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetGroundCover");
        
        AGBSky_GetGroundCover_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetFogAmount
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetFogAmount(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetFogAmount");
        
        AGBSky_GetFogAmount_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetDSTOnDate
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InYear                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMonth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InDay                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBSky::GetDSTOnDate(int32_t InYear, int32_t InMonth, int32_t InDay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetDSTOnDate");
        
        AGBSky_GetDSTOnDate_Params params {};
        params.InYear = InYear;
        params.InMonth = InMonth;
        params.InDay = InDay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetCurrentWeatherPreset
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SkyCreatorPlugin::USkyCreatorWeatherPreset* AGBSky::GetCurrentWeatherPreset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetCurrentWeatherPreset");
        
        AGBSky_GetCurrentWeatherPreset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetCurrentSunlightStrength
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetCurrentSunlightStrength()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetCurrentSunlightStrength");
        
        AGBSky_GetCurrentSunlightStrength_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetCurrentSeason
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::ESeason                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::ESeason AGBSky::GetCurrentSeason()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetCurrentSeason");
        
        AGBSky_GetCurrentSeason_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetCurrentNVGMultiplier
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetCurrentNVGMultiplier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetCurrentNVGMultiplier");
        
        AGBSky_GetCurrentNVGMultiplier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetCurrentMoonlightStrength
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetCurrentMoonlightStrength()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetCurrentMoonlightStrength");
        
        AGBSky_GetCurrentMoonlightStrength_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetCloudCover
     *         Flags  -> ()
     * Parameters:
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetCloudCover(SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetCloudCover");
        
        AGBSky_GetCloudCover_Params params {};
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetAmbientNightIllumination
     *         Flags  -> ()
     * Parameters:
     *         float                                              InMoonElevation                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InLunarPhase                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SkyCreatorPlugin::USkyCreatorWeatherPreset*        InWeatherPreset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBSky::GetAmbientNightIllumination(float InMoonElevation, float InLunarPhase, SkyCreatorPlugin::USkyCreatorWeatherPreset* InWeatherPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetAmbientNightIllumination");
        
        AGBSky_GetAmbientNightIllumination_Params params {};
        params.InMoonElevation = InMoonElevation;
        params.InLunarPhase = InLunarPhase;
        params.InWeatherPreset = InWeatherPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.GetAllWeatherPresets
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bAllSeasons                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::ESeason                              SelectedSeason                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SkyCreatorPlugin::USkyCreatorWeatherPreset*> AGBSky::GetAllWeatherPresets(bool bAllSeasons, GroundBranch::ESeason SelectedSeason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.GetAllWeatherPresets");
        
        AGBSky_GetAllWeatherPresets_Params params {};
        params.bAllSeasons = bAllSeasons;
        params.SelectedSeason = SelectedSeason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.EnsureInit
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::EnsureInit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.EnsureInit");
        
        AGBSky_EnsureInit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.EndCycle
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::EndCycle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.EndCycle");
        
        AGBSky_EndCycle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.DebugPrintAlarmTimes
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBSky::DebugPrintAlarmTimes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.DebugPrintAlarmTimes");
        
        AGBSky_DebugPrintAlarmTimes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSky.AddOrUpdateBlendable
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TScriptInterface<Engine::IBlendableInterface> InBlendableObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
     *         float                                              InWeight                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSky::AddOrUpdateBlendable(const BasicTypes::TScriptInterface<Engine::IBlendableInterface>& InBlendableObject, float InWeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSky.AddOrUpdateBlendable");
        
        AGBSky_AddOrUpdateBlendable_Params params {};
        params.InBlendableObject = InBlendableObject;
        params.InWeight = InWeight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSmartTriggerVolumeBase.ServerPawnLeavingVolume
     *         Flags  -> ()
     * Parameters:
     *         Engine::APawn*                                     OtherPawn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSmartTriggerVolumeBase::ServerPawnLeavingVolume(Engine::APawn* OtherPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSmartTriggerVolumeBase.ServerPawnLeavingVolume");
        
        AGBSmartTriggerVolumeBase_ServerPawnLeavingVolume_Params params {};
        params.OtherPawn = OtherPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSmartTriggerVolumeBase.ServerPawnEnteredVolume
     *         Flags  -> ()
     * Parameters:
     *         Engine::APawn*                                     OtherPawn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSmartTriggerVolumeBase::ServerPawnEnteredVolume(Engine::APawn* OtherPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSmartTriggerVolumeBase.ServerPawnEnteredVolume");
        
        AGBSmartTriggerVolumeBase_ServerPawnEnteredVolume_Params params {};
        params.OtherPawn = OtherPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSmartTriggerVolumeBase.LocalPawnLeavingVolume
     *         Flags  -> ()
     * Parameters:
     *         Engine::APawn*                                     OtherPawn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSmartTriggerVolumeBase::LocalPawnLeavingVolume(Engine::APawn* OtherPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSmartTriggerVolumeBase.LocalPawnLeavingVolume");
        
        AGBSmartTriggerVolumeBase_LocalPawnLeavingVolume_Params params {};
        params.OtherPawn = OtherPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSmartTriggerVolumeBase.LocalPawnEnteredVolume
     *         Flags  -> ()
     * Parameters:
     *         Engine::APawn*                                     OtherPawn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSmartTriggerVolumeBase::LocalPawnEnteredVolume(Engine::APawn* OtherPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSmartTriggerVolumeBase.LocalPawnEnteredVolume");
        
        AGBSmartTriggerVolumeBase_LocalPawnEnteredVolume_Params params {};
        params.OtherPawn = OtherPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBSpatialAudioVolume.OnPlayerReadyRoomStatusChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBPlayerState*                      GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBSpatialAudioVolume::OnPlayerReadyRoomStatusChanged(GroundBranch::AGBPlayerState* GBPlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBSpatialAudioVolume.OnPlayerReadyRoomStatusChanged");
        
        AGBSpatialAudioVolume_OnPlayerReadyRoomStatusChanged_Params params {};
        params.GBPlayerState = GBPlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.UseRound
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAmmunitionFeedComponent::UseRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.UseRound");
        
        UGBAmmunitionFeedComponent_UseRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.ShouldMagicallyCreateAmmo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAmmunitionFeedComponent::ShouldMagicallyCreateAmmo(GroundBranch::AGBCharacter* Character)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.ShouldMagicallyCreateAmmo");
        
        UGBAmmunitionFeedComponent_ShouldMagicallyCreateAmmo_Params params {};
        params.Character = Character;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.SetCurrentAmmoId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       NewCurrentAmmoId                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAmmunitionFeedComponent::SetCurrentAmmoId(const CoreUObject::FPrimaryAssetId& NewCurrentAmmoId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.SetCurrentAmmoId");
        
        UGBAmmunitionFeedComponent_SetCurrentAmmoId_Params params {};
        params.NewCurrentAmmoId = NewCurrentAmmoId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.IsEmpty
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAmmunitionFeedComponent::IsEmpty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.IsEmpty");
        
        UGBAmmunitionFeedComponent_IsEmpty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.GetTotalAvailableCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGBAmmunitionFeedComponent::GetTotalAvailableCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.GetTotalAvailableCount");
        
        UGBAmmunitionFeedComponent_GetTotalAvailableCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.GetCurrentAmmoId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FPrimaryAssetId UGBAmmunitionFeedComponent::GetCurrentAmmoId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.GetCurrentAmmoId");
        
        UGBAmmunitionFeedComponent_GetCurrentAmmoId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.GetBulletProjectileClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBBulletProjectile*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBBulletProjectile* UGBAmmunitionFeedComponent::GetBulletProjectileClass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.GetBulletProjectileClass");
        
        UGBAmmunitionFeedComponent_GetBulletProjectileClass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.Fill
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBAmmunitionFeedComponent::Fill()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.Fill");
        
        UGBAmmunitionFeedComponent_Fill_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.EncodeKit
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         ItemAsJson                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAmmunitionFeedComponent::EncodeKit(VaRest::UVaRestJsonObject* ItemAsJson)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.EncodeKit");
        
        UGBAmmunitionFeedComponent_EncodeKit_Params params {};
        params.ItemAsJson = ItemAsJson;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAmmunitionFeedComponent.DecodeKit
     *         Flags  -> ()
     * Parameters:
     *         VaRest::UVaRestJsonObject*                         ItemAsJson                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBAmmunitionFeedComponent::DecodeKit(VaRest::UVaRestJsonObject* ItemAsJson)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAmmunitionFeedComponent.DecodeKit");
        
        UGBAmmunitionFeedComponent_DecodeKit_Params params {};
        params.ItemAsJson = ItemAsJson;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimFunctionLibrary.TransformToBoneSpace
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAnimFunctionLibrary::TransformToBoneSpace(Engine::UAnimInstance* Target, const BasicTypes::FName& BoneName, const CoreUObject::FVector& position, const CoreUObject::FRotator& Rotation, CoreUObject::FVector* OutPosition, CoreUObject::FRotator* OutRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimFunctionLibrary.TransformToBoneSpace");
        
        UGBAnimFunctionLibrary_TransformToBoneSpace_Params params {};
        params.Target = Target;
        params.BoneName = BoneName;
        params.position = position;
        params.Rotation = Rotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPosition != nullptr)
            *OutPosition = params.OutPosition;
        if (OutRotation != nullptr)
            *OutRotation = params.OutRotation;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimFunctionLibrary.TransformFromBoneSpace
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimInstance*                             Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBAnimFunctionLibrary::TransformFromBoneSpace(Engine::UAnimInstance* Target, const BasicTypes::FName& BoneName, const CoreUObject::FVector& position, const CoreUObject::FRotator& Rotation, CoreUObject::FVector* OutPosition, CoreUObject::FRotator* OutRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimFunctionLibrary.TransformFromBoneSpace");
        
        UGBAnimFunctionLibrary_TransformFromBoneSpace_Params params {};
        params.Target = Target;
        params.BoneName = BoneName;
        params.position = position;
        params.Rotation = Rotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPosition != nullptr)
            *OutPosition = params.OutPosition;
        if (OutRotation != nullptr)
            *OutRotation = params.OutRotation;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimFunctionLibrary.GetSequenceLength
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimSequenceBase*                         TargetSeq                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBAnimFunctionLibrary::GetSequenceLength(Engine::UAnimSequenceBase* TargetSeq)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimFunctionLibrary.GetSequenceLength");
        
        UGBAnimFunctionLibrary_GetSequenceLength_Params params {};
        params.TargetSeq = TargetSeq;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimFunctionLibrary.GetRateForPlayTime
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimSequenceBase*                         TargetSeq                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PlayTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBAnimFunctionLibrary::GetRateForPlayTime(Engine::UAnimSequenceBase* TargetSeq, float PlayTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimFunctionLibrary.GetRateForPlayTime");
        
        UGBAnimFunctionLibrary_GetRateForPlayTime_Params params {};
        params.TargetSeq = TargetSeq;
        params.PlayTime = PlayTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimFunctionLibrary.GetBoneTransformAtTime
     *         Flags  -> ()
     * Parameters:
     *         Engine::UAnimSequence*                             AnimSequence                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AnimTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUseRawDataOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UGBAnimFunctionLibrary::GetBoneTransformAtTime(Engine::UAnimSequence* AnimSequence, float AnimTime, const BasicTypes::FName& BoneName, bool bUseRawDataOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimFunctionLibrary.GetBoneTransformAtTime");
        
        UGBAnimFunctionLibrary_GetBoneTransformAtTime_Params params {};
        params.AnimSequence = AnimSequence;
        params.AnimTime = AnimTime;
        params.BoneName = BoneName;
        params.bUseRawDataOnly = bUseRawDataOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimFunctionLibrary.FindPositionFromDistanceCurve
     *         Flags  -> ()
     * Parameters:
     *         float                                              Distance                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAnimSequenceBase*                         InAnimSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBAnimFunctionLibrary::FindPositionFromDistanceCurve(float Distance, Engine::UAnimSequenceBase* InAnimSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimFunctionLibrary.FindPositionFromDistanceCurve");
        
        UGBAnimFunctionLibrary_FindPositionFromDistanceCurve_Params params {};
        params.Distance = Distance;
        params.InAnimSequence = InAnimSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.WorldIsReadyForLocalPlayer
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::WorldIsReadyForLocalPlayer(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.WorldIsReadyForLocalPlayer");
        
        UGBGameplayStatics_WorldIsReadyForLocalPlayer_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.WaitForWorldToBeReadyForLocalPlayer
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::WaitForWorldToBeReadyForLocalPlayer(CoreUObject::UObject* WorldContextObject, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.WaitForWorldToBeReadyForLocalPlayer");
        
        UGBGameplayStatics_WaitForWorldToBeReadyForLocalPlayer_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.TeleportControlledPawn
     *         Flags  -> ()
     * Parameters:
     *         Engine::APawn*                                     TargetPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               TargetLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              TargetRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::TeleportControlledPawn(Engine::APawn* TargetPawn, const CoreUObject::FVector& TargetLocation, const CoreUObject::FRotator& TargetRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.TeleportControlledPawn");
        
        UGBGameplayStatics_TeleportControlledPawn_Params params {};
        params.TargetPawn = TargetPawn;
        params.TargetLocation = TargetLocation;
        params.TargetRotation = TargetRotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.SphereOverlapDamageableComponentsSorted
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::EObjectTypeQuery>       ObjectTypes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::UPrimitiveComponent*>   OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::SphereOverlapDamageableComponentsSorted(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Origin, float Radius, BasicTypes::TArray<Engine::AActor*> IgnoreActors, BasicTypes::TArray<Engine::EObjectTypeQuery> ObjectTypes, BasicTypes::TArray<Engine::UPrimitiveComponent*>* OutComponents)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.SphereOverlapDamageableComponentsSorted");
        
        UGBGameplayStatics_SphereOverlapDamageableComponentsSorted_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Origin = Origin;
        params.Radius = Radius;
        params.IgnoreActors = IgnoreActors;
        params.ObjectTypes = ObjectTypes;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutComponents != nullptr)
            *OutComponents = params.OutComponents;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.SetReplicatedAlphaValues
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FReplicatedAlpha                     ReplicatedAlpha                                            (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              CurrentAlpha                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TargetAlpha                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::SetReplicatedAlphaValues(CoreUObject::UObject* WorldContextObject, GroundBranch::FReplicatedAlpha* ReplicatedAlpha, float CurrentAlpha, float TargetAlpha)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.SetReplicatedAlphaValues");
        
        UGBGameplayStatics_SetReplicatedAlphaValues_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CurrentAlpha = CurrentAlpha;
        params.TargetAlpha = TargetAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ReplicatedAlpha != nullptr)
            *ReplicatedAlpha = params.ReplicatedAlpha;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ResetEncompassedActors
     *         Flags  -> ()
     * Parameters:
     *         Engine::AVolume*                                   Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::ResetEncompassedActors(Engine::AVolume* Volume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ResetEncompassedActors");
        
        UGBGameplayStatics_ResetEncompassedActors_Params params {};
        params.Volume = Volume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ResetActorsExceptSpecifiedClasses
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::TSoftClassPtr<CoreUObject::UObject>> ClassesToExclude                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::ResetActorsExceptSpecifiedClasses(CoreUObject::UObject* WorldContextObject, BasicTypes::TArray<BasicTypes::TSoftClassPtr<CoreUObject::UObject>> ClassesToExclude)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ResetActorsExceptSpecifiedClasses");
        
        UGBGameplayStatics_ResetActorsExceptSpecifiedClasses_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClassesToExclude = ClassesToExclude;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ResetActors
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::ResetActors(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ResetActors");
        
        UGBGameplayStatics_ResetActors_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ResetActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::ResetActor(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ResetActor");
        
        UGBGameplayStatics_ResetActor_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.NukeActor
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::NukeActor(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.NukeActor");
        
        UGBGameplayStatics_NukeActor_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.LineTraceRecursiveForObjects
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               TraceStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               TraceEnd                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::EObjectTypeQuery>       ObjectTypes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::ECollisionChannel>      BlockedCollisionChannels                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bTraceComplex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                ActorsToIgnore                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               bDebug                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DebugDrawTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::LineTraceRecursiveForObjects(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& TraceStart, const CoreUObject::FVector& TraceEnd, BasicTypes::TArray<Engine::EObjectTypeQuery> ObjectTypes, BasicTypes::TArray<Engine::ECollisionChannel> BlockedCollisionChannels, bool bTraceComplex, BasicTypes::TArray<Engine::AActor*> ActorsToIgnore, Engine::FHitResult* OutHit, bool bDebug, float DebugDrawTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.LineTraceRecursiveForObjects");
        
        UGBGameplayStatics_LineTraceRecursiveForObjects_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.TraceStart = TraceStart;
        params.TraceEnd = TraceEnd;
        params.ObjectTypes = ObjectTypes;
        params.BlockedCollisionChannels = BlockedCollisionChannels;
        params.bTraceComplex = bTraceComplex;
        params.ActorsToIgnore = ActorsToIgnore;
        params.bDebug = bDebug;
        params.DebugDrawTime = DebugDrawTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHit != nullptr)
            *OutHit = params.OutHit;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.IsSpawnLocationValid
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CapsuleHalfHeight                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CapsuleRadius                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::IsSpawnLocationValid(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& SpawnLocation, float CapsuleHalfHeight, float CapsuleRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.IsSpawnLocationValid");
        
        UGBGameplayStatics_IsSpawnLocationValid_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SpawnLocation = SpawnLocation;
        params.CapsuleHalfHeight = CapsuleHalfHeight;
        params.CapsuleRadius = CapsuleRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.IsNetReady
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::IsNetReady(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.IsNetReady");
        
        UGBGameplayStatics_IsNetReady_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.IsLocallyViewed
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Viewed                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::IsLocallyViewed(Engine::AActor* Viewed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.IsLocallyViewed");
        
        UGBGameplayStatics_IsLocallyViewed_Params params {};
        params.Viewed = Viewed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.IsDevBuild
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::IsDevBuild()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.IsDevBuild");
        
        UGBGameplayStatics_IsDevBuild_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GrabAllOptions
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutKeys                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutValues                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::GrabAllOptions(const BasicTypes::FString& Options, BasicTypes::TArray<BasicTypes::FString>* OutKeys, BasicTypes::TArray<BasicTypes::FString>* OutValues)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GrabAllOptions");
        
        UGBGameplayStatics_GrabAllOptions_Params params {};
        params.Options = Options;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutKeys != nullptr)
            *OutKeys = params.OutKeys;
        if (OutValues != nullptr)
            *OutValues = params.OutValues;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetWaterLevelAtPosition
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               position                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ECollisionChannel                          CollisionChannel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBGameplayStatics::GetWaterLevelAtPosition(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& position, Engine::ECollisionChannel CollisionChannel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetWaterLevelAtPosition");
        
        UGBGameplayStatics_GetWaterLevelAtPosition_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.position = position;
        params.CollisionChannel = CollisionChannel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetValidatedSpawnLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CapsuleHalfHeight                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CapsuleRadius                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShowDebug                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutValidatedSpawnLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::GetValidatedSpawnLocation(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& SpawnLocation, float CapsuleHalfHeight, float CapsuleRadius, bool bShowDebug, CoreUObject::FVector* OutValidatedSpawnLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetValidatedSpawnLocation");
        
        UGBGameplayStatics_GetValidatedSpawnLocation_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SpawnLocation = SpawnLocation;
        params.CapsuleHalfHeight = CapsuleHalfHeight;
        params.CapsuleRadius = CapsuleRadius;
        params.bShowDebug = bShowDebug;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutValidatedSpawnLocation != nullptr)
            *OutValidatedSpawnLocation = params.OutValidatedSpawnLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetUniqueIdAsString
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              PlayerState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGBGameplayStatics::GetUniqueIdAsString(Engine::APlayerState* PlayerState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetUniqueIdAsString");
        
        UGBGameplayStatics_GetUniqueIdAsString_Params params {};
        params.PlayerState = PlayerState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetSpatialAudioVolumeTag
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               position                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UGBGameplayStatics::GetSpatialAudioVolumeTag(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& position)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetSpatialAudioVolumeTag");
        
        UGBGameplayStatics_GetSpatialAudioVolumeTag_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.position = position;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetReplicatedAlphaValues
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FReplicatedAlpha                     ReplicatedAlpha                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              CurrentAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TargetAlpha                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Timestamp                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBGameplayStatics::GetReplicatedAlphaValues(const GroundBranch::FReplicatedAlpha& ReplicatedAlpha, float* CurrentAlpha, float* TargetAlpha, float* Timestamp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetReplicatedAlphaValues");
        
        UGBGameplayStatics_GetReplicatedAlphaValues_Params params {};
        params.ReplicatedAlpha = ReplicatedAlpha;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (CurrentAlpha != nullptr)
            *CurrentAlpha = params.CurrentAlpha;
        if (TargetAlpha != nullptr)
            *TargetAlpha = params.TargetAlpha;
        if (Timestamp != nullptr)
            *Timestamp = params.Timestamp;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetPredictionTime
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBGameplayStatics::GetPredictionTime(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetPredictionTime");
        
        UGBGameplayStatics_GetPredictionTime_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetPlayerStateFromPlayerID
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayerId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerState* UGBGameplayStatics::GetPlayerStateFromPlayerID(CoreUObject::UObject* WorldContextObject, int32_t PlayerId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetPlayerStateFromPlayerID");
        
        UGBGameplayStatics_GetPlayerStateFromPlayerID_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PlayerId = PlayerId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.GetLocallyViewingPlayerController
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    Viewed                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerController*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerController* UGBGameplayStatics::GetLocallyViewingPlayerController(Engine::AActor* Viewed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.GetLocallyViewingPlayerController");
        
        UGBGameplayStatics_GetLocallyViewingPlayerController_Params params {};
        params.Viewed = Viewed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.FindPlayerStateByPlayerNameOrUniqueId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                PlayerNameOrUniqueId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerState*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerState* UGBGameplayStatics::FindPlayerStateByPlayerNameOrUniqueId(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& PlayerNameOrUniqueId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.FindPlayerStateByPlayerNameOrUniqueId");
        
        UGBGameplayStatics_FindPlayerStateByPlayerNameOrUniqueId_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PlayerNameOrUniqueId = PlayerNameOrUniqueId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.FindPlayerControllerByPlayerNameOrUniqueId
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                PlayerNameOrUniqueId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBPlayerController*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBPlayerController* UGBGameplayStatics::FindPlayerControllerByPlayerNameOrUniqueId(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& PlayerNameOrUniqueId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.FindPlayerControllerByPlayerNameOrUniqueId");
        
        UGBGameplayStatics_FindPlayerControllerByPlayerNameOrUniqueId_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PlayerNameOrUniqueId = PlayerNameOrUniqueId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.EncompassesPoint
     *         Flags  -> ()
     * Parameters:
     *         Engine::AVolume*                                   Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutDistanceToPoint                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::EncompassesPoint(Engine::AVolume* Volume, const CoreUObject::FVector& Point, float SphereRadius, float* OutDistanceToPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.EncompassesPoint");
        
        UGBGameplayStatics_EncompassesPoint_Params params {};
        params.Volume = Volume;
        params.Point = Point;
        params.SphereRadius = SphereRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutDistanceToPoint != nullptr)
            *OutDistanceToPoint = params.OutDistanceToPoint;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ConeOverlapDamageableComponentsSorted
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               dir                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ConeHalfAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ClipDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::EObjectTypeQuery>       ObjectTypes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::UPrimitiveComponent*>   OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         Engine::EDrawDebugTrace                            DrawDebugType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DrawTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::ConeOverlapDamageableComponentsSorted(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Origin, const CoreUObject::FVector& dir, float ConeHalfAngle, float Radius, float ClipDistance, BasicTypes::TArray<Engine::AActor*> IgnoreActors, BasicTypes::TArray<Engine::EObjectTypeQuery> ObjectTypes, BasicTypes::TArray<Engine::UPrimitiveComponent*>* OutComponents, Engine::EDrawDebugTrace DrawDebugType, float DrawTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ConeOverlapDamageableComponentsSorted");
        
        UGBGameplayStatics_ConeOverlapDamageableComponentsSorted_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Origin = Origin;
        params.dir = dir;
        params.ConeHalfAngle = ConeHalfAngle;
        params.Radius = Radius;
        params.ClipDistance = ClipDistance;
        params.IgnoreActors = IgnoreActors;
        params.ObjectTypes = ObjectTypes;
        params.DrawDebugType = DrawDebugType;
        params.DrawTime = DrawTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutComponents != nullptr)
            *OutComponents = params.OutComponents;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ConeOverlapActors
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               dir                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ConeHalfAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ClipDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::EObjectTypeQuery>       ObjectTypes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                OutActors                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::EDrawDebugTrace                            DrawDebugType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DrawTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::ConeOverlapActors(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Origin, const CoreUObject::FVector& dir, float ConeHalfAngle, float Radius, float ClipDistance, BasicTypes::TArray<Engine::AActor*> IgnoreActors, BasicTypes::TArray<Engine::EObjectTypeQuery> ObjectTypes, BasicTypes::TArray<Engine::AActor*>* OutActors, Engine::EDrawDebugTrace DrawDebugType, float DrawTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ConeOverlapActors");
        
        UGBGameplayStatics_ConeOverlapActors_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Origin = Origin;
        params.dir = dir;
        params.ConeHalfAngle = ConeHalfAngle;
        params.Radius = Radius;
        params.ClipDistance = ClipDistance;
        params.IgnoreActors = IgnoreActors;
        params.ObjectTypes = ObjectTypes;
        params.DrawDebugType = DrawDebugType;
        params.DrawTime = DrawTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActors != nullptr)
            *OutActors = params.OutActors;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.CanDamageStaticMesh
     *         Flags  -> ()
     * Parameters:
     *         Engine::UStaticMeshComponent*                      StaticComp                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MaxTraceChecks                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::ECollisionChannel                          TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<PhysicsCore::EPhysicalSurface>  SurfaceTypesToIgnore                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::CanDamageStaticMesh(Engine::UStaticMeshComponent* StaticComp, const CoreUObject::FVector& DamageOrigin, int32_t MaxTraceChecks, BasicTypes::TArray<Engine::AActor*> IgnoreActors, Engine::ECollisionChannel TraceChannel, BasicTypes::TArray<PhysicsCore::EPhysicalSurface> SurfaceTypesToIgnore, Engine::FHitResult* OutHit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.CanDamageStaticMesh");
        
        UGBGameplayStatics_CanDamageStaticMesh_Params params {};
        params.StaticComp = StaticComp;
        params.DamageOrigin = DamageOrigin;
        params.MaxTraceChecks = MaxTraceChecks;
        params.IgnoreActors = IgnoreActors;
        params.TraceChannel = TraceChannel;
        params.SurfaceTypesToIgnore = SurfaceTypesToIgnore;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHit != nullptr)
            *OutHit = params.OutHit;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.CanDamageSkeletalMesh
     *         Flags  -> ()
     * Parameters:
     *         Engine::USkeletalMeshComponent*                    SkeletalComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              Bones                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::ECollisionChannel                          TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<PhysicsCore::EPhysicalSurface>  SurfaceTypesToIgnore                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayStatics::CanDamageSkeletalMesh(Engine::USkeletalMeshComponent* SkeletalComp, const CoreUObject::FVector& DamageOrigin, BasicTypes::TArray<BasicTypes::FName> Bones, BasicTypes::TArray<Engine::AActor*> IgnoreActors, Engine::ECollisionChannel TraceChannel, BasicTypes::TArray<PhysicsCore::EPhysicalSurface> SurfaceTypesToIgnore, Engine::FHitResult* OutHit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.CanDamageSkeletalMesh");
        
        UGBGameplayStatics_CanDamageSkeletalMesh_Params params {};
        params.SkeletalComp = SkeletalComp;
        params.DamageOrigin = DamageOrigin;
        params.Bones = Bones;
        params.IgnoreActors = IgnoreActors;
        params.TraceChannel = TraceChannel;
        params.SurfaceTypesToIgnore = SurfaceTypesToIgnore;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHit != nullptr)
            *OutHit = params.OutHit;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayStatics.ApplyRadialDamageDirect
     *         Flags  -> ()
     * Parameters:
     *         Engine::AActor*                                    DamagedActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxDamage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MinDamage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MinDamageRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxDamageRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DamageFalloff                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::FHitResult>             HitResults                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         Engine::AController*                               EventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UDamageType*                               DamageTypeClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGBGameplayStatics::ApplyRadialDamageDirect(Engine::AActor* DamagedActor, float MaxDamage, float MinDamage, float MinDamageRadius, float MaxDamageRadius, float DamageFalloff, const CoreUObject::FVector& Origin, BasicTypes::TArray<Engine::FHitResult> HitResults, Engine::AController* EventInstigator, Engine::AActor* DamageCauser, Engine::UDamageType* DamageTypeClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayStatics.ApplyRadialDamageDirect");
        
        UGBGameplayStatics_ApplyRadialDamageDirect_Params params {};
        params.DamagedActor = DamagedActor;
        params.MaxDamage = MaxDamage;
        params.MinDamage = MinDamage;
        params.MinDamageRadius = MinDamageRadius;
        params.MaxDamageRadius = MaxDamageRadius;
        params.DamageFalloff = DamageFalloff;
        params.Origin = Origin;
        params.HitResults = HitResults;
        params.EventInstigator = EventInstigator;
        params.DamageCauser = DamageCauser;
        params.DamageTypeClass = DamageTypeClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameSession.UpdateServerDetailsTimer
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameSession::UpdateServerDetailsTimer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameSession.UpdateServerDetailsTimer");
        
        AGBGameSession_UpdateServerDetailsTimer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameSession.UpdateServerDetails
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameSession::UpdateServerDetails()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameSession.UpdateServerDetails");
        
        AGBGameSession_UpdateServerDetails_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameSession.UpdatePlayerAndModList
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameSession::UpdatePlayerAndModList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameSession.UpdatePlayerAndModList");
        
        AGBGameSession_UpdatePlayerAndModList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameSession.MutePlayer
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameSession::MutePlayer(Engine::APlayerState* Player)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameSession.MutePlayer");
        
        AGBGameSession_MutePlayer_Params params {};
        params.Player = Player;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.UsesReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::UsesReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.UsesReadyRoom");
        
        AGBGameState_UsesReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.UpdateMatchStatsAfterRoundEnd
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::UpdateMatchStatsAfterRoundEnd()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.UpdateMatchStatsAfterRoundEnd");
        
        AGBGameState_UpdateMatchStatsAfterRoundEnd_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.UpdatedTeamAttitudes
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::UpdatedTeamAttitudes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.UpdatedTeamAttitudes");
        
        AGBGameState_UpdatedTeamAttitudes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.UpdatedGameStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::UpdatedGameStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.UpdatedGameStats");
        
        AGBGameState_UpdatedGameStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.UpdatedGameRules
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::UpdatedGameRules()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.UpdatedGameRules");
        
        AGBGameState_UpdatedGameRules_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SyncTeamScoreLists
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::SyncTeamScoreLists()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SyncTeamScoreLists");
        
        AGBGameState_SyncTeamScoreLists_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetWatchMode
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EWatchMode                           InWatchMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetWatchMode(GroundBranch::EWatchMode InWatchMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetWatchMode");
        
        AGBGameState_SetWatchMode_Params params {};
        params.InWatchMode = InWatchMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetWatchConfig
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            InWatchConfig                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetWatchConfig(uint8_t InWatchConfig)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetWatchConfig");
        
        AGBGameState_SetWatchConfig_Params params {};
        params.InWatchConfig = InWatchConfig;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetVolunteersAllowed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewVolunteersAllowed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetVolunteersAllowed(bool bNewVolunteersAllowed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetVolunteersAllowed");
        
        AGBGameState_SetVolunteersAllowed_Params params {};
        params.bNewVolunteersAllowed = bNewVolunteersAllowed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetTeamAttitude
     *         Flags  -> ()
     * Parameters:
     *         AIModule::FGenericTeamId                           Team                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FGenericTeamId                           OtherTeam                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::ETeamAttitude                            Attitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetTeamAttitude(const AIModule::FGenericTeamId& Team, const AIModule::FGenericTeamId& OtherTeam, AIModule::ETeamAttitude Attitude)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetTeamAttitude");
        
        AGBGameState_SetTeamAttitude_Params params {};
        params.Team = Team;
        params.OtherTeam = OtherTeam;
        params.Attitude = Attitude;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetServerModList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> InServerModList                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetServerModList(BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> InServerModList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetServerModList");
        
        AGBGameState_SetServerModList_Params params {};
        params.InServerModList = InServerModList;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetServerBasicInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBServerBasicInfo                   NewServerBasicInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetServerBasicInfo(const GroundBranch::FGBServerBasicInfo& NewServerBasicInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetServerBasicInfo");
        
        AGBGameState_SetServerBasicInfo_Params params {};
        params.NewServerBasicInfo = NewServerBasicInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetRoundIsTemporaryGameMode
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bRoundIsTemporaryGameMode                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetRoundIsTemporaryGameMode(bool bRoundIsTemporaryGameMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetRoundIsTemporaryGameMode");
        
        AGBGameState_SetRoundIsTemporaryGameMode_Params params {};
        params.bRoundIsTemporaryGameMode = bRoundIsTemporaryGameMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetPlayerTeamRole
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InRole                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetPlayerTeamRole(uint8_t TeamId, const BasicTypes::FName& InRole)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetPlayerTeamRole");
        
        AGBGameState_SetPlayerTeamRole_Params params {};
        params.TeamId = TeamId;
        params.InRole = InRole;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetPlayAreaOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bIsOpen                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetPlayAreaOpen(bool bIsOpen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetPlayAreaOpen");
        
        AGBGameState_SetPlayAreaOpen_Params params {};
        params.bIsOpen = bIsOpen;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetObjectiveLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               InObjectiveLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetObjectiveLocation(const CoreUObject::FVector& InObjectiveLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetObjectiveLocation");
        
        AGBGameState_SetObjectiveLocation_Params params {};
        params.InObjectiveLocation = InObjectiveLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetMissionSettingValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NewValue                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetMissionSettingValue(const BasicTypes::FString& Name, int32_t NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetMissionSettingValue");
        
        AGBGameState_SetMissionSettingValue_Params params {};
        params.Name = Name;
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetMissionSequenceNumber
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            InMissionSequenceNumber                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetMissionSequenceNumber(int32_t InMissionSequenceNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetMissionSequenceNumber");
        
        AGBGameState_SetMissionSequenceNumber_Params params {};
        params.InMissionSequenceNumber = InMissionSequenceNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetMatchWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  NewMatchWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetMatchWidget(UMG::UUserWidget* NewMatchWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetMatchWidget");
        
        AGBGameState_SetMatchWidget_Params params {};
        params.NewMatchWidget = NewMatchWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetMatchStartTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewMatchStartTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetMatchStartTime(float NewMatchStartTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetMatchStartTime");
        
        AGBGameState_SetMatchStartTime_Params params {};
        params.NewMatchStartTime = NewMatchStartTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetMatchInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBMatchInfo                         NewMatchInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetMatchInfo(const GroundBranch::FGBMatchInfo& NewMatchInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetMatchInfo");
        
        AGBGameState_SetMatchInfo_Params params {};
        params.NewMatchInfo = NewMatchInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetMapMarkerList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBMapMarker>     InMapMarkerList                                            (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetMapMarkerList(BasicTypes::TArray<GroundBranch::FGBMapMarker> InMapMarkerList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetMapMarkerList");
        
        AGBGameState_SetMapMarkerList_Params params {};
        params.InMapMarkerList = InMapMarkerList;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetLastMissionFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InLastMissionFileName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetLastMissionFileName(const BasicTypes::FString& InLastMissionFileName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetLastMissionFileName");
        
        AGBGameState_SetLastMissionFileName_Params params {};
        params.InLastMissionFileName = InLastMissionFileName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetIsCapturing
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bNewIsCapturing                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetIsCapturing(bool bNewIsCapturing)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetIsCapturing");
        
        AGBGameState_SetIsCapturing_Params params {};
        params.bNewIsCapturing = bNewIsCapturing;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetHotspotName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InHotspotName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetHotspotName(const BasicTypes::FName& InHotspotName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetHotspotName");
        
        AGBGameState_SetHotspotName_Params params {};
        params.InHotspotName = InHotspotName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetGameModeType
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBGameModeType                      InGameModeType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetGameModeType(GroundBranch::EGBGameModeType InGameModeType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetGameModeType");
        
        AGBGameState_SetGameModeType_Params params {};
        params.InGameModeType = InGameModeType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetGameModeName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InGameModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetGameModeName(const BasicTypes::FName& InGameModeName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetGameModeName");
        
        AGBGameState_SetGameModeName_Params params {};
        params.InGameModeName = InGameModeName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetGameModeModID
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    NewGameModeModID                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetGameModeModID(const ModKit::FUInt64& NewGameModeModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetGameModeModID");
        
        AGBGameState_SetGameModeModID_Params params {};
        params.NewGameModeModID = NewGameModeModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetCaptureZone
     *         Flags  -> ()
     * Parameters:
     *         float                                              InCaptureRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InCaptureHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            DefenderTeamId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               InZoneIsSpherical                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetCaptureZone(float InCaptureRadius, float InCaptureHeight, uint8_t DefenderTeamId, bool InZoneIsSpherical)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetCaptureZone");
        
        AGBGameState_SetCaptureZone_Params params {};
        params.InCaptureRadius = InCaptureRadius;
        params.InCaptureHeight = InCaptureHeight;
        params.DefenderTeamId = DefenderTeamId;
        params.InZoneIsSpherical = InZoneIsSpherical;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetCanRandomiseObjectives
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bInCanRandomiseObjectives                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetCanRandomiseObjectives(bool bInCanRandomiseObjectives)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetCanRandomiseObjectives");
        
        AGBGameState_SetCanRandomiseObjectives_Params params {};
        params.bInCanRandomiseObjectives = bInCanRandomiseObjectives;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetBedtimeHours
     *         Flags  -> ()
     * Parameters:
     *         float                                              InBedtimeStartHour                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InBedtimeEndHour                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bInUseStandardHourForBedtimes                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetBedtimeHours(float InBedtimeStartHour, float InBedtimeEndHour, bool bInUseStandardHourForBedtimes)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetBedtimeHours");
        
        AGBGameState_SetBedtimeHours_Params params {};
        params.InBedtimeStartHour = InBedtimeStartHour;
        params.InBedtimeEndHour = InBedtimeEndHour;
        params.bInUseStandardHourForBedtimes = bInUseStandardHourForBedtimes;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SetAARWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  NewAARWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::SetAARWidget(UMG::UUserWidget* NewAARWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SetAARWidget");
        
        AGBGameState_SetAARWidget_Params params {};
        params.NewAARWidget = NewAARWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ServerPrepMissionSummaryEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ServerPrepMissionSummaryEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ServerPrepMissionSummaryEvent");
        
        AGBGameState_ServerPrepMissionSummaryEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.SendTimeRemainingAlertToWatches
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::SendTimeRemainingAlertToWatches()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.SendTimeRemainingAlertToWatches");
        
        AGBGameState_SendTimeRemainingAlertToWatches_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.RoundStageSet
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::RoundStageSet()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.RoundStageSet");
        
        AGBGameState_RoundStageSet_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ResetTeamScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ResetTeamScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ResetTeamScores");
        
        AGBGameState_ResetTeamScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ResetPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ResetPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ResetPlayerScores");
        
        AGBGameState_ResetPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ResetMatchStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ResetMatchStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ResetMatchStats");
        
        AGBGameState_ResetMatchStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ReportClientMissingAsset
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                AssetName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::ReportClientMissingAsset(const BasicTypes::FString& AssetName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ReportClientMissingAsset");
        
        AGBGameState_ReportClientMissingAsset_Params params {};
        params.AssetName = AssetName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.RegisterMissionObjective
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::RegisterMissionObjective(GroundBranch::AGBMissionObjective* MissionObjective)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.RegisterMissionObjective");
        
        AGBGameState_RegisterMissionObjective_Params params {};
        params.MissionObjective = MissionObjective;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.PlayAreaOpen
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::PlayAreaOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.PlayAreaOpen");
        
        AGBGameState_PlayAreaOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnVoteStartedEvent
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              VoteStarter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            VoteTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnVoteStartedEvent(Engine::APlayerState* VoteStarter, const BasicTypes::FString& Command, const BasicTypes::FString& Params, int32_t VoteTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnVoteStartedEvent");
        
        AGBGameState_OnVoteStartedEvent_Params params {};
        params.VoteStarter = VoteStarter;
        params.Command = Command;
        params.Params = Params;
        params.VoteTime = VoteTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnVoteStarted
     *         Flags  -> ()
     * Parameters:
     *         Engine::APlayerState*                              VoteStarter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            VoteTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnVoteStarted(Engine::APlayerState* VoteStarter, const BasicTypes::FString& Command, const BasicTypes::FString& Params, int32_t VoteTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnVoteStarted");
        
        AGBGameState_OnVoteStarted_Params params {};
        params.VoteStarter = VoteStarter;
        params.Command = Command;
        params.Params = Params;
        params.VoteTime = VoteTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnVoteEndedEvent
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bPassed                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NextVoteDelay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnVoteEndedEvent(bool bPassed, int32_t NextVoteDelay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnVoteEndedEvent");
        
        AGBGameState_OnVoteEndedEvent_Params params {};
        params.bPassed = bPassed;
        params.NextVoteDelay = NextVoteDelay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnVoteEnded
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bPassed                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NextVoteDelay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnVoteEnded(bool bPassed, int32_t NextVoteDelay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnVoteEnded");
        
        AGBGameState_OnVoteEnded_Params params {};
        params.bPassed = bPassed;
        params.NextVoteDelay = NextVoteDelay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnVoteCountUpdatedEvent
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            YesVotes                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NoVotes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnVoteCountUpdatedEvent(int32_t YesVotes, int32_t NoVotes)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnVoteCountUpdatedEvent");
        
        AGBGameState_OnVoteCountUpdatedEvent_Params params {};
        params.YesVotes = YesVotes;
        params.NoVotes = NoVotes;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnVoteCountUpdated
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            YesVotes                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NoVotes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnVoteCountUpdated(int32_t YesVotes, int32_t NoVotes)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnVoteCountUpdated");
        
        AGBGameState_OnVoteCountUpdated_Params params {};
        params.YesVotes = YesVotes;
        params.NoVotes = NoVotes;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnServerSettingsUpdated
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnServerSettingsUpdated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnServerSettingsUpdated");
        
        AGBGameState_OnServerSettingsUpdated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_WatchMode
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_WatchMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_WatchMode");
        
        AGBGameState_OnRep_WatchMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_WatchConfig
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_WatchConfig()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_WatchConfig");
        
        AGBGameState_OnRep_WatchConfig_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_UsesReadyRoom
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_UsesReadyRoom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_UsesReadyRoom");
        
        AGBGameState_OnRep_UsesReadyRoom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_TeamScoreLists
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_TeamScoreLists()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_TeamScoreLists");
        
        AGBGameState_OnRep_TeamScoreLists_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_TeamAttitudes
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_TeamAttitudes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_TeamAttitudes");
        
        AGBGameState_OnRep_TeamAttitudes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_ServerModList
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_ServerModList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_ServerModList");
        
        AGBGameState_OnRep_ServerModList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_ServerBasicInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_ServerBasicInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_ServerBasicInfo");
        
        AGBGameState_OnRep_ServerBasicInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_SearchLocations
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_SearchLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_SearchLocations");
        
        AGBGameState_OnRep_SearchLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_RoundTime
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_RoundTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_RoundTime");
        
        AGBGameState_OnRep_RoundTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_RoundStage
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_RoundStage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_RoundStage");
        
        AGBGameState_OnRep_RoundStage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_PlayerLoadoutInfo
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_PlayerLoadoutInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_PlayerLoadoutInfo");
        
        AGBGameState_OnRep_PlayerLoadoutInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_ObjectiveLocation
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_ObjectiveLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_ObjectiveLocation");
        
        AGBGameState_OnRep_ObjectiveLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_NextMapVoteChoices
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_NextMapVoteChoices()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_NextMapVoteChoices");
        
        AGBGameState_OnRep_NextMapVoteChoices_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_MissionSettings
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_MissionSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_MissionSettings");
        
        AGBGameState_OnRep_MissionSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_MissionName
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_MissionName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_MissionName");
        
        AGBGameState_OnRep_MissionName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_MinPlayers
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_MinPlayers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_MinPlayers");
        
        AGBGameState_OnRep_MinPlayers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_MatchStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_MatchStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_MatchStats");
        
        AGBGameState_OnRep_MatchStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_IsRoundBased
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_IsRoundBased()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_IsRoundBased");
        
        AGBGameState_OnRep_IsRoundBased_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_GameStringTables
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_GameStringTables()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_GameStringTables");
        
        AGBGameState_OnRep_GameStringTables_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_GameStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_GameStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_GameStats");
        
        AGBGameState_OnRep_GameStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_GameRules
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_GameRules()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_GameRules");
        
        AGBGameState_OnRep_GameRules_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_GameObjectives
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_GameObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_GameObjectives");
        
        AGBGameState_OnRep_GameObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_GameModeName
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_GameModeName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_GameModeName");
        
        AGBGameState_OnRep_GameModeName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_Difficulty
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_Difficulty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_Difficulty");
        
        AGBGameState_OnRep_Difficulty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_CaptureZone
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_CaptureZone()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_CaptureZone");
        
        AGBGameState_OnRep_CaptureZone_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnRep_CaptureState
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::OnRep_CaptureState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnRep_CaptureState");
        
        AGBGameState_OnRep_CaptureState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.OnGameMessageEvent
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::OnGameMessageEvent(const BasicTypes::FName& GameMessageId, const BasicTypes::FName& Type, float Duration, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.OnGameMessageEvent");
        
        AGBGameState_OnGameMessageEvent_Params params {};
        params.GameMessageId = GameMessageId;
        params.Type = Type;
        params.Duration = Duration;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.NotifyMissionObjectiveStatusChanged
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBMissionObjective*                 MissionObjective                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBMissionObjectiveStatus            NewMissionObjectiveStatus                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::NotifyMissionObjectiveStatusChanged(GroundBranch::AGBMissionObjective* MissionObjective, GroundBranch::EGBMissionObjectiveStatus NewMissionObjectiveStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.NotifyMissionObjectiveStatusChanged");
        
        AGBGameState_NotifyMissionObjectiveStatusChanged_Params params {};
        params.MissionObjective = MissionObjective;
        params.NewMissionObjectiveStatus = NewMissionObjectiveStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.NotifyIntelSearchCompleted
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBGameTrigger*                      GameTrigger                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::AGBSearchableProp*                   SearchablePropActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::NotifyIntelSearchCompleted(GroundBranch::AGBGameTrigger* GameTrigger, GroundBranch::AGBSearchableProp* SearchablePropActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.NotifyIntelSearchCompleted");
        
        AGBGameState_NotifyIntelSearchCompleted_Params params {};
        params.GameTrigger = GameTrigger;
        params.SearchablePropActor = SearchablePropActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.MulticastTimeRemainingAlertToWatches
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::MulticastTimeRemainingAlertToWatches()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.MulticastTimeRemainingAlertToWatches");
        
        AGBGameState_MulticastTimeRemainingAlertToWatches_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.IsRoundBased
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::IsRoundBased()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.IsRoundBased");
        
        AGBGameState_IsRoundBased_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.IsGameRuleEnabled
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  RuleName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::IsGameRuleEnabled(const BasicTypes::FName& RuleName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.IsGameRuleEnabled");
        
        AGBGameState_IsGameRuleEnabled_Params params {};
        params.RuleName = RuleName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.IncrementRoundNumber
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::IncrementRoundNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.IncrementRoundNumber");
        
        AGBGameState_IncrementRoundNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.HasMissionSetting
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::HasMissionSetting(const BasicTypes::FString& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.HasMissionSetting");
        
        AGBGameState_HasMissionSetting_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetWinningTeamForRound
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetWinningTeamForRound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetWinningTeamForRound");
        
        AGBGameState_GetWinningTeamForRound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetWinningTeamForMatch
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetWinningTeamForMatch()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetWinningTeamForMatch");
        
        AGBGameState_GetWinningTeamForMatch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetWatchMode
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EWatchMode                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EWatchMode AGBGameState::GetWatchMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetWatchMode");
        
        AGBGameState_GetWatchMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetWatchConfig
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBGameState::GetWatchConfig()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetWatchConfig");
        
        AGBGameState_GetWatchConfig_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetVotingCommands
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBGameState::GetVotingCommands()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetVotingCommands");
        
        AGBGameState_GetVotingCommands_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetVolunteersAllowed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::GetVolunteersAllowed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetVolunteersAllowed");
        
        AGBGameState_GetVolunteersAllowed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetTimeLimit
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetTimeLimit()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetTimeLimit");
        
        AGBGameState_GetTimeLimit_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetTeamElementCount
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bInPlayOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetTeamElementCount(uint8_t TeamId, bool bInPlayOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetTeamElementCount");
        
        AGBGameState_GetTeamElementCount_Params params {};
        params.TeamId = TeamId;
        params.bInPlayOnly = bInPlayOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetTeamAttitude
     *         Flags  -> ()
     * Parameters:
     *         AIModule::FGenericTeamId                           A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FGenericTeamId                           B                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::ETeamAttitude                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::ETeamAttitude AGBGameState::GetTeamAttitude(const AIModule::FGenericTeamId& A, const AIModule::FGenericTeamId& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetTeamAttitude");
        
        AGBGameState_GetTeamAttitude_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetServerUsesMods
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::GetServerUsesMods()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetServerUsesMods");
        
        AGBGameState_GetServerUsesMods_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetServerModList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<FMModdingPlugin::FGBModBasicInfo> AGBGameState::GetServerModList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetServerModList");
        
        AGBGameState_GetServerModList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetServerBasicInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBServerBasicInfo                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBServerBasicInfo AGBGameState::GetServerBasicInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetServerBasicInfo");
        
        AGBGameState_GetServerBasicInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetSearchLocations
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBGameObjective> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBGameObjective> AGBGameState::GetSearchLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetSearchLocations");
        
        AGBGameState_GetSearchLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetScoreListForTeam
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::FGBScoreLine>     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBScoreLine> AGBGameState::GetScoreListForTeam(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetScoreListForTeam");
        
        AGBGameState_GetScoreListForTeam_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetRoundTime
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetRoundTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetRoundTime");
        
        AGBGameState_GetRoundTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetRoundStageTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameState::GetRoundStageTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetRoundStageTime");
        
        AGBGameState_GetRoundStageTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetRoundStage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBGameState::GetRoundStage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetRoundStage");
        
        AGBGameState_GetRoundStage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetRoundNumber
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetRoundNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetRoundNumber");
        
        AGBGameState_GetRoundNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetRoundIsTemporaryGameMode
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::GetRoundIsTemporaryGameMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetRoundIsTemporaryGameMode");
        
        AGBGameState_GetRoundIsTemporaryGameMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerTeamInfos
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBTeamInfo>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBTeamInfo> AGBGameState::GetPlayerTeamInfos()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerTeamInfos");
        
        AGBGameState_GetPlayerTeamInfos_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerTeamInfo
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBTeamInfo                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBTeamInfo AGBGameState::GetPlayerTeamInfo(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerTeamInfo");
        
        AGBGameState_GetPlayerTeamInfo_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerTeamIdSafe
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBGameState::GetPlayerTeamIdSafe(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerTeamIdSafe");
        
        AGBGameState_GetPlayerTeamIdSafe_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerTeamCount
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetPlayerTeamCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerTeamCount");
        
        AGBGameState_GetPlayerTeamCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerScoreTemplate
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBScoreCollection                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBScoreCollection AGBGameState::GetPlayerScoreTemplate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerScoreTemplate");
        
        AGBGameState_GetPlayerScoreTemplate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerRichPresenceStatus
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBGameState::GetPlayerRichPresenceStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerRichPresenceStatus");
        
        AGBGameState_GetPlayerRichPresenceStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPlayerList
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExcludeBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBPlayerState*>  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBPlayerState*> AGBGameState::GetPlayerList(uint8_t TeamId, bool bExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPlayerList");
        
        AGBGameState_GetPlayerList_Params params {};
        params.TeamId = TeamId;
        params.bExcludeBots = bExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPermittedMissionList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBGameState::GetPermittedMissionList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPermittedMissionList");
        
        AGBGameState_GetPermittedMissionList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetPermittedGameModes
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBGameState::GetPermittedGameModes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetPermittedGameModes");
        
        AGBGameState_GetPermittedGameModes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetObjectiveLocation
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBGameState::GetObjectiveLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetObjectiveLocation");
        
        AGBGameState_GetObjectiveLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetNumPlayers
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExcludeBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetNumPlayers(uint8_t TeamId, bool bExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetNumPlayers");
        
        AGBGameState_GetNumPlayers_Params params {};
        params.TeamId = TeamId;
        params.bExcludeBots = bExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetNextMapVoteChoices
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBGameState::GetNextMapVoteChoices()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetNextMapVoteChoices");
        
        AGBGameState_GetNextMapVoteChoices_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMissionSettings
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBMissionSetting> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBMissionSetting> AGBGameState::GetMissionSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMissionSettings");
        
        AGBGameState_GetMissionSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMissionSettingConfigSectionName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                InGameModeName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBGameState::GetMissionSettingConfigSectionName(const BasicTypes::FString& InGameModeName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMissionSettingConfigSectionName");
        
        AGBGameState_GetMissionSettingConfigSectionName_Params params {};
        params.InGameModeName = InGameModeName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMissionSetting
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBMissionSetting                    ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBMissionSetting AGBGameState::GetMissionSetting(const BasicTypes::FString& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMissionSetting");
        
        AGBGameState_GetMissionSetting_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMissionSequenceNumber
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetMissionSequenceNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMissionSequenceNumber");
        
        AGBGameState_GetMissionSequenceNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMissionName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText AGBGameState::GetMissionName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMissionName");
        
        AGBGameState_GetMissionName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMinPlayers
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetMinPlayers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMinPlayers");
        
        AGBGameState_GetMinPlayers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMatchWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBGameState::GetMatchWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMatchWidget");
        
        AGBGameState_GetMatchWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMatchTypeString
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBGameState::GetMatchTypeString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMatchTypeString");
        
        AGBGameState_GetMatchTypeString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMatchStats
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBMatchStats                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBMatchStats AGBGameState::GetMatchStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMatchStats");
        
        AGBGameState_GetMatchStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMatchStartTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBGameState::GetMatchStartTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMatchStartTime");
        
        AGBGameState_GetMatchStartTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMatchInfo
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBMatchInfo                         ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBMatchInfo AGBGameState::GetMatchInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMatchInfo");
        
        AGBGameState_GetMatchInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetMapMarkerList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBMapMarker>     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBMapMarker> AGBGameState::GetMapMarkerList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetMapMarkerList");
        
        AGBGameState_GetMapMarkerList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetLocalisedGameText
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                DefaultValue                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bPrettifyDefault                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText AGBGameState::GetLocalisedGameText(const BasicTypes::FString& Key, const BasicTypes::FString& DefaultValue, const ModKit::FUInt64& ModID, bool bPrettifyDefault)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetLocalisedGameText");
        
        AGBGameState_GetLocalisedGameText_Params params {};
        params.Key = Key;
        params.DefaultValue = DefaultValue;
        params.ModID = ModID;
        params.bPrettifyDefault = bPrettifyDefault;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetLastMissionFileName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBGameState::GetLastMissionFileName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetLastMissionFileName");
        
        AGBGameState_GetLastMissionFileName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetIsCapturing
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::GetIsCapturing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetIsCapturing");
        
        AGBGameState_GetIsCapturing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetHotspotName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBGameState::GetHotspotName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetHotspotName");
        
        AGBGameState_GetHotspotName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameStatValue
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString AGBGameState::GetGameStatValue(const BasicTypes::FString& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameStatValue");
        
        AGBGameState_GetGameStatValue_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameStats
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> AGBGameState::GetGameStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameStats");
        
        AGBGameState_GetGameStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameRules
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TMap<BasicTypes::FName, bool>          ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TMap<BasicTypes::FName, bool> AGBGameState::GetGameRules()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameRules");
        
        AGBGameState_GetGameRules_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameObjectives
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBGameObjective> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBGameObjective> AGBGameState::GetGameObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameObjectives");
        
        AGBGameState_GetGameObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameModeType
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBGameModeType                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBGameModeType AGBGameState::GetGameModeType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameModeType");
        
        AGBGameState_GetGameModeType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameModeName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBGameState::GetGameModeName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameModeName");
        
        AGBGameState_GetGameModeName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetGameModeModID
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    ModKit::FUInt64 AGBGameState::GetGameModeModID()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetGameModeModID");
        
        AGBGameState_GetGameModeModID_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetEnemyPlayerList
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExcludeBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBPlayerState*>  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::AGBPlayerState*> AGBGameState::GetEnemyPlayerList(uint8_t TeamId, bool bExcludeBots)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetEnemyPlayerList");
        
        AGBGameState_GetEnemyPlayerList_Params params {};
        params.TeamId = TeamId;
        params.bExcludeBots = bExcludeBots;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetDifficulty
     *         Flags  -> ()
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetDifficulty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetDifficulty");
        
        AGBGameState_GetDifficulty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCurrentVariantName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName AGBGameState::GetCurrentVariantName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCurrentVariantName");
        
        AGBGameState_GetCurrentVariantName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCumulativeScoreForTeam
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetCumulativeScoreForTeam(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCumulativeScoreForTeam");
        
        AGBGameState_GetCumulativeScoreForTeam_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCumulativeRoundsWonForTeam
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t AGBGameState::GetCumulativeRoundsWonForTeam(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCumulativeRoundsWonForTeam");
        
        AGBGameState_GetCumulativeRoundsWonForTeam_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCaptureZone
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBCaptureZone                       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBCaptureZone AGBGameState::GetCaptureZone()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCaptureZone");
        
        AGBGameState_GetCaptureZone_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCanRandomiseObjectives
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::GetCanRandomiseObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCanRandomiseObjectives");
        
        AGBGameState_GetCanRandomiseObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCampaignMissionObjectiveInfoList
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<GroundBranch::FGBCampaignMissionObjectiveInfo> AGBGameState::GetCampaignMissionObjectiveInfoList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCampaignMissionObjectiveInfoList");
        
        AGBGameState_GetCampaignMissionObjectiveInfoList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCampaignMissionObjectiveInfoByTitle
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                ObjectiveTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBCampaignMissionObjectiveInfo      ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBCampaignMissionObjectiveInfo AGBGameState::GetCampaignMissionObjectiveInfoByTitle(const BasicTypes::FString& ObjectiveTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCampaignMissionObjectiveInfoByTitle");
        
        AGBGameState_GetCampaignMissionObjectiveInfoByTitle_Params params {};
        params.ObjectiveTitle = ObjectiveTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetCampaignMissionObjectiveInfoByRef
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<GroundBranch::AGBMissionObjective> MissionObjectiveRef                                        (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBCampaignMissionObjectiveInfo      ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    GroundBranch::FGBCampaignMissionObjectiveInfo AGBGameState::GetCampaignMissionObjectiveInfoByRef(BasicTypes::TSoftObjectPtr<GroundBranch::AGBMissionObjective> MissionObjectiveRef)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetCampaignMissionObjectiveInfoByRef");
        
        AGBGameState_GetCampaignMissionObjectiveInfoByRef_Params params {};
        params.MissionObjectiveRef = MissionObjectiveRef;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetBriefingRoomWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBGameState::GetBriefingRoomWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetBriefingRoomWidget");
        
        AGBGameState_GetBriefingRoomWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetBedtimeHours
     *         Flags  -> ()
     * Parameters:
     *         float                                              OutBedtimeStartHour                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutBedtimeEndHour                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOutUseStandardHourForBedtimes                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::GetBedtimeHours(float* OutBedtimeStartHour, float* OutBedtimeEndHour, bool* bOutUseStandardHourForBedtimes)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetBedtimeHours");
        
        AGBGameState_GetBedtimeHours_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBedtimeStartHour != nullptr)
            *OutBedtimeStartHour = params.OutBedtimeStartHour;
        if (OutBedtimeEndHour != nullptr)
            *OutBedtimeEndHour = params.OutBedtimeEndHour;
        if (bOutUseStandardHourForBedtimes != nullptr)
            *bOutUseStandardHourForBedtimes = params.bOutUseStandardHourForBedtimes;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetAdjustedPlayerTeamId
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t AGBGameState::GetAdjustedPlayerTeamId(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetAdjustedPlayerTeamId");
        
        AGBGameState_GetAdjustedPlayerTeamId_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.GetAARWidget
     *         Flags  -> ()
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* AGBGameState::GetAARWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.GetAARWidget");
        
        AGBGameState_GetAARWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ForceResetActors
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ForceResetActors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ForceResetActors");
        
        AGBGameState_ForceResetActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.DoesServerHostMod
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    ModIDToCheck                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::DoesServerHostMod(const ModKit::FUInt64& ModIDToCheck)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.DoesServerHostMod");
        
        AGBGameState_DoesServerHostMod_Params params {};
        params.ModIDToCheck = ModIDToCheck;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.DoesHostAllowPrimaryAsset
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FPrimaryAssetId                       PrimaryAssetId                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::DoesHostAllowPrimaryAsset(const CoreUObject::FPrimaryAssetId& PrimaryAssetId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.DoesHostAllowPrimaryAsset");
        
        AGBGameState_DoesHostAllowPrimaryAsset_Params params {};
        params.PrimaryAssetId = PrimaryAssetId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.DoesClientHostMod
     *         Flags  -> ()
     * Parameters:
     *         ModKit::FUInt64                                    ModIDToCheck                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::DoesClientHostMod(const ModKit::FUInt64& ModIDToCheck)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.DoesClientHostMod");
        
        AGBGameState_DoesClientHostMod_Params params {};
        params.ModIDToCheck = ModIDToCheck;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.DecrementRoundNumber
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::DecrementRoundNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.DecrementRoundNumber");
        
        AGBGameState_DecrementRoundNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.CreateTeamScores
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::CreateTeamScores(uint8_t TeamId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.CreateTeamScores");
        
        AGBGameState_CreateTeamScores_Params params {};
        params.TeamId = TeamId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ClearTeamScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ClearTeamScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ClearTeamScores");
        
        AGBGameState_ClearTeamScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ClearSearchLocations
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ClearSearchLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ClearSearchLocations");
        
        AGBGameState_ClearSearchLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ClearPlayerScoresTemplate
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ClearPlayerScoresTemplate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ClearPlayerScoresTemplate");
        
        AGBGameState_ClearPlayerScoresTemplate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ClearPlayerScores
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ClearPlayerScores()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ClearPlayerScores");
        
        AGBGameState_ClearPlayerScores_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ClearGameStats
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ClearGameStats()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ClearGameStats");
        
        AGBGameState_ClearGameStats_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ClearGameObjectives
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBGameState::ClearGameObjectives()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ClearGameObjectives");
        
        AGBGameState_ClearGameObjectives_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.BroadcastGameMessage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         ModKit::FUInt64                                    ModID                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::BroadcastGameMessage(const BasicTypes::FName& GameMessageId, const BasicTypes::FName& Type, float Duration, const ModKit::FUInt64& ModID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.BroadcastGameMessage");
        
        AGBGameState_BroadcastGameMessage_Params params {};
        params.GameMessageId = GameMessageId;
        params.Type = Type;
        params.Duration = Duration;
        params.ModID = ModID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AwardTeamScore
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ScoreMultiple                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AwardTeamScore(uint8_t TeamId, const BasicTypes::FName& ScoreName, int32_t ScoreMultiple)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AwardTeamScore");
        
        AGBGameState_AwardTeamScore_Params params {};
        params.TeamId = TeamId;
        params.ScoreName = ScoreName;
        params.ScoreMultiple = ScoreMultiple;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AreTeamScoresInitialised
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::AreTeamScoresInitialised()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AreTeamScoresInitialised");
        
        AGBGameState_AreTeamScoresInitialised_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.ArePlayerScoresInitialised
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBGameState::ArePlayerScoresInitialised()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.ArePlayerScoresInitialised");
        
        AGBGameState_ArePlayerScoresInitialised_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddTeamScoreType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ScoreDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               OneOff                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddTeamScoreType(const BasicTypes::FName& ScoreName, const BasicTypes::FString& ScoreDescription, int32_t ScoreToAdd, bool OneOff)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddTeamScoreType");
        
        AGBGameState_AddTeamScoreType_Params params {};
        params.ScoreName = ScoreName;
        params.ScoreDescription = ScoreDescription;
        params.ScoreToAdd = ScoreToAdd;
        params.OneOff = OneOff;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddSearchLocation
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBGameObjectiveType                 ObjectiveType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddSearchLocation(uint8_t TeamId, const BasicTypes::FName& Name, GroundBranch::EGBGameObjectiveType ObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddSearchLocation");
        
        AGBGameState_AddSearchLocation_Params params {};
        params.TeamId = TeamId;
        params.Name = Name;
        params.ObjectiveType = ObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddScoreToCumulativeScore
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddScoreToCumulativeScore(uint8_t TeamId, int32_t ScoreToAdd)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddScoreToCumulativeScore");
        
        AGBGameState_AddScoreToCumulativeScore_Params params {};
        params.TeamId = TeamId;
        params.ScoreToAdd = ScoreToAdd;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddScoreToCumulativeRoundsWon
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddScoreToCumulativeRoundsWon(uint8_t TeamId, int32_t ScoreToAdd)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddScoreToCumulativeRoundsWon");
        
        AGBGameState_AddScoreToCumulativeRoundsWon_Params params {};
        params.TeamId = TeamId;
        params.ScoreToAdd = ScoreToAdd;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddPlayerTeamInfo
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::FGBTeamInfo                          NewPlayerTeam                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddPlayerTeamInfo(uint8_t TeamId, const GroundBranch::FGBTeamInfo& NewPlayerTeam)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddPlayerTeamInfo");
        
        AGBGameState_AddPlayerTeamInfo_Params params {};
        params.TeamId = TeamId;
        params.NewPlayerTeam = NewPlayerTeam;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddPlayerScoreType
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ScoreDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               OneOff                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddPlayerScoreType(const BasicTypes::FName& ScoreName, const BasicTypes::FString& ScoreDescription, int32_t ScoreToAdd, bool OneOff)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddPlayerScoreType");
        
        AGBGameState_AddPlayerScoreType_Params params {};
        params.ScoreName = ScoreName;
        params.ScoreDescription = ScoreDescription;
        params.ScoreToAdd = ScoreToAdd;
        params.OneOff = OneOff;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddMissionSetting
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MinValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MaxValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            CurrentValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddMissionSetting(BasicTypes::FString* Name, int32_t MinValue, int32_t MaxValue, int32_t CurrentValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddMissionSetting");
        
        AGBGameState_AddMissionSetting_Params params {};
        params.MinValue = MinValue;
        params.MaxValue = MaxValue;
        params.CurrentValue = CurrentValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Name != nullptr)
            *Name = params.Name;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddGameStat
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FString                                StatString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddGameStat(const BasicTypes::FString& StatString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddGameStat");
        
        AGBGameState_AddGameStat_Params params {};
        params.StatString = StatString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameState.AddGameObjective
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBGameObjectiveType                 ObjectiveType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameState::AddGameObjective(uint8_t TeamId, const BasicTypes::FName& Name, GroundBranch::EGBGameObjectiveType ObjectiveType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameState.AddGameObjective");
        
        AGBGameState_AddGameObjective_Params params {};
        params.TeamId = TeamId;
        params.Name = Name;
        params.ObjectiveType = ObjectiveType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameTriggerBase.OnTeamEndOverlap
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameTriggerBase::OnTeamEndOverlap(GroundBranch::AGBCharacter* GBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameTriggerBase.OnTeamEndOverlap");
        
        AGBGameTriggerBase_OnTeamEndOverlap_Params params {};
        params.GBCharacter = GBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameTriggerBase.OnTeamBeginOverlap
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameTriggerBase::OnTeamBeginOverlap(GroundBranch::AGBCharacter* GBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameTriggerBase.OnTeamBeginOverlap");
        
        AGBGameTriggerBase_OnTeamBeginOverlap_Params params {};
        params.GBCharacter = GBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameTriggerBase.OnNonTeamEndOverlap
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameTriggerBase::OnNonTeamEndOverlap(GroundBranch::AGBCharacter* GBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameTriggerBase.OnNonTeamEndOverlap");
        
        AGBGameTriggerBase_OnNonTeamEndOverlap_Params params {};
        params.GBCharacter = GBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameTriggerBase.OnNonTeamBeginOverlap
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBGameTriggerBase::OnNonTeamBeginOverlap(GroundBranch::AGBCharacter* GBCharacter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameTriggerBase.OnNonTeamBeginOverlap");
        
        AGBGameTriggerBase_OnNonTeamBeginOverlap_Params params {};
        params.GBCharacter = GBCharacter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.UpdateDisplayFieldsEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::UpdateDisplayFieldsEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.UpdateDisplayFieldsEvent");
        
        UGBDialogWidget_UpdateDisplayFieldsEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.SetTitle
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FText                                  InTitle                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::SetTitle(const BasicTypes::FText& InTitle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.SetTitle");
        
        UGBDialogWidget_SetTitle_Params params {};
        params.InTitle = InTitle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.SetTerminationTime
     *         Flags  -> ()
     * Parameters:
     *         float                                              SecondsBeforeKill                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::SetTerminationTime(float SecondsBeforeKill)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.SetTerminationTime");
        
        UGBDialogWidget_SetTerminationTime_Params params {};
        params.SecondsBeforeKill = SecondsBeforeKill;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.SetMessageDialogType
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBMessageDialogType                 InMessageDialogType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::SetMessageDialogType(GroundBranch::EGBMessageDialogType InMessageDialogType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.SetMessageDialogType");
        
        UGBDialogWidget_SetMessageDialogType_Params params {};
        params.InMessageDialogType = InMessageDialogType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.SetMessage
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FText                                  InMessage                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::SetMessage(const BasicTypes::FText& InMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.SetMessage");
        
        UGBDialogWidget_SetMessage_Params params {};
        params.InMessage = InMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.SetDialogName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InDialogName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::SetDialogName(const BasicTypes::FName& InDialogName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.SetDialogName");
        
        UGBDialogWidget_SetDialogName_Params params {};
        params.InDialogName = InDialogName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.NotifyOkClicked
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::NotifyOkClicked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.NotifyOkClicked");
        
        UGBDialogWidget_NotifyOkClicked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDialogWidget.NotifyCancelClicked
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBDialogWidget::NotifyCancelClicked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDialogWidget.NotifyCancelClicked");
        
        UGBDialogWidget_NotifyCancelClicked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDirectionalSunlight.UpdateCloudScatteredLuminance
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FLinearColor                          NewScale                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDirectionalSunlight::UpdateCloudScatteredLuminance(const CoreUObject::FLinearColor& NewScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDirectionalSunlight.UpdateCloudScatteredLuminance");
        
        AGBDirectionalSunlight_UpdateCloudScatteredLuminance_Params params {};
        params.NewScale = NewScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDirectionalSunlight.SetLightSourceAngle
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewSourceAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDirectionalSunlight::SetLightSourceAngle(float NewSourceAngle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDirectionalSunlight.SetLightSourceAngle");
        
        AGBDirectionalSunlight_SetLightSourceAngle_Params params {};
        params.NewSourceAngle = NewSourceAngle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDirectionalSunlight.GetSavedCloudScatteredLuminance
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FLinearColor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FLinearColor AGBDirectionalSunlight::GetSavedCloudScatteredLuminance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDirectionalSunlight.GetSavedCloudScatteredLuminance");
        
        AGBDirectionalSunlight_GetSavedCloudScatteredLuminance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.UpdateAcousticPortalInternal
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::UpdateAcousticPortalInternal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.UpdateAcousticPortalInternal");
        
        AGBDoorSwinging_UpdateAcousticPortalInternal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.UpdateAcousticPortal
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::UpdateAcousticPortal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.UpdateAcousticPortal");
        
        AGBDoorSwinging_UpdateAcousticPortal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.SetupDoor
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::SetupDoor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.SetupDoor");
        
        AGBDoorSwinging_SetupDoor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.SetDoorYawSpeed
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewYawSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::SetDoorYawSpeed(float NewYawSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.SetDoorYawSpeed");
        
        AGBDoorSwinging_SetDoorYawSpeed_Params params {};
        params.NewYawSpeed = NewYawSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.SetDoorYawAngle
     *         Flags  -> ()
     * Parameters:
     *         float                                              NewYawAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::SetDoorYawAngle(float NewYawAngle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.SetDoorYawAngle");
        
        AGBDoorSwinging_SetDoorYawAngle_Params params {};
        params.NewYawAngle = NewYawAngle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.SetAdjoiningDoorBehaviour
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::EGBAdjoiningDoorBehaviour            NewAdjoiningDoorBehaviour                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::SetAdjoiningDoorBehaviour(GroundBranch::EGBAdjoiningDoorBehaviour NewAdjoiningDoorBehaviour)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.SetAdjoiningDoorBehaviour");
        
        AGBDoorSwinging_SetAdjoiningDoorBehaviour_Params params {};
        params.NewAdjoiningDoorBehaviour = NewAdjoiningDoorBehaviour;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.SetAdjoiningDoor
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBDoorSwinging*                     NewAdjoiningDoor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::SetAdjoiningDoor(GroundBranch::AGBDoorSwinging* NewAdjoiningDoor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.SetAdjoiningDoor");
        
        AGBDoorSwinging_SetAdjoiningDoor_Params params {};
        params.NewAdjoiningDoor = NewAdjoiningDoor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.ResetAngularDamping
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::ResetAngularDamping()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.ResetAngularDamping");
        
        AGBDoorSwinging_ResetAngularDamping_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.OnRep_ReplicatedSwing
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::OnRep_ReplicatedSwing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.OnRep_ReplicatedSwing");
        
        AGBDoorSwinging_OnRep_ReplicatedSwing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.OnRep_DoorDestroyed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               bLastDoorDestroyed                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::OnRep_DoorDestroyed(bool bLastDoorDestroyed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.OnRep_DoorDestroyed");
        
        AGBDoorSwinging_OnRep_DoorDestroyed_Params params {};
        params.bLastDoorDestroyed = bLastDoorDestroyed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.OnPhysicsCollision
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::OnPhysicsCollision(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.OnPhysicsCollision");
        
        AGBDoorSwinging_OnPhysicsCollision_Params params {};
        params.OverlappedComponent = OverlappedComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.NormalImpulse = NormalImpulse;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.OnDoorDestroyedEvent
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               DamageDir                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::OnDoorDestroyedEvent(const CoreUObject::FVector& DamageOrigin, const CoreUObject::FVector& DamageDir)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.OnDoorDestroyedEvent");
        
        AGBDoorSwinging_OnDoorDestroyedEvent_Params params {};
        params.DamageOrigin = DamageOrigin;
        params.DamageDir = DamageDir;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.OnAdjoiningDoorOpening
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBDoorSwinging*                     OtherDoor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::OnAdjoiningDoorOpening(GroundBranch::AGBDoorSwinging* OtherDoor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.OnAdjoiningDoorOpening");
        
        AGBDoorSwinging_OnAdjoiningDoorOpening_Params params {};
        params.OtherDoor = OtherDoor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.OnAdjoiningDoorClosing
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBDoorSwinging*                     OtherDoor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::OnAdjoiningDoorClosing(GroundBranch::AGBDoorSwinging* OtherDoor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.OnAdjoiningDoorClosing");
        
        AGBDoorSwinging_OnAdjoiningDoorClosing_Params params {};
        params.OtherDoor = OtherDoor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.NetMulticastUpdateYaw
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::FGBReplicatedSwing                   Swing                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::NetMulticastUpdateYaw(const GroundBranch::FGBReplicatedSwing& Swing)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.NetMulticastUpdateYaw");
        
        AGBDoorSwinging_NetMulticastUpdateYaw_Params params {};
        params.Swing = Swing;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.NetMulticastDestroyDoor
     *         Flags  -> ()
     * Parameters:
     *         Engine::FVector_NetQuantize10                      DamageOrigin                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FVector_NetQuantizeNormal                  DamageDir                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::NetMulticastDestroyDoor(const Engine::FVector_NetQuantize10& DamageOrigin, const Engine::FVector_NetQuantizeNormal& DamageDir)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.NetMulticastDestroyDoor");
        
        AGBDoorSwinging_NetMulticastDestroyDoor_Params params {};
        params.DamageOrigin = DamageOrigin;
        params.DamageDir = DamageDir;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.IsOpening
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBDoorSwinging::IsOpening()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.IsOpening");
        
        AGBDoorSwinging_IsOpening_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.IsOpenedEnoughForAIToUse
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBDoorSwinging::IsOpenedEnoughForAIToUse()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.IsOpenedEnoughForAIToUse");
        
        AGBDoorSwinging_IsOpenedEnoughForAIToUse_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.IsDestroyed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBDoorSwinging::IsDestroyed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.IsDestroyed");
        
        AGBDoorSwinging_IsDestroyed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.IsClosing
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBDoorSwinging::IsClosing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.IsClosing");
        
        AGBDoorSwinging_IsClosing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.IsClosed
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBDoorSwinging::IsClosed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.IsClosed");
        
        AGBDoorSwinging_IsClosed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.GetDoorYawSpeed
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBDoorSwinging::GetDoorYawSpeed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.GetDoorYawSpeed");
        
        AGBDoorSwinging_GetDoorYawSpeed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.GetDoorYawAngle
     *         Flags  -> ()
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float AGBDoorSwinging::GetDoorYawAngle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.GetDoorYawAngle");
        
        AGBDoorSwinging_GetDoorYawAngle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.GetDoorScale
     *         Flags  -> ()
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AGBDoorSwinging::GetDoorScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.GetDoorScale");
        
        AGBDoorSwinging_GetDoorScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.GetControllerRelativeSwingDir
     *         Flags  -> ()
     * Parameters:
     *         Engine::AController*                               Controller                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         GroundBranch::EGBPlayerRelativeSwingDir            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::EGBPlayerRelativeSwingDir AGBDoorSwinging::GetControllerRelativeSwingDir(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.GetControllerRelativeSwingDir");
        
        AGBDoorSwinging_GetControllerRelativeSwingDir_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDoorSwinging.DisableDoorCompPhysics
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDoorSwinging::DisableDoorCompPhysics()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDoorSwinging.DisableDoorCompPhysics");
        
        AGBDoorSwinging_DisableDoorCompPhysics_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.SetAssociatedInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          NewAssociatedInvItem                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDroppedInvItem::SetAssociatedInvItem(GroundBranch::AGBInvItem* NewAssociatedInvItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.SetAssociatedInvItem");
        
        AGBDroppedInvItem_SetAssociatedInvItem_Params params {};
        params.NewAssociatedInvItem = NewAssociatedInvItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.RescueImportant
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDroppedInvItem::RescueImportant()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.RescueImportant");
        
        AGBDroppedInvItem_RescueImportant_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.OnRep_AssociatedInvItem
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDroppedInvItem::OnRep_AssociatedInvItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.OnRep_AssociatedInvItem");
        
        AGBDroppedInvItem_OnRep_AssociatedInvItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.OnPhysicsCollision
     *         Flags  -> ()
     * Parameters:
     *         Engine::UPrimitiveComponent*                       OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UPrimitiveComponent*                       OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AGBDroppedInvItem::OnPhysicsCollision(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.OnPhysicsCollision");
        
        AGBDroppedInvItem_OnPhysicsCollision_Params params {};
        params.OverlappedComponent = OverlappedComponent;
        params.OtherActor = OtherActor;
        params.OtherComp = OtherComp;
        params.NormalImpulse = NormalImpulse;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.OnAssocatedInvItemSetEvent
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBDroppedInvItem::OnAssocatedInvItemSetEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.OnAssocatedInvItemSetEvent");
        
        AGBDroppedInvItem_OnAssocatedInvItemSetEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.IsImportant
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBDroppedInvItem::IsImportant()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.IsImportant");
        
        AGBDroppedInvItem_IsImportant_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBDroppedInvItem.GetAssociatedInvItem
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBInvItem*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBInvItem* AGBDroppedInvItem::GetAssociatedInvItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBDroppedInvItem.GetAssociatedInvItem");
        
        AGBDroppedInvItem_GetAssociatedInvItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEjectComponent.IsManuallyEjected
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBEjectComponent::IsManuallyEjected()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEjectComponent.IsManuallyEjected");
        
        UGBEjectComponent_IsManuallyEjected_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEjectComponent.DeActivateSmoke
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBEjectComponent::DeActivateSmoke()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEjectComponent.DeActivateSmoke");
        
        UGBEjectComponent_DeActivateSmoke_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEjectComponent.DeActivateShell
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBEjectComponent::DeActivateShell()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEjectComponent.DeActivateShell");
        
        UGBEjectComponent_DeActivateShell_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEjectComponent.ActivateSmoke
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBEjectComponent::ActivateSmoke()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEjectComponent.ActivateSmoke");
        
        UGBEjectComponent_ActivateSmoke_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEjectComponent.ActivateShell
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBEjectComponent::ActivateShell()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEjectComponent.ActivateShell");
        
        UGBEjectComponent_ActivateShell_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.K2_LocalEndAbility
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameplayAbility::K2_LocalEndAbility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.K2_LocalEndAbility");
        
        UGBGameplayAbility_K2_LocalEndAbility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.K2_LocalCancelAbility
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameplayAbility::K2_LocalCancelAbility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.K2_LocalCancelAbility");
        
        UGBGameplayAbility_K2_LocalCancelAbility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.K2_AuthoritativeEndAbility
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameplayAbility::K2_AuthoritativeEndAbility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.K2_AuthoritativeEndAbility");
        
        UGBGameplayAbility_K2_AuthoritativeEndAbility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.K2_AuthoritativeCancelAbility
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGBGameplayAbility::K2_AuthoritativeCancelAbility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.K2_AuthoritativeCancelAbility");
        
        UGBGameplayAbility_K2_AuthoritativeCancelAbility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.IsLocallyControlledPlayer
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBGameplayAbility::IsLocallyControlledPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.IsLocallyControlledPlayer");
        
        UGBGameplayAbility_IsLocallyControlledPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.GetOwnerKytController
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKytController* UGBGameplayAbility::GetOwnerKytController()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.GetOwnerKytController");
        
        UGBGameplayAbility_GetOwnerKytController_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.GetCharacter
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBCharacter*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBCharacter* UGBGameplayAbility::GetCharacter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.GetCharacter");
        
        UGBGameplayAbility_GetCharacter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBGameplayAbility.GetAvatarKytController
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBKytController*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBKytController* UGBGameplayAbility::GetAvatarKytController()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBGameplayAbility.GetAvatarKytController");
        
        UGBGameplayAbility_GetAvatarKytController_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEvent.RemoveFromActiveEvents
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBEvent::RemoveFromActiveEvents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEvent.RemoveFromActiveEvents");
        
        AGBEvent_RemoveFromActiveEvents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEvent.GetEventManager
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBEventManager*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBEventManager* AGBEvent::GetEventManager()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEvent.GetEventManager");
        
        AGBEvent_GetEventManager_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEventManager.Update
     *         Flags  -> ()
     * Parameters:
     *         void                                               ReturnValue
     */
    void AGBEventManager::Update()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEventManager.Update");
        
        AGBEventManager_Update_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEventManager.GetActiveEventsByClass
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBEvent*                            Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<GroundBranch::AGBEvent*>        OutEvents                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGBEventManager::GetActiveEventsByClass(GroundBranch::AGBEvent* Class, BasicTypes::TArray<GroundBranch::AGBEvent*>* OutEvents)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEventManager.GetActiveEventsByClass");
        
        AGBEventManager_GetActiveEventsByClass_Params params {};
        params.Class = Class;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutEvents != nullptr)
            *OutEvents = params.OutEvents;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEventSpawnBehavior.SpawnEvent
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBEvent*                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBEvent* UGBEventSpawnBehavior::SpawnEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEventSpawnBehavior.SpawnEvent");
        
        UGBEventSpawnBehavior_SpawnEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEventSpawnBehavior.GetWorld
     *         Flags  -> ()
     * Parameters:
     *         Engine::UWorld*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UWorld* UGBEventSpawnBehavior::GetWorld()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEventSpawnBehavior.GetWorld");
        
        UGBEventSpawnBehavior_GetWorld_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEventSpawnBehavior.GetEventManager
     *         Flags  -> ()
     * Parameters:
     *         GroundBranch::AGBEventManager*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    GroundBranch::AGBEventManager* UGBEventSpawnBehavior::GetEventManager()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEventSpawnBehavior.GetEventManager");
        
        UGBEventSpawnBehavior_GetEventManager_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBEventSpawnBehavior.CanSpawn
     *         Flags  -> ()
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGBEventSpawnBehavior::CanSpawn()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBEventSpawnBehavior.CanSpawn");
        
        UGBEventSpawnBehavior_CanSpawn_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateTickName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FrameDeltaTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyStateTickName(const BasicTypes::FName& InName, float FrameDeltaTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateTickName");
        
        IGBAnimNotifyInterface_NotifyStateTickName_Params params {};
        params.InName = InName;
        params.FrameDeltaTime = FrameDeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateTickEnum
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FrameDeltaTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyStateTickEnum(uint8_t InEnumAsByte, float FrameDeltaTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateTickEnum");
        
        IGBAnimNotifyInterface_NotifyStateTickEnum_Params params {};
        params.InEnumAsByte = InEnumAsByte;
        params.FrameDeltaTime = FrameDeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateEndName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyStateEndName(const BasicTypes::FName& InName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateEndName");
        
        IGBAnimNotifyInterface_NotifyStateEndName_Params params {};
        params.InName = InName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateEndEnum
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyStateEndEnum(uint8_t InEnumAsByte)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateEndEnum");
        
        IGBAnimNotifyInterface_NotifyStateEndEnum_Params params {};
        params.InEnumAsByte = InEnumAsByte;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateBeginName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TotalDuration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyStateBeginName(const BasicTypes::FName& InName, float TotalDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateBeginName");
        
        IGBAnimNotifyInterface_NotifyStateBeginName_Params params {};
        params.InName = InName;
        params.TotalDuration = TotalDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateBeginEnum
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TotalDuration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyStateBeginEnum(uint8_t InEnumAsByte, float TotalDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyStateBeginEnum");
        
        IGBAnimNotifyInterface_NotifyStateBeginEnum_Params params {};
        params.InEnumAsByte = InEnumAsByte;
        params.TotalDuration = TotalDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyName
     *         Flags  -> ()
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyName(const BasicTypes::FName& InName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyName");
        
        IGBAnimNotifyInterface_NotifyName_Params params {};
        params.InName = InName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00000000
     *         Name   -> Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyEnum
     *         Flags  -> ()
     * Parameters:
     *         uint8_t                                            InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IGBAnimNotifyInterface::NotifyEnum(uint8_t InEnumAsByte)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GroundBranch.GBAnimNotifyInterface.NotifyEnum");
        
        IGBAnimNotifyInterface_NotifyEnum_Params params {};
        params.InEnumAsByte = InEnumAsByte;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
