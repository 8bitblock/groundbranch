#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    Ground_Branch               |
 * | Version: 10.09.2025                  |
 * | Date:    09/10/2025                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_FSoftObjectPath.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "BasicTypes_FName.h"
#include "GroundBranch_ENUMS.h"
#include "CoreUObject_FVector2D.h"
#include "GroundBranch_FTakeHitInfo.h"
#include "BasicTypes_TMap.h"
#include "GameplayTags_FGameplayTag.h"
#include "GroundBranch_FGBCharVoiceInfo.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Niagara_UNiagaraSystem.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"
#include "GroundBranch_FHitBulletIndexes.h"
#include "GroundBranch_FGBAISightPart.h"
#include "Engine_ACharacter.h"
#include "Engine_FHitResult.h"
#include "CoreUObject_FPrimaryAssetId.h"
#include "CoreUObject_FTransform.h"
#include "GameplayTags_FGameplayTagContainer.h"
#include "PhysicsCore_ENUMS.h"
#include "GroundBranch_FGBRecoilData.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::GroundBranch { class UGBAbilityTagRelationshipMapping; };
namespace CG::Engine { class UAnimInstance; };
namespace CG::AkAudio { class UAkComponent; };
namespace CG::GroundBranch { class UGBCharacterMovement; };
namespace CG::GameplayAbilities { class UGameplayEffect; };
namespace CG::Engine { class UMaterialParameterCollection; };
namespace CG::GroundBranch { class AGBInvItem; };
namespace CG::GroundBranch { class AGBKitInfo; };
namespace CG::GroundBranch { class AGBPlayerState; };
namespace CG::TheCurviestCurve { class UCurveCurviest; };
namespace CG::SkinnedDecalComponent { class USkinnedDecalSampler; };
namespace CG::GroundBranch { class UGBLXRDetectionComponent; };
namespace CG::Engine { class UAnimMontage; };
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::AkAudio { class UAkAudioEvent; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class AController; };
namespace CG::Engine { class UDamageType; };
namespace CG::GroundBranch { class AGBPlayerController; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GroundBranch
{
    /**
     * Class /Script/GroundBranch.GBCharacter
     * Size -> 0x08D0 (FullSize[0x0D90] - InheritedSize[0x04C0])
     */
    class AGBCharacter : public Engine::ACharacter
    {
    public:
        uint8_t                                                      UnknownData_0000[0x28];                                  // 0x04C0 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<CoreUObject::FSoftObjectPath>             GameplayAbilitySets;                                     // 0x04E8 Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        GroundBranch::UGBAbilityTagRelationshipMapping*              TagRelationshipMapping;                                  // 0x04F8 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x10];                                  // 0x0500 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UAnimInstance*                                       UnarmedAnimLayerClass;                                   // 0x0510 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        AkAudio::UAkComponent*                                       AKVoiceComp;                                             // 0x0518 ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        AkAudio::UAkComponent*                                       AKFootstepComp;                                          // 0x0520 ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x4];                                   // 0x0528 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MinRTPCSpeedValueChange;                                 // 0x052C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x4];                                   // 0x0530 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MinRTPCWeightValueChange;                                // 0x0534 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::UMulticastInlineDelegate                         OnReceivePlayerState;                                    // 0x0538 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0xF];                                   // 0x0539 FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnBecomeViewTarget;                                      // 0x0548 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xF];                                   // 0x0549 FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEndViewTarget;                                         // 0x0558 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0xF];                                   // 0x0559 FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0007[0xC];                                   // 0x0568 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            ItemHandSocketLeft;                                      // 0x0574 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            ItemHandSocketRight;                                     // 0x057C Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            SightLineBone;                                           // 0x0584 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bItemWasColliding : 1;                                   // 0x058C BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bItemIsColliding : 1;                                    // 0x058C BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0x3];                                   // 0x058D MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      MaxHealth;                                               // 0x0590 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      Health;                                                  // 0x0594 Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0009[0x4];                                   // 0x0598 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        uint8_t                                                      RemoteHeadPitchDif;                                      // 0x059C Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      RemoteHeadYawDif;                                        // 0x059D Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0010[0x2];                                   // 0x059E MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ViewPitchMin;                                            // 0x05A0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ViewPitchMax;                                            // 0x05A4 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ViewPitchMinProne;                                       // 0x05A8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ViewPitchMaxProne;                                       // 0x05AC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0011[0x4];                                   // 0x05B0 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        CrouchInterpSpeed;                                       // 0x05B4 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsProne : 1;                                            // 0x05B8 BIT_FIELD Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0012[0x7];                                   // 0x05B9 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GroundBranch::UGBCharacterMovement*                          GBMovementComponent;                                     // 0x05C0 Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        MaxUnderWaterTime;                                       // 0x05C8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        DrowningDamagePerSecond;                                 // 0x05CC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LastBreathTime;                                          // 0x05D0 BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LastDrownTime;                                           // 0x05D4 BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GameplayAbilities::UGameplayEffect*                          HeadUnderWaterEffect;                                    // 0x05D8 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0013[0x8];                                   // 0x05E0 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UMaterialParameterCollection*                        GlobalEnvironmentMPC;                                    // 0x05E8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        MinSafeFallSpeed;                                        // 0x05F0 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        DeathFallSpeed;                                          // 0x05F4 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        CrushingDamageFactor;                                    // 0x05F8 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0014[0x4];                                   // 0x05FC MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnRecoilCountUpdated;                                    // 0x0600 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0015[0xF];                                   // 0x0601 FIX WRONG SIZE OF PREVIOUS PROPERTY
        GroundBranch::AGBInvItem*                                    EquippedLeft;                                            // 0x0610 Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GroundBranch::AGBInvItem*                                    EquippedRight;                                           // 0x0618 Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GroundBranch::AGBInvItem*                                    PrevEquippedLeft;                                        // 0x0620 ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GroundBranch::AGBInvItem*                                    PrevEquippedRight;                                       // 0x0628 ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UAnimInstance*                                       CurrentAnimLayerClass;                                   // 0x0630 Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bWantsToRun : 1;                                         // 0x0638 BIT_FIELD Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bWantsToSprint : 1;                                      // 0x0638 BIT_FIELD Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0016[0x14];                                  // 0x0639 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GroundBranch::EHand                                          CurrentHand;                                             // 0x064D Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0017[0x2];                                   // 0x064E MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DesiredLeanAlpha;                                        // 0x0650 BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      RemoteDesiredLeanAlpha;                                  // 0x0654 Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0018[0x3];                                   // 0x0655 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        LeanInterpSpeed;                                         // 0x0658 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LeanAlpha;                                               // 0x065C BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0019[0x8];                                   // 0x0660 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnPositionAlphasUpdated;                                 // 0x0668 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0020[0xF];                                   // 0x0669 FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnPositionAlphaMet;                                      // 0x0678 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0021[0xF];                                   // 0x0679 FIX WRONG SIZE OF PREVIOUS PROPERTY
        float                                                        HeadOffsetPitchMin;                                      // 0x0688 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        HeadOffsetPitchMax;                                      // 0x068C Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        HeadOffsetYawMax;                                        // 0x0690 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      DesiredWaterLevel;                                       // 0x0694 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      ActualWaterLevel;                                        // 0x0695 Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0022[0xE];                                   // 0x0696 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        uint8_t                                                      RecoilCount;                                             // 0x06A4 Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0023[0x63];                                  // 0x06A5 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      RNGSeed;                                                 // 0x0708 Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0024[0xC];                                   // 0x070C MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GroundBranch::AGBKitInfo*                                    LoadoutInfo;                                             // 0x0718 BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            LeftChestSlingPoint;                                     // 0x0720 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            RightChestSlingPoint;                                    // 0x0728 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            LeftShoulderSlingPoint;                                  // 0x0730 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            RightShoulderSlingPoint;                                 // 0x0738 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        MaxStamina;                                              // 0x0740 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        Stamina;                                                 // 0x0744 Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaGainIdle;                                         // 0x0748 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaGainWalking;                                      // 0x074C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaGainRunning;                                      // 0x0750 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossWalking;                                      // 0x0754 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossRunning;                                      // 0x0758 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossSprinting;                                    // 0x075C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossJump;                                         // 0x0760 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossControlledBreathing;                          // 0x0764 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossCrouchToStanding;                             // 0x0768 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossGoToProne;                                    // 0x076C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossGetUpFromProne;                               // 0x0770 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaLossLean;                                         // 0x0774 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaInstantLossLeanSpam;                              // 0x0778 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaInstantLossRunSpam;                               // 0x077C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaInstantLossSprintSpam;                            // 0x0780 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaMinWeightThreshold;                               // 0x0784 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaMaxWeightThreshold;                               // 0x0788 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0025[0x4];                                   // 0x078C MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        StaminaAudibleBreathingThreshold;                        // 0x0790 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        StaminaBreathingSwayThreshold;                           // 0x0794 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      MinRespiratoryRate;                                      // 0x0798 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      MaxRespiratoryRate;                                      // 0x079C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0026[0x18];                                  // 0x07A0 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MaxArmStrength;                                          // 0x07B8 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrength;                                             // 0x07BC Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthGainUnarmed;                                  // 0x07C0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthGainIdle;                                     // 0x07C4 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthGainWalking;                                  // 0x07C8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthGainRunning;                                  // 0x07CC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossIdle;                                     // 0x07D0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossIdleEngaged;                              // 0x07D4 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossWalking;                                  // 0x07D8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossWalkingEngaged;                           // 0x07DC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossRunning;                                  // 0x07E0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossRunningEngaged;                           // 0x07E4 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossSprinting;                                // 0x07E8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossJump;                                     // 0x07EC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossJumpEngaged;                              // 0x07F0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossCrouchToStanding;                         // 0x07F4 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossGoToProne;                                // 0x07F8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossGetUpFromProne;                           // 0x07FC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthLossLean;                                     // 0x0800 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthInstantLossLeanSpam;                          // 0x0804 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthInstantLossRunSpam;                           // 0x0808 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthInstantLossSprintSpam;                        // 0x080C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthMinWeightThreshold;                           // 0x0810 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmStrengthMaxWeightThreshold;                           // 0x0814 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0027[0xC];                                   // 0x0818 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      SwaySeed;                                                // 0x0824 Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       ArmSwayFreqRandRangeBase;                                // 0x0828 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       ArmSwayFreqRandRangeDev;                                 // 0x0830 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0028[0x10];                                  // 0x0838 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ArmTwitchChance;                                         // 0x0848 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ArmEaseInOutExp;                                         // 0x084C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0029[0x14];                                  // 0x0850 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MaxBreathingPitch;                                       // 0x0864 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0030[0x8];                                   // 0x0868 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        FlattenSwayDuration;                                     // 0x0870 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0031[0x4];                                   // 0x0874 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ControlBreathRecoveryScale;                              // 0x0878 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0032[0x24];                                  // 0x087C MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector2D                                       MaxBreathingDeviation;                                   // 0x08A0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MinReadySway;                                            // 0x08A8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MaxReadySway;                                            // 0x08B0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MinReadySwayCrouched;                                    // 0x08B8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MaxReadySwayCrouched;                                    // 0x08C0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MinEngagedSway;                                          // 0x08C8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MaxEngagedSway;                                          // 0x08D0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MinEngagedSwayCrouched;                                  // 0x08D8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       MaxEngagedSwayCrouched;                                  // 0x08E0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0033[0x14];                                  // 0x08E8 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        uint8_t                                                      RemoteDesiredEngagedAlpha;                               // 0x08FC Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0034[0xB];                                   // 0x08FD MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        uint8_t                                                      RemoteDesiredOffTargetAlpha;                             // 0x0908 Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0035[0x7];                                   // 0x0909 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnLoadoutApplied;                                        // 0x0910 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0036[0xF];                                   // 0x0911 FIX WRONG SIZE OF PREVIOUS PROPERTY
        GroundBranch::FTakeHitInfo                                   LastTakeHitInfo;                                         // 0x0920 BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic
        float                                                        FootstepTraceOffset;                                     // 0x0958 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0037[0x6];                                   // 0x095C MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bStartingRagdoll;                                        // 0x0962 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GroundBranch::EGBDeathState                                  DeathState;                                              // 0x0963 Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0038[0x4];                                   // 0x0964 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<BasicTypes::FName, GameplayTags::FGameplayTag> BoneNameToTagMap;                                        // 0x0968 Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::UMulticastInlineDelegate                         OnDeathStarted;                                          // 0x09B8 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0039[0xF];                                   // 0x09B9 FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnDeathFinished;                                         // 0x09C8 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0040[0xF];                                   // 0x09C9 FIX WRONG SIZE OF PREVIOUS PROPERTY
        float                                                        LastTakeHitTime;                                         // 0x09D8 BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LastTakeHitReplicatedTime;                               // 0x09DC BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        BodyImpactSoundSpeedSquared;                             // 0x09E0 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0041[0x4];                                   // 0x09E4 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        TimeBetweenBodyImpactSounds;                             // 0x09E8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0042[0x4];                                   // 0x09EC MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<BasicTypes::FName, float>                   BoneDamageScaleMap;                                      // 0x09F0 Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::FName                                            RootBone;                                                // 0x0A40 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            PelvisBone;                                              // 0x0A48 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            LeftFootBone;                                            // 0x0A50 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            RightFootBone;                                           // 0x0A58 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            EyesSocket;                                              // 0x0A60 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            BodyCamSocket;                                           // 0x0A68 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            HeadCamSocket;                                           // 0x0A70 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<GroundBranch::AGBInvItem*>                InventoryList;                                           // 0x0A78 ZeroConstructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0043[0x20];                                  // 0x0A88 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         InventoryItemAdded;                                      // 0x0AA8 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0044[0xF];                                   // 0x0AA9 FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         InventoryItemRemoved;                                    // 0x0AB8 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0045[0xF];                                   // 0x0AB9 FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0046[0x8];                                   // 0x0AC8 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnCosmeticTagsUpdated;                                   // 0x0AD0 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0047[0xF];                                   // 0x0AD1 FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0048[0x8];                                   // 0x0AE0 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GroundBranch::FGBCharVoiceInfo                               CharVoiceInfo;                                           // 0x0AE8 Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0049[0x24];                                  // 0x0AFC MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::EObjectTypeQuery>                 CollisionTraceObjectTypes;                               // 0x0B20 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<BasicTypes::FName>                        HeadCollisionBones;                                      // 0x0B30 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0050[0x10];                                  // 0x0B40 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        LeanLeftCollisionBones;                                  // 0x0B50 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0051[0x10];                                  // 0x0B60 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        LeanRightCollisionBones;                                 // 0x0B70 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0052[0x20];                                  // 0x0B80 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bShouldUpdateSavedLagCompInfo;                           // 0x0BA0 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0053[0x3];                                   // 0x0BA1 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MaxLagCompTime;                                          // 0x0BA4 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<BasicTypes::FName>                        BodyInstanceBones;                                       // 0x0BA8 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<BasicTypes::FName>                        RadialDamageBones;                                       // 0x0BB8 Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          BloodImpactEffect;                                       // 0x0BC8 ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0054[0x4];                                   // 0x0BEC FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          BloodExitEffect;                                         // 0x0BF0 ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0055[0x4];                                   // 0x0C14 FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          NeckDeathEffect;                                         // 0x0C18 ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0056[0x4];                                   // 0x0C3C FIX WRONG SIZE OF PREVIOUS PROPERTY
        CoreUObject::FVector                                         NeckDeathEffectLocationOffset;                           // 0x0C40 Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FRotator                                        NeckDeathEffectRotationOffset;                           // 0x0C4C Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TMap<GroundBranch::AGBPlayerState*, GroundBranch::FHitBulletIndexes> BulletHitMap;                                            // 0x0C58 Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<GroundBranch::FGBAISightPart>             CharSightParts;                                          // 0x0CA8 Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        CoreUObject::FSoftObjectPath                                 CharSightPartsCurve;                                     // 0x0CB8 Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        TheCurviestCurve::UCurveCurviest*                            CharSightPartsCurveRef;                                  // 0x0CD0 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FSoftObjectPath                                 LightLevelDistanceCurve;                                 // 0x0CD8 Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        TheCurviestCurve::UCurveCurviest*                            LightLevelDistanceCurveRef;                              // 0x0CF0 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        JumpResetTime;                                           // 0x0CF8 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        JumpHopTime;                                             // 0x0CFC Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      BulletIndex;                                             // 0x0D00 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0057[0x7];                                   // 0x0D01 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnTakeHit;                                               // 0x0D08 ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0058[0xF];                                   // 0x0D09 FIX WRONG SIZE OF PREVIOUS PROPERTY
        float                                                        RagdollImpulseStrength;                                  // 0x0D18 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsRagDoll : 1;                                          // 0x0D1C BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0059[0x3];                                   // 0x0D1D MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SkinnedDecalComponent::USkinnedDecalSampler*                 SkinnedDecalSampler;                                     // 0x0D20 Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GroundBranch::UGBLXRDetectionComponent*                      LightDetectionComponent;                                 // 0x0D28 Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        NVGBounce_WalkMultiplier;                                // 0x0D30 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        NVGBounce_RunMultiplier;                                 // 0x0D34 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        NVGBounce_SprintMultiplier;                              // 0x0D38 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        NVGBounce_ImpulseDecayRate;                              // 0x0D3C Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        NVGBounce_GlobalDecayRate;                               // 0x0D40 Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0060[0x10];                                  // 0x0D44 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        StandToCrouchPelvisHeightDifference;                     // 0x0D54 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0061[0x4];                                   // 0x0D58 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ProneYawOffCenterLimit;                                  // 0x0D5C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ProneMawYawForTurnInPlace;                               // 0x0D60 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LastShotTime;                                            // 0x0D64 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LastShotRadius;                                          // 0x0D68 ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0062[0x8];                                   // 0x0D6C MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        LeanSpamThreshold;                                       // 0x0D74 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0063[0x4];                                   // 0x0D78 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        RunSpamThreshold;                                        // 0x0D7C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0064[0x4];                                   // 0x0D80 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        SprintSpamThreshold;                                     // 0x0D84 Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0065[0x4];                                   // 0x0D88 MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        SprintTimeoutDuration;                                   // 0x0D8C Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

    public:
        bool WantsToSprint();
        bool WantsToRun();
        bool WantsToLeanRight();
        bool WantsToLeanLeft();
        bool WantsToLean();
        void UpdateSway(float DeltaSeconds);
        void UpdateStamina(float DeltaSeconds);
        void UpdateLean(float DeltaSeconds);
        void UnsetPlayerInteractions();
        void UnProne(bool bToCrouch, bool bClientSimulation);
        void UnarmedLayerSync();
        void TriggerRagdoll();
        void ToggleNightVision();
        void TakeFallingDamage(const Engine::FHitResult& Hit, float FallingSpeed);
        void StopVoice();
        void StopNetworkedMontage(Engine::UAnimMontage* AnimMontage);
        void SetWantsToSprint(bool bNewWantsToSprint);
        void SetWantsToRun(bool bNewWantsToRun);
        void SetRemoteHeadOffset();
        void SetRecoilCount(uint8_t NewRecoilCount);
        void SetRagdollPhysics();
        void SetNetworkedMontageNextSection(Engine::UAnimMontage* AnimMontage, const BasicTypes::FName& SectionNameToChange, const BasicTypes::FName& NextSection);
        void SetMinLightLevel(const BasicTypes::FName& Type, float Alpha);
        void SetMaxStamina(float NewMaxStamina);
        void SetMaxArmStrength(float NewMaxArmStrength);
        void SetLoadoutInfo(GroundBranch::AGBKitInfo* NewLoadoutInfo);
        void SetLightLevel(const BasicTypes::FName& Type, float Alpha);
        void SetEquipped(GroundBranch::EHand TargetHand, GroundBranch::AGBInvItem* NewEquipped, GroundBranch::AGBInvItem* LastEquipped);
        void SetDesiredOffTargetAlpha(float NewDesiredOffTargetAlpha);
        void SetDesiredLeanAlpha(float Alpha);
        void SetDesiredEngagedAlpha(float NewDesiredEngagedAlpha);
        void SetCurrentHand(GroundBranch::EHand NewHand);
        void SetCurrentAnimLayerClass(Engine::UAnimInstance* NewAnimLayerClass);
        void SetCharVoiceInfo(const CoreUObject::FPrimaryAssetId& NewCharVoiceDataId, uint8_t NewVoiceActorIndex);
        void SetBraceInfo(const CoreUObject::FVector& NewBraceLocation);
        void ServerSetWantsToSprint(bool bNewWantsToSprint);
        void ServerSetWantsToRun(bool bNewWantsToRun);
        void ServerSetRemoteHeadOffset(uint8_t NewRemoteHeadPitchDif, uint8_t NewRemoteHeadYawDif);
        void ServerSetMinLightLevel(const BasicTypes::FName& Type, float Alpha);
        void ServerSetLightLevel(const BasicTypes::FName& Type, float Alpha);
        void ServerSetDesiredOffTargetAlpha(uint8_t AlphaAsByte);
        void ServerSetDesiredLeanAlpha(uint8_t AlphaAsByte);
        void ServerSetDesiredEngagedAlpha(uint8_t AlphaAsByte);
        void ServerSetBraceLocation(const CoreUObject::FVector& NewBraceLocation);
        void ServerClearBraceInfo();
        float SeededFRandRange(float InMin, float InMax);
        void ResetSkinnedDecalSampler();
        void RemoveMeshComponentFromSkinnedDecalSampler(Engine::USkeletalMeshComponent* MeshToRemove);
        void Prone(bool bClientSimulation);
        void PlayVoice(const BasicTypes::FName& Key, bool bIsRadioMessage);
        void PlayTakeHitEffects();
        float PlayNetworkedMontage(Engine::UAnimMontage* AnimMontage, const BasicTypes::FName& SyncName, float PlayRate, const BasicTypes::FName& StartSectionName, Engine::UAnimInstance* AnimLayerClass, bool bReplicateToOwner);
        void PlayDamageEffects();
        void OptOut();
        void OnStopVoiceEvent();
        void OnStartProneEvent(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
        void OnStaminaChangedEvent(float OldStamina);
        void OnRep_RNGSeed();
        void OnRep_RemoteDesiredOffTargetAlpha();
        void OnRep_RemoteDesiredLeanAlpha();
        void OnRep_RemoteDesiredEngagedAlpha();
        void OnRep_RecoilCount();
        void OnRep_LoadoutInfo();
        void OnRep_IsProne();
        void OnRep_EquippedRight(GroundBranch::AGBInvItem* LastRightEquipped);
        void OnRep_EquippedLeft(GroundBranch::AGBInvItem* LastLeftEquipped);
        void OnRep_DeathState(GroundBranch::EGBDeathState OldDeathState);
        void OnRep_CurrentAnimLayerClass();
        void OnRep_CharVoiceInfo();
        void OnPlayVoiceEvent(AkAudio::UAkAudioEvent* VoiceAudioEvent, bool bIsLocalPlayer);
        void OnPhysicsCollision(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit);
        void OnMantleEvent();
        void OnLandedEffects(const Engine::FHitResult& Hit, float FallingSpeed);
        void OnHopped();
        void OnEndProneEvent(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
        void NotifyPlayerHasFired(float ShotSoundLevel);
        void NetworkedMontageJumpToSection(const BasicTypes::FName& SectionName);
        void NetMulticastPlayVoice(const BasicTypes::FName& Key, bool bIsRadioMessage);
        bool ModifyDamageTaken(int32_t* AppliedDamage, int32_t* Damage, CoreUObject::FVector* Momentum, const Engine::FHitResult& HitInfo, Engine::AController* EventInstigator, Engine::AActor* DamageCauser, Engine::UDamageType* DamageType);
        bool ModifyDamageCaused(int32_t* AppliedDamage, int32_t* Damage, CoreUObject::FVector* Momentum, const Engine::FHitResult& HitInfo, Engine::AActor* Victim, Engine::AController* EventInstigator, Engine::AActor* DamageCauser, Engine::UDamageType* DamageType);
        bool IsUICharacter();
        bool IsSprinting();
        bool IsRunning();
        bool IsRagdoll();
        bool IsProne();
        bool IsLocallyViewed();
        bool IsLeading();
        bool IsInInventory(GroundBranch::AGBInvItem* InvItem);
        bool IsFrozen();
        bool IsEngaged();
        bool IsDummyCharacter();
        bool IsCrouched();
        bool IsBeingLed();
        bool IsAlive();
        bool Is3DMovementMode();
        uint8_t IncrementBulletIndex();
        bool GetWantsToControlBreath();
        AkAudio::UAkComponent* GetVoiceComp();
        float GetVisibilityModifier();
        float GetViewPitchMin();
        float GetViewPitchMax();
        float GetTracedCollisionOffset();
        float GetTotalItemWeight();
        CoreUObject::FRotator GetSwayOffset();
        float GetStamina();
        SkinnedDecalComponent::USkinnedDecalSampler* GetSkinnedDecalSampler();
        CoreUObject::FTransform GetSightLineTransform();
        BasicTypes::FName GetShoulderSlingPoint(GroundBranch::EHand TargetHand);
        float GetRemoteViewPitch();
        CoreUObject::FRotator GetRemoteHeadOffset();
        CoreUObject::FRotator GetRecoilOffset();
        uint8_t GetRecoilCount();
        float GetRecoilAlpha();
        float GetProneYawOffCenterLimit();
        float GetProneYawCenter();
        bool GetPrevEquipped(GroundBranch::AGBInvItem** OutPrevEquippedLeft, GroundBranch::AGBInvItem** OutPrevEquippedRight);
        BasicTypes::FName GetPelvisBone();
        GroundBranch::EHand GetOppositeHandEnum(GroundBranch::EHand EquippedType);
        float GetOffTargetAlpha();
        BasicTypes::FName GetNetworkedMontageSyncName();
        BasicTypes::FName GetNetworkedMontageSection();
        Engine::UAnimMontage* GetNetworkedMontage();
        float GetMovementSpeed();
        float GetMovementDirection();
        float GetMinLightLevel(const BasicTypes::FName& Type);
        float GetMaxStamina();
        float GetMaxArmStrength();
        GroundBranch::AGBPlayerController* GetLocalViewer();
        float GetLightLevelScale();
        GroundBranch::UGBLXRDetectionComponent* GetLightDetectionComponent();
        float GetLeanAlpha();
        float GetLastTakeHitTime();
        BasicTypes::FName GetItemHandSocket(GroundBranch::EHand TargetHand);
        GroundBranch::AGBInvItem* GetItemAttachedToSocket(const BasicTypes::FName& SocketName);
        BasicTypes::TArray<GroundBranch::AGBInvItem*> GetInvItemsByTags(const GameplayTags::FGameplayTagContainer& InvItemTags, bool bExactMatch);
        BasicTypes::TArray<GroundBranch::AGBInvItem*> GetInvItemsByItemAssetId(const CoreUObject::FPrimaryAssetId& InvItemAssetId);
        BasicTypes::TArray<GroundBranch::AGBInvItem*> GetInvItemsByClass(GroundBranch::AGBInvItem* InvItemClass);
        BasicTypes::TArray<GroundBranch::AGBInvItem*> GetInvItemsAttachedToSocket(const BasicTypes::FName& SocketName);
        GroundBranch::AGBInvItem* GetInvItemAttachedToSocket(const BasicTypes::FName& SocketName);
        BasicTypes::TArray<GroundBranch::AGBInvItem*> GetInventoryList();
        BasicTypes::FName GetHeadCamSocket();
        GroundBranch::EHand GetHandEnumFromSocket(const BasicTypes::FName& SocketName);
        GroundBranch::EHand GetHandEnum(GroundBranch::EHand EquippedType);
        GroundBranch::UGBCharacterMovement* GetGBMovementComp();
        AkAudio::UAkComponent* GetFootstepComp();
        float GetFlattenSwayTime();
        GroundBranch::AGBInvItem* GetFirstInvItemByTags(const GameplayTags::FGameplayTagContainer& InvItemTags, bool bExactMatch, GroundBranch::AGBInvItem* CastToInvItemClass);
        GroundBranch::AGBInvItem* GetFirstInvItemByItemAssetId(const CoreUObject::FPrimaryAssetId& InvItemAssetId, GroundBranch::AGBInvItem* CastToInvItemClass);
        GroundBranch::AGBInvItem* GetFirstInvItemByClass(GroundBranch::AGBInvItem* InvItemClass);
        BasicTypes::FName GetEyesSocket();
        float GetEquippedRotationalInertiaModifier();
        GroundBranch::AGBInvItem* GetEquipped(GroundBranch::EHand TargetHand);
        float GetEngagedAlpha();
        float GetDesiredOffTargetAlpha();
        float GetDesiredLeanAlpha();
        float GetDesiredEngagedAlpha();
        GroundBranch::EGBDeathState GetDeathState();
        GroundBranch::EHand GetCurrentHand();
        Engine::UAnimInstance* GetCurrentAnimLayerClass();
        float GetCrouchAlpha();
        GameplayTags::FGameplayTagContainer GetCosmeticTags();
        BasicTypes::FName GetChestSlingPoint();
        AkAudio::UAkAudioEvent* GetCharVoiceAudioEvent(const BasicTypes::FName& Key);
        float GetBreathingSinValue();
        BasicTypes::FName GetBodyCamSocket();
        float GetArmStrength();
        Engine::UAnimInstance* GetAnimInstance();
        CoreUObject::FRotator GetAimCenterOffset();
        void ForceClientEquippedSync();
        void DestroyInventory(bool bForceClient);
        void ClientSyncEquipped(GroundBranch::AGBInvItem* ServerEquippedLeft, GroundBranch::AGBInvItem* ServerEquippedRight);
        void ClientAddDefaultItems();
        bool ClearSimilarItems(const GameplayTags::FGameplayTagContainer& InvItemTags, bool bExactMatch, GroundBranch::AGBInvItem* Exclude);
        void ClearBraceInfo();
        void CleanUpLocalInventory();
        bool CanDamageRadial(const CoreUObject::FVector& DamageOrigin, BasicTypes::TArray<Engine::AActor*> IgnoreActors, Engine::ECollisionChannel TraceChannel, BasicTypes::TArray<PhysicsCore::EPhysicalSurface> SurfaceTypesToIgnore, Engine::FHitResult* OutHit);
        void AnimNotifyFootstep(bool bInLeftFoot);
        void AddStaminaInstantLoss(float Amount);
        void AddRecoil(const GroundBranch::FGBRecoilData& RecoilData);
        void AddDefaultItemsEvent();
        void AddDefaultItems();
        void AddArmStrengthInstantLoss(float Amount);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/GroundBranch.GBCharacter");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
